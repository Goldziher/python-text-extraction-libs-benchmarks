[project]
name = "python-text-extraction-benchmarks"
version = "0.1.0"
description = "Comprehensive benchmarking suite for Python text extraction libraries"
readme = "README.md"
keywords = [
  "benchmarking",
  "comparison",
  "document-processing",
  "performance-testing",
  "text-extraction",
]
license = { text = "MIT" }
authors = [ { name = "Na'aman Hirschfeld", email = "nhirschfed@gmail.com" } ]
requires-python = ">=3.13"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Testing",
  "Topic :: Text Processing :: General",
  "Typing :: Typed",
]

dependencies = [
  "anyio>=4.9.0",
  "click>=8.2.1",
  "docling>=2.41.0",
  "extractous>=0.1.0",
  "kreuzberg",
  "markitdown>=0.0.1a2",
  "matplotlib>=3.8.0",
  "msgspec>=0.18.0",
  "pandas>=2.3.1",
  "pdfplumber>=0.11.0",
  "playa-pdf>=0.1.0",
  "plotly>=5.15.0",
  "psutil>=7.0.0",
  "pymupdf>=1.24.0",
  "rich>=14.0.0",
  "scikit-learn>=1.3.0",
  "seaborn>=0.13.0",
  "sentence-transformers>=2.2.0",
  "textstat>=0.7.0",
  "unstructured[all-docs]>=0.18.5",
]

optional-dependencies.ocr = [
  "kreuzberg[easyocr]",
  "kreuzberg[paddleocr]",
]

scripts.benchmark = "src.cli:main"

[dependency-groups]
dev = [
  "covdefaults>=2.3.0",
  "mdformat>=0.7.22",
  "mdformat-mkdocs>=4.3.0",
  "mypy>=1.16.1",
  "pandas-stubs>=2.2.0",
  "pre-commit>=4.2.0",
  "pytest>=8.4.1",
  "pytest-asyncio>=0.25.0",
  "pytest-cov>=6.2.1",
  "pytest-mock>=3.14.0",
  "pytest-timeout>=2.4.0",
  "ruff>=0.12.3",
  "types-psutil>=7.0.0",
  "uv-bump",
]

[tool.ruff]
target-version = "py313"
line-length = 120
src = [ "src" ]
format.docstring-code-line-length = 120
format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
  "A005",    # Module shadows standard library (our types.py is fine)
  "ANN201",  # Missing return type annotation (demo files)
  "ANN401",  # Dynamically typed ANY for kwargs
  "ARG002",  # Unused method argument (method signatures matter)
  "BLE001",  # Blind exception catching (appropriate for CLI error handling)
  "COM812",  # Conflicts with formatter
  "D100",    # Missing docstring in public module
  "D103",    # Missing docstring in public function
  "D104",    # Missing docstring in public package
  "D107",    # Missing docstring in __init__
  "D205",    # 1 blank line required between summary line and description
  "E501",    # Line too long, handled by ruff format
  "EM",      # Exception messages,
  "F841",    # Local variable assigned but never used (plotting variables)
  "FBT",     # Boolean-typed positional argument in function definition
  "FIX",     # We allow todo and fixme comments
  "ISC001",  # Conflicts with formatter
  "PD010",   # pivot vs pivot_table preference
  "PLC0415", # Import should be at top-level (we use conditional imports)
  "PLR2004", # Magic values (200 for text preview is fine)
  "PLW0603", # Using global statement is discouraged
  "PTH123",  # Path.open vs open (open is fine for simple cases)
  "PYI036",  # __aexit__ annotations (Any is fine for this context)
  "S110",    # try-except-pass detected
  "S603",    # subprocess-without-shell-equals-true
  "SIM105",  # Use contextlib.suppress (pass is clearer)
  "T201",    # print found (demo file is fine)
  "TC001",   # Type checking imports (not needed for this codebase)
  "TC003",   # Type checking imports (not needed for this codebase)
  "TD",      # We allow todo and fixme comments
  "TRY",     # Try except block, rules are too strict
  "UP036",   # Version blocks (we support Python 3.13+ only)
]
lint.per-file-ignores."tests/**/*.py" = [ "S101" ] # Allow assert in tests
lint.isort.known-first-party = [ "src" ]
lint.mccabe.max-complexity = 15
lint.pydocstyle.convention = "google"
lint.pylint.max-args = 10
lint.pylint.max-branches = 15
lint.pylint.max-returns = 10

[tool.pyproject-fmt]
keep_full_version = true
max_supported_python = "3.13"

[tool.uv.sources]
uv-bump = { git = "https://github.com/Goldziher/uv-bump" }
kreuzberg = { path = "../kreuzberg", editable = true }
