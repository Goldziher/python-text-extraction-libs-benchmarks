[{"file_path":"test_documents/text/fake-text.txt","file_size":169,"file_type":"txt","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0012874603271484375,"startup_time":null,"peak_memory_mb":254.14453125,"avg_memory_mb":254.14453125,"peak_cpu_percent":3552.1,"avg_cpu_percent":710.42,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: fake-text.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064516.3721702,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/book-war-and-peace-1p.txt","file_size":3045,"file_type":"txt","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0013630390167236328,"startup_time":null,"peak_memory_mb":254.14453125,"avg_memory_mb":254.14453125,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: book-war-and-peace-1p.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064516.487804,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/selected_pdfs.txt","file_size":2374,"file_type":"txt","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0023393630981445312,"startup_time":null,"peak_memory_mb":254.14453125,"avg_memory_mb":254.14453125,"peak_cpu_percent":3437.8,"avg_cpu_percent":687.5600000000001,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: selected_pdfs.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064516.6012118,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/norwich-city.txt","file_size":48194,"file_type":"txt","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0015063285827636719,"startup_time":null,"peak_memory_mb":254.14453125,"avg_memory_mb":254.14453125,"peak_cpu_percent":549.2,"avg_cpu_percent":109.84,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: norwich-city.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064516.7227519,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_270.pdf","file_size":94702,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":0,"extraction_time":34.584851026535034,"startup_time":null,"peak_memory_mb":853.4609375,"avg_memory_mb":733.59765625,"peak_cpu_percent":25.0,"avg_cpu_percent":5.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"RemoteDisconnected","error_message":"Remote end closed connection without response","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064551.4296403,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/jpn-vert.jpeg","file_size":35012,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":0,"extraction_time":14.865034103393555,"startup_time":null,"peak_memory_mb":1618.578125,"avg_memory_mb":1465.5546875,"peak_cpu_percent":255.5,"avg_cpu_percent":51.1,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":15120959776614916295,"filename":"jpn-vert.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064566.5325608,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_180.pdf","file_size":94703,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":0,"extraction_time":3.667692184448242,"startup_time":null,"peak_memory_mb":1596.51171875,"avg_memory_mb":1556.5078125,"peak_cpu_percent":192.5,"avg_cpu_percent":57.7,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2530576989861832966,"filename":"ocr_test_rotated_180.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064570.4772124,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_90.pdf","file_size":94126,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":0,"extraction_time":3.6880719661712646,"startup_time":null,"peak_memory_mb":1621.9921875,"avg_memory_mb":1584.165625,"peak_cpu_percent":193.3,"avg_cpu_percent":76.96000000000001,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6989291015361162334,"filename":"ocr_test_rotated_90.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064574.4349928,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/chi_sim_image.jpeg","file_size":20104,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":0,"extraction_time":6.594712972640991,"startup_time":null,"peak_memory_mb":1672.8828125,"avg_memory_mb":1617.3984375,"peak_cpu_percent":292.8,"avg_cpu_percent":96.44000000000001,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":13643946977964376290,"filename":"chi_sim_image.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064581.300202,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test.pdf","file_size":93549,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":0,"extraction_time":23.816068649291992,"startup_time":null,"peak_memory_mb":1698.19140625,"avg_memory_mb":1660.41171875,"peak_cpu_percent":2070.0,"avg_cpu_percent":486.2,"total_io_mb":null,"status":"success","character_count":94,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":94,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":5.333333333333333,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":39.33000000000001,"gunning_fog_index":14.0,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":false},"overall_quality_score":0.40228750000000013,"extracted_text":"Docling bundles PDF document conversion to JSON and Markdown in an easy self contained package","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":14853448746796404529,"filename":"ocr_test.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064605.3900802,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.xlsx","file_size":6339,"file_type":"xlsx","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.009864091873168945,"startup_time":null,"peak_memory_mb":1534.6015625,"avg_memory_mb":1534.6015625,"peak_cpu_percent":97.9,"avg_cpu_percent":19.580000000000002,"total_io_mb":null,"status":"success","character_count":1314,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1314,"word_count":136,"sentence_count":7,"paragraph_count":2,"avg_word_length":4.492647058823529,"avg_sentence_length":20.285714285714285,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.0,"flesch_reading_ease":88.64013513513517,"gunning_fog_index":5.30965250965251,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.635800168918919,"extracted_text":"| Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   |\n|----------------|----------------|----------------|----------------|----------------|\n| Team           | Location       | Stanley Cups   | None           | None           |\n| Blues          | STL            | 1.0            | None           | None           |\n| Flyers         | PHI            | 2.0            | None           | None           |\n| Maple Leafs    | TOR            | 13.0           | None           | None           |\n\n| Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   |\n|-------------------------|-------------------------|-------------------------|-------------------------|-------------------------|\n| Team                    | Location                | Stanley Cups            | None                    | None                    |\n| Blues                   | STL                     | 1.0                     | None                    | None                    |\n| Flyers                  | PHI                     | 2.0                     | None                    | None                    |\n| Maple Leafs             | TOR                     | 0.0                     | None                    | None                    |","extracted_metadata":{"origin":{"mimetype":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","binary_hash":13071959898645931525,"filename":"stanley-cups.xlsx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064605.6690311,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.csv","file_size":91,"file_type":"csv","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.002063274383544922,"startup_time":null,"peak_memory_mb":1534.6015625,"avg_memory_mb":1534.6015625,"peak_cpu_percent":2461.2,"avg_cpu_percent":492.23999999999995,"total_io_mb":null,"status":"success","character_count":269,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":269,"word_count":37,"sentence_count":1,"paragraph_count":1,"avg_word_length":3.5675675675675675,"avg_sentence_length":37.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.47,"gibberish_ratio":0.0,"flesch_reading_ease":74.27000000000001,"gunning_fog_index":8.9,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5109625000000001,"extracted_text":"| Stanley Cups   |          |              |\n|----------------|----------|--------------|\n| Team           | Location | Stanley Cups |\n| Blues          | STL      | 1            |\n| Flyers         | PHI      | 2            |\n| Maple Leafs    | TOR      | 13           |","extracted_metadata":{"origin":{"mimetype":"text/csv","binary_hash":14995389103761630903,"filename":"stanley-cups.csv"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064605.9259162,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/complex-table.html","file_size":3010,"file_type":"html","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.020326614379882812,"startup_time":null,"peak_memory_mb":1534.6015625,"avg_memory_mb":1534.6015625,"peak_cpu_percent":96.7,"avg_cpu_percent":19.34,"total_io_mb":null,"status":"success","character_count":1960,"word_count":189,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1960,"word_count":189,"sentence_count":1,"paragraph_count":4,"avg_word_length":4.148148148148148,"avg_sentence_length":189.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":-28.167653061224442,"gunning_fog_index":43.28163265306122,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.634375,"extracted_text":"# Quarterly Sales Report\n\n| Region        | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | Total         |\n|---------------|-----------------------------|-----------------------------|-----------------------------|-----------------------------|---------------|\n| Region        | Q1                          | Q2                          | Q3                          | Q4                          | Total         |\n| North America | North America               | North America               | North America               | North America               | North America |\n| USA           | $150                        | $180                        | $165                        | $200                        | $695          |\n| Canada        | $45                         | $52                         | $48                         | $60                         | $205          |\n| Europe        | Europe                      | Europe                      | Europe                      | Europe                      | Europe        |\n| UK            | $80                         | $95                         | $88                         | $110                        | $373          |\n| Germany       | $65                         | $75                         | $70                         | $85                         | $295          |\n| France        | $40                         | $48                         | $45                         | $55                         | $188          |\n| Grand Total   | $380                        | $450                        | $416                        | $510                        | $1,756        |\n\n## Performance Metrics\n\n| Metric         | Target   | Actual   | Status     |\n|----------------|----------|----------|------------|\n| Annual Revenue | $1,500K  | $1,756K  | ✓ Exceeded |\n| Growth Rate    | 10%      | 17%      | ✓ Exceeded |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":143411372199986808,"filename":"complex-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064606.2027285,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/Sinthgunt.html","file_size":71465,"file_type":"html","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.07449650764465332,"startup_time":null,"peak_memory_mb":1534.6015625,"avg_memory_mb":1534.6015625,"peak_cpu_percent":80.0,"avg_cpu_percent":16.0,"total_io_mb":null,"status":"success","character_count":6581,"word_count":991,"error_type":null,"error_message":null,"quality_metrics":{"char_count":6581,"word_count":991,"sentence_count":108,"paragraph_count":61,"avg_word_length":5.579212916246216,"avg_sentence_length":9.37037037037037,"extraction_completeness":1.0,"text_coherence":0.7037037037037037,"noise_ratio":0.02279288861875095,"gibberish_ratio":0.024691358024691357,"flesch_reading_ease":41.66122901135651,"gunning_fog_index":13.792768062425976,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.6058515732674654,"extracted_text":"## Contents\n\nmove to sidebar\n\nhide\n\n- (Top)\n- 1 Etymology\n- 2 Placement\n- 3 Notes\n- 4 References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools\n\nmove to sidebar\n\nhide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance\n\nmove to sidebar\n\nhide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt[needs  IPA] is a figure in Germanic mythology, attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm. In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt),[1] and the two sisters are cited as both producing incantations to heal the horse of Phol, another otherwise unattested figure but possibly the same as Balder, who is named elsewhere in the charm. The two are then followed by Friia and Uolla, also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[edit]\n\nThe etymology of Sinthgunt is unclear.  In the original manuscript, Sinthgunt is spelled Sinhtgunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic *Sin-naχt-gund, i.e., \"the night-walking one\".[2] As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól), this etymology has been interpreted as a reference to the moon. However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology, Máni, a male figure. According to Rudolf Simek, the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples.[3]\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [de], because the first element Sinht- cannot be based on the presupposed earlier Germanic *sinχt-. Such a Germanic form would have yielded Old High German *sīht by regular sound change.[4] The amended Sinthgunt presupposes a Proto-Germanic compound *Senþa-gunþjō, the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from *Senþa-χilðijō, with its second element also meaning \"fight\", cf. Old Norse hildr, Old English hild).[5] Simek also mentions the interpretation \"heavenly body, star\".[6]\n\n## Placement\n\n[edit]\n\nThe figures Fulla (Uolla) and Frigg (Friia) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures.[7] Similarly, Wolfgang Beck [de] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources.[8]\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names.[9] Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers.[10]\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm, as a specially defined group of Germanic goddesses.[11]\n\n## Notes\n\n[edit]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge. Studien über die Entstehung der nordischen Götter- und Heldensagen. München 1889, p. 298. Cf. Rudolf Simek. Lexikon der germanischen Mythologie. Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology. Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck. Die Merseburger Zaubersprüche. Eine Einführung. Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann. \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm. Altgermanische Religionsgeschichte, Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[edit]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature. Oxford University Press. ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend. Cassell. ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology. D.S. Brewer. ISBN 0-85991-513-1\n\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\"\n\nCategory:\n\n- Germanic goddesses\n\nHidden categories:\n\n- Articles with short description\n- Short description matches Wikidata\n- Articles needing IPA\n- Good articles\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\nWikimedia Foundation\nPowered by MediaWiki\n\nSearch\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":3790431279105409656,"filename":"Sinthgunt.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064606.5340412,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/simple-table.html","file_size":1623,"file_type":"html","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.007650136947631836,"startup_time":null,"peak_memory_mb":1534.6015625,"avg_memory_mb":1534.6015625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"success","character_count":474,"word_count":75,"error_type":null,"error_message":null,"quality_metrics":{"char_count":474,"word_count":75,"sentence_count":6,"paragraph_count":4,"avg_word_length":4.346666666666667,"avg_sentence_length":13.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.51,"gibberish_ratio":0.0,"flesch_reading_ease":54.2406981981982,"gunning_fog_index":7.872072072072072,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.7565508727477478,"extracted_text":"# Sample Data Table\n\n| Product    | Category    | Price   |   Stock |\n|------------|-------------|---------|---------|\n| Laptop     | Electronics | $999.99 |      25 |\n| Desk Chair | Furniture   | $199.99 |       8 |\n| Coffee Mug | Kitchen     | $9.99   |     150 |\n| Notebook   | Office      | $3.49   |      75 |\n\n## Summary Statistics\n\n| Total Products:   | 4         |\n|-------------------|-----------|\n| Average Price:    | $303.12   |\n| Total Stock:      | 258 units |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":9830432069415051293,"filename":"simple-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064606.8003886,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Program Design in the UNIX Environment..pdf","file_size":26912,"file_type":"pdf","category":"tiny","framework":"docling","iteration":0,"extraction_time":13.537784814834595,"startup_time":null,"peak_memory_mb":1801.76171875,"avg_memory_mb":1748.3296875,"peak_cpu_percent":259.4,"avg_cpu_percent":51.879999999999995,"total_io_mb":null,"status":"success","character_count":24911,"word_count":4167,"error_type":null,"error_message":null,"quality_metrics":{"char_count":24911,"word_count":4167,"sentence_count":199,"paragraph_count":83,"avg_word_length":4.958723302135829,"avg_sentence_length":21.0,"extraction_completeness":1.0,"text_coherence":0.95,"noise_ratio":0.13693147605475492,"gibberish_ratio":0.017142857142857144,"flesch_reading_ease":47.80305316314639,"gunning_fog_index":14.43295513058626,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6518702509607774,"extracted_text":"## Program design in the UNIX /2020 environment\n\nRob Pike\n\nBrian W. Kernighan\n\n## ABSTRACT\n\nMuch of the power of the UNIX operating system comes from a style of program design that makes programs easy to use and, more important, easy to combine with other programs. This style has been called the use of software tools , and depends more on how the programs fit into the programming environment /2014 how they can be used with other programs /2014 than on how they are designed internally. But as the system has become commercially successful and has spread widely, this style has often been compromised, to the detriment of all users. Old programs have become encrusted with dubious features. Newer programs are not always written with attention to proper separation of function and design for interconnection. This paper discusses the elements of program design, showing by example good and bad design, and indicates some possible trends for the future.\n\nThe UNIX operating system has become a great commercial success, and is likely to be the standard operating system for microcomputers and some mainframes in the coming years.\n\nThere are good reasons for this popularity. One is portability: the operating system kernel and the applications programs are written in the programming language C, and thus can be moved from one type of computer to another with much less effort than would be involved in recreating them in the assembly language of each machine. Essentially the same operating system therefore runs on a wide variety of computers, and users needn't learn a new system when new hardware comes along. Perhaps more important, vendors that sell the UNIX system needn't provide new software for each new machine; instead, their software can be compiled and run without change on any hardware, which makes the system commercially attractive. There is also an element of zealotry: users of the system tend to be enthusiastic and to expect it wherever they go; the students who used the UNIX system in university a few years ago are now in the job market and often demand it as a condition of employment.\n\nBut the UNIX system was popular long before it was even portable, let alone a commercial success. The reasons for that are more interesting.\n\nExcept for the initial PDP-7 version, the UNIX system was written for the DEC PDP-11, a machine that was (deservedly) very popular. PDP-11's were powerful enough to do real computing, but small enough to be affordable by small organizations such as academic departments in universities.\n\nThe early UNIX system was smaller but more effective and technically more interesting than competing systems on the same hardware. It provided a number of innovative applications of computer science, showing the benefits to be obtained by a judicious blend of theory and practice. Examples include the yacc parser-generator, the diff file comparison program, and the pervasive use of regular expressions to describe string patterns. These led in turn to new programming languages and interesting software for applications like program development, document preparation and circuit design.\n\nSince the system was modest in size, and since essentially everything was written in C, the software was easy to modify, to customize for particular applications or merely to support a view of the world\n\n__________________\n\n/2020 UNIX is a trademark of Bell Laboratories.\n\ndifferent from the original. (This ease of change is also a weakness, of course, as evidenced by the plethora of different versions of the system.)\n\nFinally, the UNIX system provided a new style of computing, a new way of thinking of how to attack a problem with a computer. This style was based on the use of tools : using programs separately or in combination to get a job done, rather than doing it by hand, by monolithic self-sufficient subsystems, or by special-purpose, one-time programs. This has been much discussed in the literature, so we don't need to repeat it here; see [1], for example.\n\nThe style of use and design of the tools on the system are closely related. The style is still evolving, and is the subject of this essay: in particular, how the design and use of a program fit together, how the tools fit into the environment, and how the style influences solutions to new problems. The focus of the discussion is a single example, the program cat , which concatenates a set of files onto its standard output. cat is a simple program, both in implementation and in use; it is essential to the UNIX system; and it is a good illustration of the kinds of decisions that delight both supporters and critics of the system. (Often a single property of the system will be taken as an asset or as a fault by different audiences; our audience is programmers, because the UNIX environment is designed fundamentally for programming.) Even the name cat is typical of UNIX program names: it is short, pronounceable, but not conventional English for the job it does. (For an opposing viewpoint, see [2].) Most important, though, cat in its usages and variations exemplifies UNIX program design style and how it has been interpreted by different communities.\n\n```\n11/3/71 NAME c_a_t_ -- concatenate and print SYNOPSIS c_a_t_ f_i_l_e_1_ ... DESCRIPTION c_a_t_ reads each file in sequence and writes it on the standard output stream. Thus: c_a_t_ f_i_l_e_ is about the easiest way to print a file. Also: c_a_t_ f_i_l_e_1_ f_i_l_e_2_ >f_i_l_e_3_ is about the easiest way to concatenate files. If no input file is given c_a_t_ reads from the standard input file. FILES --SEE ALSO pr, cp DIAGNOSTICS none; if a file cannot be found it is ignored. BUGS --OWNER ken, dmr\n```\n\n<!-- formula-not-decoded -->\n\nFigure 1: Manual page for cat , UNIX 1st Edition, November, 1971\n\nFigure 1 is the manual page for cat from the UNIX 1st Edition manual. Evidently, cat copies its input to its output. The input is normally taken from a sequence of one or more files, but it can come from the standard input. The output is the standard output. The manual suggests two uses, the general file copy:\n\n## cat file1 file2 &gt;file3\n\nand printing a file on the terminal:\n\ncat file\n\nThe general case is certainly what was intended in the design of the program. Output redirection (provided by the &gt; operator, implemented by the UNIX shell) makes cat a fine general-purpose file concatenator and a valuable adjunct for other programs, which can use cat to process filenames, as in:\n\n<!-- formula-not-decoded -->\n\nThe fact that cat will also print on the terminal is a special case. Perhaps surprisingly, in practice it turns out that the special case is the main use of the program. /2020\n\nThe design of cat is typical of most UNIX programs: it implements one simple but general function that can be used in many different applications (including many not envisioned by the original author). Other commands are used for other functions. For example, there are separate commands for file system tasks like renaming files, deleting them or telling how big they are. Other systems instead lump these into a single ''file system'' command with an internal structure and command language of its own. (The PIP file copy program found on operating systems like CP/M or RSX-11 is an example.) That approach is not necessarily worse or better, but it is certainly against the UNIX philosophy. Unfortunately, such programs are not completely alien to the UNIX system /2014 some mail-reading programs and text editors, for example, are large self-contained ''subsystems'' that provide their own complete environments and mesh poorly with the rest of the system. Most such subsystems, however, are usually imported from or inspired by programs on other operating systems with markedly different programming environments.\n\nThere are some significant advantages to the traditional UNIX system approach. The most important is that the surrounding environment /2014 the shell and the programs it can invoke /2014 provides a uniform access to system facilities. Filename argument patterns are expanded by the shell for all programs, without prearrangement in each command. The same is true of input and output redirection. Pipes are a natural outgrowth of redirection. Rather than decorate each command with options for all relevant pre- and postprocessing, each program expects as input, and produces as output, concise and header-free textual data that connects well with other programs to do the rest of the task at hand. It takes some programming discipline to build a program that works well in this environment /2014 primarily, to avoid the temptation to add features that conflict with or duplicate services provided by other commands /2014 but it's well worthwhile.\n\nGrowth is easy when the functions are well separated. For example, the 7th Edition shell was augmented with a backquote operator that converts the output of one program into the arguments to another, as in\n\n## cat 'cat filelist'\n\nNo changes were made in any other program when this operator was invented; because the backquote is interpreted by the shell, all programs called by the shell acquire the feature transparently and uniformly. If special characters like backquotes were instead interpreted, even by calling a standard subroutine, by each program that found the feature appropriate, every program would require (at least) recompilation whenever someone had a new idea. Not only would uniformity be hard to enforce, but experimentation would be harder because of the effort of installing any changes.\n\nThe UNIX 7th Edition system introduced two changes in cat . First, files that could not be read, either because of denied permissions or simple non-existence, were reported rather than ignored. Second, and less desirable, was the addition of a single optional argument -u , which forced cat to unbuffer its output (the reasons for this option, which has disappeared again in the 8th Edition of the system, are technical and irrelevant here.)\n\nBut the existence of one argument was enough to suggest more, and other versions of the system\n\n__________________\n\n/2020 The use of cat to feed a single input file to a program has to some degree superseded the shell's &lt; operator, which illustrates that general-purpose constructs /2014 like cat and pipes /2014 are often more natural than convenient special-purpose ones.\n\nsoon embellished cat with features. This list comes from cat on the Berkeley distribution of the UNIX system:\n\n- -s strip multiple blank lines to a single instance\n\n- -n number the output lines\n\n- -b number only the non-blank lines\n\n- -v make non-printing characters visible\n\n- -ve mark ends of lines\n\n- -vt change representation of tab\n\nIn System V, there are similar options and even a clash of naming: -s instructs cat to be silent about non-existent files. But none of these options are appropriate additions to cat ; the reasons get to the heart of how UNIX programs are designed and why they work well together.\n\nIt's easy to dispose of (Berkeley) -s , -n and -b : all of these jobs are readily done with existing tools like sed and awk . For example, to number lines, this awk invocation suffices:\n\n<!-- formula-not-decoded -->\n\nIf line-numbering is needed often, this command can be packaged under a name like linenumber and put in a convenient public place. Another possibility is to modify the pr command, whose job is to format text such as program source for output on a line printer. Numbering lines is an appropriate feature in pr ; in fact UNIX System V pr has a -n option to do so. There never was a need to modify cat ; these options are gratuitous tinkering.\n\nBut what about -v ? That prints non-printing characters in a visible representation. Making strange characters visible is a genuinely new function, for which no existing program is suitable. ('' sed -n l '', the closest standard possibility, aborts when given very long input lines, which are more likely to occur in files containing non-printing characters.) So isn't it appropriate to add the -v option to cat to make strange characters visible when a file is printed?\n\nThe answer is ''No.'' Such a modification confuses what cat 's job is /2014 concatenating files /2014 with what it happens to do in a common special case /2014 showing a file on the terminal. A UNIX program should do one thing well, and leave unrelated tasks to other programs. cat 's job is to collect the data in files. Programs that collect data shouldn't change the data; cat therefore shouldn't transform its input.\n\nThe preferred approach in this case is a separate program that deals with non-printable characters. We called ours vis (a suggestive, pronounceable, non-English name) because its job is to make things visible. As usual, the default is to do what most users will want /2014 make strange characters visible /2014 and as necessary include options for variations on that theme. By making vis a separate program, related useful functions are easy to provide. For example, the option -s strips out (i.e., discards) strange characters, which is handy for dealing with files from other operating systems. Other options control the treatment and format of characters like tabs and backspaces that may or may not be considered strange in different situations. Such options make sense in vis because its focus is entirely on the treatment of such characters. In cat , they require an entire sub-language within the -v option, and thus get even further away from the fundamental purpose of that program. Also, providing the function in a separate program makes convenient options such as -s easier to invent, because it isolates the problem as well as the solution.\n\nOne possible objection to separate programs for each task is efficiency. For example, if we want numbered lines and visible characters it is probably more efficient to run the one command\n\n<!-- formula-not-decoded -->\n\n## than the two-element pipeline\n\n<!-- formula-not-decoded -->\n\nIn practice, however, cat is usually used with no options, so it makes sense to have the common cases be the efficient ones. The current research version of the cat command is actually about five times faster than the Berkeley and System V versions because it can process data in large blocks instead of the byte-attime processing that might be required if an option is enabled. Also, and this is perhaps more important, it is hard to imagine any of these examples being the bottleneck of a production program. Most of the real\n\ntime is probably taken waiting for the user's terminal to display the characters, or even for the user to read them.\n\nSeparate programs are not always better than wider options; which is better depends on the problem. Whenever one needs a way to perform a new function, one faces the choice of whether to add a new option or write a new program (assuming that none of the programmable tools will do the job conveniently). The guiding principle for making the choice should be that each program does one thing. Options are appropriately added to a program that already has the right functionality. If there is no such program, then a new program is called for. In that case, the usual criteria for program design should be used: the program should be as general as possible, its default behavior should match the most common usage, and it should cooperate with other programs.\n\nLet's look at these issues in the context of another problem, dealing with fast terminal lines. The first versions of the UNIX system were written in the days when 150 baud was ''fast,'' and all terminals used paper. Today, 9600 baud is typical, and hard-copy terminals are rare. How should we deal with the fact that output from programs like cat scrolls off the top of the screen faster than one can read it?\n\nThere are two obvious approaches. One is to tell each program about the properties of terminals, so it does the right thing (whether by option or automatically). The other is to write a command that handles terminals, and leave most programs untouched.\n\nAn example of the first approach is Berkeley's version of the ls command, which lists the filenames in a directory. Let us call it lsc to avoid confusion. The 7th Edition ls command lists filenames in a single column, so for a large directory, the list of filenames disappears off the top of the screen at great speed. lsc prints in columns across the screen (which is assumed to be 80 columns wide), so there are typically four to eight times as many names on each line, and thus the output usually fits on one screen. The option -1 can be used to get the old single-column behavior.\n\nSurprisingly, lsc operates differently if its output is a file or pipe:\n\nlsc\n\n## produces output different from\n\n<!-- formula-not-decoded -->\n\nThe reason is that lsc begins by examining whether or not its output is a terminal, and prints in columns only if it is. By retaining single-column output to files or pipes, lsc ensures compatibility with programs like grep or wc that expect things to be printed one per line. This ad hoc adjustment of the output format depending on the destination is not only distasteful, it is unique /2014 no standard UNIX command has this property.\n\nA more insidious problem with lsc is that the columnation facility, which is actually a useful, general function, is built in and thus inaccessible to other programs that could use a similar compression. Programs should not attempt special solutions to general problems. The automatic columnation in lsc is reminiscent of the ''wild cards'' found in some systems that provide filename pattern matching only for a particular program. The experience with centralized processing of wild cards in the UNIX shell shows overwhelmingly how important it is to centralize the function where it can be used by all programs.\n\nOne solution for the ls problem is obvious /2014 a separate program for columnation, so that columnation into say 5 columns is just\n\n<!-- formula-not-decoded -->\n\nIt is easy to build a first-draft version with the multi-column option of pr . The commands 2 , 3 , etc., are all links to a single file:\n\n<!-- formula-not-decoded -->\n\n$0 is the program name ( 2 , 3 , etc.), so -$0 becomes -n where n is the number of columns that pr is to produce. The other options suppress the normal heading, set the page length to 1 line, and pass the arguments on to pr . This implementation is typical of the use of tools /2014 it takes only a moment to write, and it serves perfectly well for most applications. If a more general service is desired, such as automatically selecting the number of columns for optimal compaction, a C program is probably required, but the one-\n\nline implementation above satisfies the immediate need and provides a base for experimentation with the design of a fancier program, should one become necessary.\n\nSimilar reasoning suggests a solution for the general problem of data flowing off screens (columnated or not): a separate program to take any input and print it a screen at a time. Such programs are by now widely available, under names like pg and more . This solution affects no other programs, but can be used with all of them. As usual, once the basic feature is right, the program can be enhanced with options for specifying screen size, backing up, searching for patterns, and anything else that proves useful within that basic job.\n\nThere is still a problem, of course. If the user forgets to pipe output into pg , the output that goes off the top of the screen is gone. It would be desirable if the facilities of pg were always present without having to be requested explicitly.\n\nThere are related useful functions that are typically only available as part of a particular program, not in a central service. One example is the history mechanism provided by some versions of the UNIX shell: commands are remembered, so it's possible to review and repeat them, perhaps with editing. But why should this facility be restricted to the shell? (It's not even general enough to pass input to programs called by the shell; it applies to shell commands only.) Certainly other programs could profit as well; any interactive program could benefit from the ability to re-execute commands. More subtly, why should the facility be restricted to program input ? Pipes have shown that the output from one program is often useful as input to another. With a little editing, the output of commands such as ls or make can be turned into commands or data for other programs.\n\nAnother facility that could be usefully centralized is typified by the editor escape in some mail commands. It is possible to pick up part of a mail message, edit it, and then include it in a reply. But this is all done by special facilities within the mail command and so its use is restricted.\n\nEach such service is provided by a different program, which usually has its own syntax and semantics. This is in contrast to features such as pagination, which is always the same because it is only done by one program. The editing of input and output text is more environmental than functional; it is more like the shell's expansion of filename metacharacters than automatic numbering of lines of text. But since the shell does not see the characters sent as input to the programs, it cannot provide such editing. The emacs editor 3 provides a limited form of this capability, by processing all UNIX command input and output, but this is expensive, clumsy, and subjects the users to the complexities and vagaries of yet another massive subsystem (which isn't to criticize the inventiveness of the idea).\n\nA potentially simpler solution is to let the terminal or terminal interface do the work, with controlled scrolling, editing and retransmission of visible text, and review of what has gone before. We have used the programmability of the Blit terminal 4 /2014 a programmable bitmap graphics display /2014 to capitalize on this possibility, to good effect.\n\nThe Blit uses a mouse to point to characters on the display, which can be edited, rearranged and transmitted back to the UNIX system as though they had been typed on the keyboard. Because the terminal is essentially simulating typed input, the programs are oblivious to how the text was created; all the features discussed above are provided by the general editing capabilities of the terminal, with no changes to the UNIX programs.\n\nThere are some obvious direct advantages to the Blit's ability to process text under the user's control. Shell history is trivial: commands can be selected with the mouse, edited if desired, and retransmitted. Since from the terminal's viewpoint all text on the display is equivalent, history is limited neither to the shell nor to command input. Because the Blit provides editing, most of the interactive features of programs like mail are unnecessary; they are done easily, transparently and uniformly by the terminal.\n\nThe most interesting facet of this work, however, is the way it removes the need for interactive features in programs; instead, the Blit is the place where interaction is provided, much as the shell is the program that interprets filename-matching metacharacters. Unfortunately, of course, programming the terminal demands access to a part of the environment off-limits to most programmers, but the solution meshes well with the environment and is appealing in its simplicity. If the terminal cannot be modified to provide the capabilities, a user-level program or perhaps the UNIX kernel itself could be modified fairly easily to do roughly what the Blit does, with similar results.\n\nThe key to problem-solving on the UNIX system is to identify the right primitive operations and to put them at the right place. UNIX programs tend to solve general problems rather than special cases. In a very loose sense, the programs are orthogonal, spanning the space of jobs to be done (although with a fair amount of overlap for reasons of history, convenience or efficiency). Functions are placed where they will do the most good: there shouldn't be a pager in every program that produces output any more than there should be filename pattern matching in every program that uses filenames.\n\nOne thing that UNIX does not need is more features. It is successful in part because it has a small number of good ideas that work well together. Merely adding features does not make it easier for users to do things /2014 it just makes the manual thicker. The right solution in the right place is always more effective than haphazard hacking.\n\n1. B. W. Kernighan and Rob Pike, The UNIX Programming Environment, Prentice-Hall (1984).\n2. D. Norman, ''The Truth about UNIX,'' Datamation (November, 1981).\n3. James Gosling, ''UNIX Emacs,'' CMU internal memorandum (August, 1982).\n4. R. Pike, ''The Blit: A Multiplexed Graphics Terminal,'' Bell System Technical Journal (this issue, 1984).","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8779506571593515518,"filename":"Program Design in the UNIX Environment..pdf"},"page_count":7},"metadata_field_count":2,"attempts":1,"timestamp":1754064620.5978296,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/code_and_formula.pdf","file_size":89031,"file_type":"pdf","category":"tiny","framework":"docling","iteration":0,"extraction_time":5.238288164138794,"startup_time":null,"peak_memory_mb":1863.97265625,"avg_memory_mb":1818.8125,"peak_cpu_percent":224.9,"avg_cpu_percent":44.980000000000004,"total_io_mb":null,"status":"success","character_count":5537,"word_count":908,"error_type":null,"error_message":null,"quality_metrics":{"char_count":5537,"word_count":908,"sentence_count":46,"paragraph_count":14,"avg_word_length":5.084801762114537,"avg_sentence_length":19.782608695652176,"extraction_completeness":1.0,"text_coherence":0.9574468085106383,"noise_ratio":0.06889651435795557,"gibberish_ratio":0.0,"flesch_reading_ease":40.41317290816957,"gunning_fog_index":13.196895315782967,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.6734902325576162,"extracted_text":"## JavaScript Code Example\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n```\nfunction add(a, b) { return a + b; } console.log(add(3, 5));\n```\n\nListing 1: Simple JavaScript Program\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n## Formula\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt.\n\n<!-- formula-not-decoded -->\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8967166443255744998,"filename":"code_and_formula.pdf"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064626.1133335,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/The Hideous Name - 1985 (pike85hideous).pdf","file_size":32949,"file_type":"pdf","category":"tiny","framework":"docling","iteration":0,"extraction_time":15.475959062576294,"startup_time":null,"peak_memory_mb":2005.15625,"avg_memory_mb":1944.1890625,"peak_cpu_percent":257.7,"avg_cpu_percent":51.54,"total_io_mb":null,"status":"success","character_count":29498,"word_count":4762,"error_type":null,"error_message":null,"quality_metrics":{"char_count":29498,"word_count":4762,"sentence_count":268,"paragraph_count":99,"avg_word_length":5.040109197816044,"avg_sentence_length":17.813432835820894,"extraction_completeness":1.0,"text_coherence":0.9368029739776952,"noise_ratio":0.10169638619567428,"gibberish_ratio":0.00641025641025641,"flesch_reading_ease":50.76226731146622,"gunning_fog_index":13.57057751611999,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6478656259082158,"extracted_text":"## The Hideous Name †\n\nRob Pike P.J. Weinberger\n\nAT&amp;T Bell Laboratories\n\nMurray Hill, New Jersey 07974\n\n## ABSTRACT\n\nThe principles of good naming in computing have been known for decades.  The invention of new facilities in computing systems can be guided by these principles.  For example, the introduction of networking need not require any change to the majority of system utilities, because objects such as files on remote machines can be given syntactically familiar names within the local machine's name space.  Indeed, the implementers of networks often do well by these standards by striving to make remote files essentially indistinguishable  from  local  ones. Unfortunately,  the  situation  with  internetwork  mail addresses  is  not  as  satisfactory. The  practitioners  of  internetworking  would  profit  by understanding the benefits of simple, uniform syntax.\n\n## research!ucbvax!@cmu-cs-pt.arpa:@CMU-ITC-LINUS:dave%CMU-ITC-LINUS@CMU-CS-PT\n\n- Carnegie-Mellon University mailer\n\nI cannot tell what the dickens his name is.\n\n- Shakespeare, Merry Wives of Windsor , II. ii. 20.\n\n## Introduction\n\nAny object relevant to computation - file, process, user, computer, network or whatever - needs a name.  The name determines the access: it is by interpreting the name, within the name space it inhabits, that a program or person is given access to the object.  The manner in which names are constructed affects not only how objects are named but also how they are used.\n\nThe form of names and name spaces is the subject of this essay.  We will use file names from several operating systems as examples to illustrate criteria for distinguishing good names from bad.  The same criteria may be applied to network mail names, pointing out some of the shortcomings of the current ad hoc systems for internetworking.\n\nThe criteria are not new, and seem to be generally accepted, but are not applied in practice.  This paper is an attempt to re-establish their use.\n\n## Principles of Names and Name Spaces\n\nWhat's in a name?  A string of characters, encoded by some convention (ASCII or EBCDIC), that identifies an object.  If the function of a name stopped there, this definition would be sufficient.  In IBM's MVS, for example, a file name is an at most 44-character string, largely uninterpreted by system software. The name space is 'flat,' or linear.\n\nSystems  designed  more  recently  use  names  to  help organize as  well  as  identify. For  instance, although in MVS the disk containing the file is specified separately from the name, in MS-DOS part of the\n\n__________________\n\n† An earlier version of this appeared in Summer 1985 Usenix Conference Proceedings, Salt Lake City, Utah.\n\nname of a file is a string that identifies the disk drive holding the file.  Syntax separates these components of the name; MS-DOS uses a colon following the disk name, a single character:\n\nA:FILE\n\nis a file on disk drive A , while\n\nB:FILE\n\n## is a file on disk drive B .\n\nThe advantage of putting such information in names is that software need not know about disks to manipulate files.  Internally, of course, system software must use the syntax of the name to locate the file, but this is largely transparent to applications software, and users.\n\nThe MVS system uses independent information (stored in a catalog) to find a file given its name, while  MS-DOS exposes location  information  in  the  name.  MS-DOS  users  may  put related  files  on  the same disk, thus using a distinguished piece of the name to help organize their world.  MVS users  must instead adapt ad hoc strategies (conventions for the syntax of names) to the same end.  Thus each system does both more and less for the user: MVS provides no help in organization and a naming independent of the  physical  location  of  the  file,  while  MS-DOS  provides  the  opposite. Instead,  if  names  had  multiple components (that is, syntax), where the components did not necessarily correspond to physical devices, the name  space  would  have  the  advantages  of  that  of  both  MVS  and  MS-DOS,  with  the  disadvantages  of neither.  Such a name space exists.\n\n## A good example: UNIX ®\n\nUNIX file name space is a tree, with file names that specify a path from one node to another.  The representation of the name is a simple ASCII string, with slashes / separating node identifiers.  The name\n\n## /usr/rob/bin/cat-v\n\nis a path from the root of the tree (denoted by the leading slash), through nodes called usr , rob and bin , to a file called cat-v .  Nodes intermediate in the tree are called directories .  The system uses the components to find the file, which the user can use as syntax to organize sets of files.  For example, although on most UNIX systems, the string /usr specifies a separate disk drive, this is irrelevant to both software and users; it is merely a string that identifies the directory beneath which users' files may be found.\n\nThe structure of the name space (a directory tree) is reflected in the style of the name (a path through the tree).  Were the file system arranged differently, say as a flat array, the form and interpretation of file names would also be different; for example, UNIX processes are named by small integers.\n\n## Properties of Name Spaces\n\nName spaces have some general properties.  First, names within the space may be absolute or relative.  Absolute names specify an object by position with respect to a single fixed point, such as the root of the UNIX file system (named / ); relative names, with respect to a local point (the 'current working directory' in UNIX, named . (dot)).  Also, an operating system typically has operators to manipulate its name space, such as system calls to create and remove files. UNIX also provides a system call (named mount ) to join together two name spaces by attaching the root of one space, resident on a separate disk drive, to a leaf of another.\n\nFinally, a name space has syntax - how a name is constructed - and semantics - the nature of the object a name identifies.\n\nA UNIX file name, for example, is a sequence of slash-separated strings that identifies a formatless byte stream.  External conventions may provide further semantics: the UNIX file system contains objects that are not ordinary files.  Simply by having ordinary file names, though, these objects have ordinary file properties such as protection.  Some examples from our research version of UNIX, called the Ninth Edition:\n\nDevice files.  With names conventionally prefixed (that is, residing in the directory) /dev , these files provide direct access to devices.  The name /dev/mt , for example, identifies a magnetic tape drive.\n\nProcesses.  The directory /proc contains files with names that are process numbers.  Opening such a file\n\nprovides access to processes for purposes such as interactive debugging.  Although processes have integers that identify them, it is convenient to provide names for them in the file system as well.  For example, listing the directory containing the process files is a simple way to identify running processes.\n\nDatabases.  Some databases are conveniently represented as name-value pairs in a hierarchy, and such databases may be mapped into the file system name space.  For example, the directory /n/face contains a hierarchically-structured database that associates digitized images of people's faces with the people's electronic mail addresses.\n\nOther files. UNIX has the notion of standard input : the input connected to a (typically) interactive program. The name /dev/stdin identifies a file that, when opened, connects to the standard input of the program.  This allows files that demand a file name (such as the file comparison program) to be given input directly from the interactive terminal or from a pipe.\n\nBecause these unusual objects have regular names, existing tools can treat them as files, so standard software can provide services for them that would otherwise require special handling.\n\nSome  of  the  Ninth  Edition  examples  above  have  different  names  in  other UNIX systems. /dev/stdin is often represented by the single character -,  as an argument to commands, but this convention is capriciously followed.  Because it must be provided explicitly by each program, it is only available in some programs.  By providing /dev/stdin in the global name space, it is available uniformly for all programs, always.  As another example, processes are represented by an integer process identifier, which is  only  meaningful  to  a  few  process-specific  system  calls. These  calls  implement  their  own  protection mechanism, although the protection provided by the file system suits perfectly (these system calls predate the process file system).  Finally, virtual terminals implemented using the multiplexed files of the Seventh Edition (an earlier research version of the system) have no external name, so it is impossible to open one for I/O.  The Ninth Edition provides a name in the file system that is available, without prearrangement or special protocol, to any program.\n\n## Connecting Name Spaces\n\nWhen machines are connected together, their name spaces may be joined to facilitate the sharing of files.  If the name spaces have the same clean structure, that structure can be extended simply to describe the  larger  space. The  Newcastle  Connection  names  a  file  on  another  machine,  say ucbvax ,  as /../ucbvax/usr/rob/bin/cat-v ; the Ninth Edition notation is /n/ucbvax/usr/rob/bin/cat-v .  In the former the name space has been extended by making it a subspace of a larger space, in the latter a new name subspace has been grafted on using mount , but in neither case has the syntax of names been changed; any program that understands a file name will understand a network  file  name  without  change,  and  relative  names  for  files  (those  that  don't  begin  with / )  are unchanged.  As a spectacular example, we might see on which machines user wnj has a login by searching (using a program called grep ) through the system administration files (called /etc/passwd ) on all the machines:\n\ngrep wnj /n/*/etc/passwd\n\nThe file name 'wild card' character * matches all files within a directory.  Here, it happens to match all machines reachable from the local machine, although grep is oblivious of this distinction.  We could even investigate those machines connected to ucbvax by grep wnj /n/ucbvax/n/*/etc/passwd\n\nThe file system that is the union of these name spaces might have no global root, so the meaning of an absolute name may become ambiguous because of the presence of multiple reference points.  In fact, there might be no single point to which all names can be fixed.  In practice, though, this ambiguity is unimportant.\n\n## A bad example: VAX/VMS\n\nUnfortunately,  not  everyone  chooses  naming  conventions  in  accord  with  these  guidelines.  On VAX/VMS  our  canonical  file  might  be  called UCBVAX::SYS$DISK:[ROB.BIN]CAT_V.EXE;13 . The  VMS  file  naming  scheme  provides  a  distinct  syntax  for  each  level  in  the  name: UCBVAX:: is  a machine; SYS$DISK: is  a  disk  (actually  a  macro  that  expands  to  a  disk  name  such  as DUA0: ); [ROB.BIN] is a directory; CAT_V is a file 'base' name; .EXE is a file 'type'; and ;13 is a version number.\n\nAlthough  this  syntax  may  seem  unnecessarily  cumbersome,  it  has  a  precedent:  it  is  analogous  to expressions in programming languages. Consider a C expression such as *structure[index].field-&gt;ptr . If * were  postfix  and / the  only  dereferencing  operator,  the expression  might  be  written structure/index/field/ptr/ . Functionally-minded  programmers might use the notation contents(ptr(field(index(structure)))) .  (A single character cannot be used in C because it could not distinguish X[Y] and X-&gt;Y , with X a structure pointer and Y an integer or structure element respectively, but this ambiguity could be eliminated in a different language.)  C and VMS use syntax to distinguish the types of the components of a name.  Instead, the UNIX file system deliberately  hides  the  distinctions. Aside  from  the  obvious  advantages  such  as  simplicity  of  syntax  and  the usurping of only a single character, the uniformity also makes the name space easier to manipulate: the mount system call aliases a disk and a directory.\n\nVMS has no true name space manipulation operator.  Although one could be constructed, it would be limited  in  scope:  how  could  a  disk  be  mounted  atop SYS$DISK:[ROB.BIN] when disks  are  always before directories in the name?  Instead, VMS has macros such as SYS$DISK to hide the manner in which the  space  is  assembled,  and  even  to  provide  the  concept  of  a  local  name  by  automatically  inserting  an expanded macro before an unqualified name.\n\nThe problems with dynamic evaluation of macros are well known.  For example, the VMS service to set  the  reference  point  for  local  names  (the  equivalent  of UNIX chdir )  sets  the  default  prefix  for  file names, but the prefix will only be evaluated and so checked for validity, when a file name is interpreted, which may be arbitrarily and confusingly long after the prefix was set.  In fact, the default prefix macro is handled  in  a  special  way,  because  directories  are  not  constructed  by  simple  concatenation;  subdirectory [.BIN] in directory [ROB] is named [ROB.BIN] .  Also, these local names are not really local at all; the prefix implicitly binds them to a root of the name space.  This implies that all names are always attached to some root, and therefore if the root changes, the name must also change, invisibly.\n\nAnother problem with VMS names is that one cannot do the equivalent of searching the VMS password files ( SYSUAF.LIS )  on various machines with *::SYS$SYSTEM:SYSUAF.LIS ;  the * operator doesn't apply to that portion of a name.  This is an example of the general problem that whenever the name syntax  is  changed  all  programs  that  interpret  names  must  be  modified. More  subtly,  although  if  the machine ucbvax were a gateway we could access files on a distant machine as UCBVAX::KREMVAX::file ,  it  is  only because the semantics of :: explicitly permit such access.  The :: operator is implemented by passing the string after it to the remote machine, but first checking its syntax, so the file name parser must have special code for multiple :: 's.\n\n## A Quibble about Cedar\n\nThe Cedar file system has a uniform naming syntax, just like UNIX, except that files have version numbers, separated from the file name by an exclamation mark ! .  The implementers thought that version numbers are fundamentally different components of file names and therefore deserved different syntax.  But the  change  in  syntax  requires  new  rules  to  define  the  meaning  of  file  names. A  good  test  of  naming schemes is whether arbitrary names constructed by the syntactic rules make sense within the rules of the system or whether their interpretation requires new semantic rules. In Cedar file, /usr/rob/bin/cat-v!3 is clearly version 3 of cat-v , but what is /usr/rob!3/bin/cat-v ?\n\n## Connecting to other machine's file systems\n\nThe IBIS remote file system on UNIX 4.2BSD names a remote file as ucbvax:file .  Many programs don't understand this syntax; the shell (command interpreter) must be modified to make *:file behave as we expect, because the shell expects a slash to separate name components.  Worse, by changing the  syntax,  the  implicit  semantics  of  the  original  naming  scheme  is  lost. In  the  Ninth  Edition  name /n/ucbvax/file it is obvious what file refers to: a file in the root directory of ucbvax. But what is it in ucbvax:file ?  It might be a file in the root, but it isn't.  It is a file in the initial working directory on  the destination machine ( ucbvax )  of  the  user  invoking  the  name  on  the  source  machine  (unless  it begins with / );  its  meaning depends on who is asking.  The extra semantics of : complicate attempts to patch the syntactic problems.  We might try creating a connection (called a symbolic link in UNIX) from the name /n/ucbvax to  the  name ucbvax: ,  but /n/ucbvax/file would  then  still  point  to  a  file  in someone's home directory, and /n/ucbvax/usr/wnj/file would refer to /usr/wnj/usr/wnj/file . If  the  link  evaluates  to ucbvax:/ ,  things  work  as  expected,  but  the slash-less form of IBIS naming is made unavailable.\n\nPart of the problem in the IBIS file system is that it is implemented outside the name space.  By using a variant of the standard system call mount, the Ninth Edition remote file system guarantees that the syntax and semantics of names are free of surprises. For example, it is clear what /n/ucbvax/n/kremvax/file refers to, but what about the IBIS name ucbvax:kremvax:file ? Where does kremvax:file get interpreted?\n\nThere are other ways to interpret file names like ucbvax:file .  When using the UNIX program uucp to  copy a local file to a remote machine, the name ucbvax!file refers to the file on ucbvax whose name is file prefixed by the current directory on the source machine.  The prize goes to DECNET, however: ucbvax::file refers to file in the home directory of the 'default network user' on the destination machine, and ucbvax\"wnj password\"::file refers to file in wnj 's home directory.  It is inexcusable that the password is in the file name, let alone that it is in clear text.\n\n## The story so far\n\nIn summary, there are some guidelines for constructing naming conventions, particularly for objects in a network.  There should be both relative names and absolute names.  Relative names are more important because, among other reasons, the root of the name space may be unknown or non-unique.  The syntax should be clean and uniform; every new syntactic rule requires at least one, and usually many, semantic rules to resolve peculiarities introduced by the new syntax.  If the name space is a tree or any other kind of graph, a single character should be used to separate nodes in a name.\n\nIf these guidelines are followed, names of objects in a network of machines will be easy to construct and interpret; difficult problems of networking will be completely hidden to the users and programs accessing objects in the network.  If they are ignored, both users and programs must be aware of and understand the details of naming locally, globally and everywhere in between.\n\n## Principles of mail names\n\nNow consider the other common name space, mail names.  Mail names are more complex than file names, for both syntactic and semantic reasons.  There are conflicting syntactic traditions, the most familiar two being the UNIX tradition and the ARPANET tradition.  Also, mail names are interpreted by user programs only, with no operating system to enforce semantics.  Thus, the interpretation of the name space is subject to arbitrary hackery.\n\nEven a trivial case like the name pjw in the command\n\n<!-- formula-not-decoded -->\n\nhas no clear meaning.  When electronic mail was invented, the name pjw referred to a mailbox on the local machine - the only machine to which mail could be sent.  The local space of mailbox names was a small flat space.  Later, when systems were connected together, there were two ways to generalize.  If the computers were closely connected (that is, sharing administration), one could extend the flat name space over the whole set of machines, so that saying mail pjw on any of the machines gets pjw 's mailbox on pjw 's\n\nhome machine.  If the machines were instead loosely connected, a more attractive scheme would be to use machine  names  to  qualify  the  local  mailbox  names: pjw@system in  the  ARPANET  tradition,  or system!pjw in  the UNIX tradition.  The two methods differ only in the naming and how the software decides to find the destination.  In the first alternative, it looks up pjw in a database, while in the second it looks  up system . In  both  cases,  the  software  on  the  machines  involved  must  also  have  a  protocol  for delivering mail, but that's irrelevant here.  Note that neither naming scheme has anything to do with routing the message.\n\nAt this level, either of these two schemes is fairly convenient.  But when we try to connect lots of systems with these flat name spaces, names must either conflict or be decorated artificially to disambiguate them.  We should apply the principles of good naming to find a better solution.\n\nMail names specify paths within a large name space populated by systems and mailboxes rather than files, but the basic idea is the same.  The question is what a path denotes.  The answer depends on how the software determines what to do with the mail.\n\nImagine we are on machine ucbvax and want to send mail to pjw@system .  There are two methods to negotiate the transaction.  The first method, used by UNIX, views system as the name of an authority that the mail and mail address are passed to.  That is, sending the mail involves a message to system of the form, ''I am machine ucbvax , here is mail for pjw .''  The second, that of the ARPANET, interprets system as the name of an authority that will say where to send the mail, as in, ''I am machine ucbvax , where do I send mail for pjw ?''  The destination of these messages is found by looking up system in a database.  (The details of sending the message are outside this discussion.)  All naming schemes for mail follow  some  combination  of  these  alternatives.  The UNIX method uses the same mechanism to resolve names and to transmit mail; the ARPANET method resolves the names with one mechanism and uses some other, not associated with the name at all, to send the mail.\n\nGiven these two models, how do we generalize mail delivery in larger networks?  For ARPANET, a mail address user@world3.world2.world1 is interpreted by looking up world1 and then asking it where to send mail for world3.world2 .  For UNIX, a mail address world1!world2!world3!user is  interpreted  by  looking  up world1 and  then  sending  the  mail  and world2!world3!user to  it. Although the two forms sound similar, they have different problems.  (And, why does ARPA use two characters when one is sufficient?)\n\nThe most common interpretation of the UNIX name is as a route, but it need have nothing to do with a  route. Once  the  name  is  handed  off  to world1 ,  it  can  be  rewritten  to  correspond  to  the  syntax  of world1 's name space; in fact, UNIX mailers rewrite names freely.  Because ARPANET names are handled differently, they cannot be rewritten:  the answer to the routing question must produce the four-byte binary network address of the destination mailbox.  (At least in principle, this defect may be circumvented. The response to the routing question might be a little program: ''Send the mail to A and tell it to use protocol P to send it to B'' and so forth.  However, that's not how it's done in practice.)\n\nConsider again the relation between mail names and file names.  When the operating system interprets the name /n/ucbvax/n/kremvax/file it discovers that the directory /n/ucbvax refers to a remote machine, finds the server on that machine, and sends it the name /n/kremvax/file expecting back a handle to use the file.  It does not care what the server does with the name.  It does not expect to get back instructions for finding the file.  It is asking for file service, not name service.  Indeed were ucbvax a VMS machine, the server might invisibly translate /n/kremvax/file immediately into KREMVAX::SYS$DISK:[NETUSER]file to discover it on its local system.  Remote file access would be harder to implement using the ARPANET scheme.\n\n## Name servers † considered speculative\n\nName servers don't scale well, for precisely  the  reason  that  the  ARPANET  name  scheme  doesn't  scale well: the name server must understand all possible name syntaxes.  When a system with a different naming convention  is  connected,  the  name  server  must  suddenly  interpret  all  the  different  syntaxes,  instead  of\n\n__________________\n\n† ''Name server'' is a noun phrase that is ambiguous.  You hand a name server a name, it hands you connection informa-\n\ntion.  Thus it serves connections, not names.  Consider the difference between air pollution and noise pollution.\n\nleaving the job to the new system itself.  Worse, how do you connect two networks, each with its own name server?  Even if the servers use the same data formats and algorithms, they might use unique identifiers that become non-unique when they are joined.\n\nName servers have problems on other levels, too.  Who administers a name server's database?  If the database is not audited frequently much of the data will be obsolete, while if the controls are too onerous, people won't bother keeping the database current.  What does the database contain?  Most name servers produce network addresses, but no single network reaches everywhere.\n\n## Why are mail names such a mess?\n\nBecause people keep gluing name spaces together without smoothing the syntactic differences.  The result is the mail name equivalent of bastardized file names like /n/ucbvax/UCBVAX::KREMVAX:/rob/bin/A:dos-file where different conventions are mixed in a single string.\n\n## Relative names are important\n\nThe ARPANET people define their names to have the form\n\n## local-part @ domain\n\nwhere both local-part and domain are dot-separated lists of words.  Domains are the generalization of what we have been calling systems; the local part is anything understood by the leftmost domain name.  According to RFC 882 (''Domain Names - Concepts and Facilities''), the domains are all absolute.  The dot signifying the root of the hierarchy is implicit at the right of the list of names, which makes it impossible to connect disjoint name spaces since all interpreters of names must know all names at the top level of the hierarchy.  Also, for backwards compatibility, RFC 822 (''Standard for the Format of ARPA Internet Text Messages'') allows all but the leftmost of the domain names to be elided, since ''specification of a fully qualified address can become inconvenient.''\n\n## What happens in practice?\n\nAs long as software continues to deliver mail, people are unwilling to improve the state of affairs. Mailers just butt together names with their own rewriting rules, producing names like:\n\nIJQ3SRA%UCLAMVS.BITNET%SU-LINDY@SU-CSLI.ARPA\n\nThis  is  the  name  of  user IJQ3SRA on  machine UCLAMVS ,  accessible  through  BITNET  from  machine SU-LINDY ,  which  is  known  to SU-CSLI on  the  ARPANET.  Each  program  that  touched  this  name rewrote it by its own rules, although the domains proposal is intended to prevent this.\n\nThere are two domains in this name (although the syntax is wrong): BITNET and ARPA .  However, BITNET is not a registered name, so the gateway service between BITNET and ARPANET must be made explicit in the name, requiring the invention of a new syntax character ( % ) which is translated to @ at the gateway, because ARPANET names can only contain a single @ .  Despite the words in the standard about hierarchy, the domain space is nearly flat, so the local parts of the names carry source routing and domain transitions explicitly.  To worsen matters, machines that advertise adherence to the standard in fact do not; instead the name translations that occur at gateways (such as converting @ to % and rearranging the components)  are  at  best ad  hoc. By  legislating  away  bad  names,  ARPANET  has  reduced  the  problem  of networking to a still-unsolved problem.  But the mailers plod resolutely on.\n\n## Standards?\n\nIt  is  clear  that  standards  are  necessary  for  electronic  mail  to  be  delivered  reliably  across  network boundaries.  What needs to be standardized is the interpretation of names, especially at network boundaries. Until such a standard exists; is syntactically and semantically clean; distributes the interpretation of names across the systems that understand them; and is adhered to, the network mail situation will not improve.\n\n## Conclusions\n\n## Doug McIlroy has observed that\n\n...  bad  notations  can  stifle  progress.  Roman numerals  hobbled  mathematics  for  a  millennium  but were propagated by custom and by natural deference to authority.  Today we no longer meekly accept individual authority.  Instead, we have ''standards,'' impersonal imprimaturs on convention.  Some standards are sound and indispensable; some simply celebrate bureaucratic littleness of mind.  A harvest of gimmicks to save appearances within the standard has grown up, then gimmicks to save the appearances within the appearances.  You know how each one got there: an overnight hack to paste another tumor onto a wild cancerous growth.  The concern was with method, regardless of results. The result is extravagantly worse than Roman numerals: you can't read the notation right to left or left to right.  As an amalgam of languages, it can't be deciphered by a native speaker of any one of them, much as if we were to switch at random places in a number between Roman and Arabic signs and between big-endian and little-endian order.  But now that it all ''works'' - at least for the strong of stomach - the tumors themselves are being standardized.\n\nI fled, and cry'd out ''Death''; Hell trembled at the hideous name, and sigh'd From all her caves, and back resounded, ''Death.''\n\n- Milton, Paradise Lost","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":16409241325064761934,"filename":"The Hideous Name - 1985 (pike85hideous).pdf"},"page_count":8},"metadata_field_count":2,"attempts":1,"timestamp":1754064641.8658516,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/fake-memo.pdf","file_size":13374,"file_type":"pdf","category":"tiny","framework":"docling","iteration":0,"extraction_time":3.6135358810424805,"startup_time":null,"peak_memory_mb":2001.0390625,"avg_memory_mb":1968.73515625,"peak_cpu_percent":193.7,"avg_cpu_percent":57.82000000000001,"total_io_mb":null,"status":"success","character_count":205,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":205,"word_count":37,"sentence_count":3,"paragraph_count":5,"avg_word_length":4.45945945945946,"avg_sentence_length":12.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.07407407407407407,"flesch_reading_ease":77.70585585585587,"gunning_fog_index":6.014414414414415,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.72213231981982,"extracted_text":"May 5, 2023\n\nTo Whom it May Concern:\n\nThere were 20,000 bottles of water, 10,000 blankets, and 200 laptops delivered on January 23, 2023. A total of 3 trucks were used for 15 hours.\n\nBest Regards,\n\nMallori","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2324428769090743019,"filename":"fake-memo.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064645.7566977,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Perfect Hash Functions - Slides.pdf","file_size":17159,"file_type":"pdf","category":"tiny","framework":"docling","iteration":0,"extraction_time":12.73511028289795,"startup_time":null,"peak_memory_mb":1975.79296875,"avg_memory_mb":1947.921875,"peak_cpu_percent":309.4,"avg_cpu_percent":61.879999999999995,"total_io_mb":null,"status":"success","character_count":3222,"word_count":535,"error_type":null,"error_message":null,"quality_metrics":{"char_count":3222,"word_count":535,"sentence_count":12,"paragraph_count":55,"avg_word_length":4.31214953271028,"avg_sentence_length":44.75,"extraction_completeness":1.0,"text_coherence":0.9230769230769231,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":39.084615384615404,"gunning_fog_index":20.813675213675214,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.697125,"extracted_text":"## Perfect Hash Functions\n\nIn most general applications, we cannot know exactly what set of key values will need to be hashed until the hash function and table have been designed and put to use.\n\nAt that point, changing the hash function or changing the size of the table will be extremely expensive since either would require re-hashing every key.\n\nA perfect hash function is one that maps the set of actual key values to the table without any collisions.\n\nA minimal perfect hash function does so using a table that has only as many slots as there are key values to be hashed.\n\nIf the set of keys IS known in advance, it is possible to construct a specialized hash function that is perfect, perhaps even minimal perfect.\n\nAlgorithms for constructing perfect hash functions tend to be tedious, but a number are known.\n\n## Cichelli's Method\n\nThis is used primarily when it is necessary to hash a relatively small collection of keys, such as the set of reserved words for a programming language.\n\nThe basic formula is:\n\n$$h(S) = S.length() + g(S[0]) + g(S[S.length()-1])$$\n\nwhere g() is constructed using Cichelli's algorithm so that h() will return a different hash value for each word in the set.\n\nThe algorithm has three phases:\n\n- computation of the letter frequencies in the words\n\n- ordering the words\n\n- searching\n\nSuppose we need to hash the words in the list below:\n\ncalliope\n\nDetermine the frequency with which each first and last letter occurs:\n\nclio erato\n\neuterpe melpomene\n\npolyhymnia terpsichore\n\nthalia urania\n\n```\nletter: e  a  c  o  t  m  p  u freq:   6  3  2  2  2  1  1  1\n```\n\nScore the words by summing the frequencies of their first and last letters, and then sort them in that order:\n\ncalliope     8\n\nclio\n\n4\n\nerato 8\n\neuterpe\n\n12\n\nmelpomene 7\n\npolyhymnia\n\n4\n\nterpsichore\n\n8\n\nthalia 5\n\nurania\n\n4\n\neuterpe\n\ncalliope\n\nerato\n\nterpsichore\n\nmelpomene\n\nthalia\n\nclio\n\npolyhymnia\n\nurania\n\n## Cichelli's Method\n\nFinally, consider the words in order and define g(x) for each possible first and last letter in such a way that each of the words will have a distinct hash value:\n\n## Cichelli's Method\n\nCichelli's method imposes a limit on the search at this point (we're assuming it's 5 steps), and so we back up to the previous word and redefine the mapping there:\n\n| word       | g_value assigned   |   h(word) |   table | slot   |\n|------------|--------------------|-----------|---------|--------|\n| polyhymnia | p-->0              |        10 |       1 | reject |\n|            | p-->1              |        11 |       2 | reject |\n|            | p-->2              |        12 |       3 |        |\n| urania     | u-->0              |         6 |       6 | reject |\n|            | u-->1              |         7 |       7 | reject |\n|            | u-->2              |         8 |       8 | reject |\n|            | u-->3              |         9 |       0 | reject |\n|            | u-->4              |        10 |       1 | ok     |\n\nSo, if we define g() as determined above, then h() will be a minimal perfect hash function on the given set of words.\n\nThe primary difficulty is the cost, because the search phase can degenerate to exponential performance, and so it is only practical for small sets of words.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6699026421032985158,"filename":"Perfect Hash Functions - Slides.pdf"},"page_count":5},"metadata_field_count":2,"attempts":1,"timestamp":1754064658.7682858,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/WKEY_AM.md","file_size":58405,"file_type":"md","category":"tiny","framework":"docling","iteration":0,"extraction_time":2.6130664348602295,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":100.2,"avg_cpu_percent":20.04,"total_io_mb":null,"status":"success","character_count":20729,"word_count":2118,"error_type":null,"error_message":null,"quality_metrics":{"char_count":20729,"word_count":2118,"sentence_count":268,"paragraph_count":75,"avg_word_length":6.4178470254957505,"avg_sentence_length":7.958955223880597,"extraction_completeness":1.0,"text_coherence":0.6753731343283582,"noise_ratio":0.7,"gibberish_ratio":0.07228915662650602,"flesch_reading_ease":29.140747770425776,"gunning_fog_index":12.929579976985043,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4802692182951217,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- History\n- 2\n- Programming\n- 3\n- Translator\n- 4\n- References\n- 5\n- External links\n\nToggle the table of contents\n\n# WKEY (AM)\n\nAdd languages\n\nAdd links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nRadio station in Covington, Virginia\n\nWKEY\n\n|                                                         |                                                                                                                      |\n|---------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| *Covington, Virginia* United States                     |                                                                                                                      |\n| Broadcast area                                          | *Covington, Virginia*Clifton Forge, Virginia                                                                         |\n| Frequency                                               | 1340kHz                                                                                                              |\n| Branding                                                | 103.5 Big Country                                                                                                    |\n| Programming                                             |                                                                                                                      |\n| Format                                                  | Country                                                                                                              |\n| Affiliations                                            | *Westwood One's Mainstream Country network *Fox News Radio*MRN Radio*PRN Radio* Virginia Sports Network              |\n| Ownership                                               |                                                                                                                      |\n| Owner                                                   | *Todd P. Robinson, Inc. * (WVJT, LLC)                                                                                |\n| Sister stations                                         | WJVR,WXCF                                                                                                            |\n| History                                                 |                                                                                                                      |\n| First air date                                          | May 23, 1941 (1941-05-23)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")                                    |\n| Last air date                                           | November 14, 2024 (2024-11-14)                                                                                       |\n| Former call signs                                       | WJMA (1941–1943)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")[[2]](#cite_note-fcc1-2 \"#cite_note-fcc1-2\") |\n| Call signmeaning                                        | Earl M. Key (former owner)[[3]](#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\")                                         |\n| Technical information[[4]](#cite_note-4 \"#cite_note-4\") |                                                                                                                      |\n| Licensing authority                                     | FCC                                                                                                                  |\n| Facility ID                                             | 73157                                                                                                                |\n| Class                                                   | C                                                                                                                    |\n| Power                                                   | 1,000 watts (day and night)                                                                                          |\n| Transmitter coordinates                                 | 37°46′3.5″N 79°59′5.2″W﻿ / ﻿37.767639°N 79.984778°W﻿ / 37.767639; -79.984778                                         |\n| Translator(s)                                           | See § Translator                                                                                                     |\n| Repeater(s)                                             | 101.9WJVR-HD2(Iron Gate)                                                                                             |\n| Links                                                   |                                                                                                                      |\n| Public license information                              | *Public file*LMS                                                                                                     |\n| Webcast                                                 | Listen live                                                                                                          |\n| Website                                                 | twovirginiasmedia.com/stations/103-5-big-country/                                                                    |\n\nWKEY (1340 kHz ) was an American AM radio station licensed to serve the community of Covington, Virginia . The station, which began broadcasting in 1941, was owned and operated by Todd P. Robinson, Inc. The WKEY broadcast license was held by WVJT, LLC. [ [5] ] (#cite_note-fcc2-5 \"#cite_note-fcc2-5\")\n\nThe station had broadcast a country music format to the Covington / Clifton Forge area. WKEY was branded, along with its broadcast translator W278BF (103.5 FM , Covington), as \"103.5 Big Country\". [ [6] ] (#cite_note-arb1-6 \"#cite_note-arb1-6\")\n\n## History\n\n[ edit ]\n\nPhoto of Earl M. Key, owner of WKEY from 1942 until 1973.\n\nWKEY began broadcasting on May 23, 1941, as WJMA with 250 watts of power. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") WJMA was owned by John Arrington Jr. and his wife, Marcia. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") On May 26, 1942, WJMA was sold to Earl M. Key and the callsign changed to WKEY in 1943. [ [3] ] (#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") [ [8] ] (#cite_note-Key-8 \"#cite_note-Key-8\")\n\nBy 1964, the station's power increased to 1,000 watts during the day, while the nighttime power remained at 250 watts. [ [9] ] (#cite_note-Power1-9 \"#cite_note-Power1-9\") On June 1, 1973, WKEY was sold to WKEY, Inc., headed by E.H. Barr, for an undisclosed amount. [ [10] ] (#cite_note-Sale1-10 \"#cite_note-Sale1-10\") WKEY increased its nighttime power in 1987, to 1,000 watts, matching its daytime power. [ [11] ] (#cite_note-Power2-11 \"#cite_note-Power2-11\")\n\nOn December 20, 2002, WKEY was acquired by Quorum Radio Partners of Virginia, Inc. for $650,000. [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") [ [13] ] (#cite_note-Sale2a-13 \"#cite_note-Sale2a-13\") During 2002, WKEY switched from its longtime country format to oldies . [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") On April 20, 2005, Quorum Radio Partners of Virginia, Inc. filed for bankruptcy and WKEY placed into debtor-in-possession status pending a sale. [ [14] ] (#cite_note-Debtor-14 \"#cite_note-Debtor-14\") On January 1, 2006, WKEY was sold to Todd P. Robinson, Inc., for $100,000. [ [15] ] (#cite_note-Sale3a-15 \"#cite_note-Sale3a-15\") [ [16] ] (#cite_note-Sale3b-16 \"#cite_note-Sale3b-16\")\n\nOn May 1, 2008, the station changed its format from oldies to southern gospel , under \"The Cross\" branding. [ [17] ] (#cite_note-SGospel-17 \"#cite_note-SGospel-17\") On January 14, 2012, WKEY began simulcasting sister station WIQO-FM , after its move to Forest, Virginia , and away from Covington. [ [18] ] (#cite_note-Big1035a-18 \"#cite_note-Big1035a-18\") On August 9, 2012, WKEY began simulcasting full-time on translator station W278BF (103.5 FM), located in Covington, with the country format that was previously heard on WIQO. [ [19] ] (#cite_note-Big1035b-19 \"#cite_note-Big1035b-19\")\n\nOn November 18, 2013, WKEY began streaming its signal live on the internet. [ [20] ] (#cite_note-Streaming-20 \"#cite_note-Streaming-20\")\n\nThe Federal Communications Commission cancelled the station's license on November 14, 2024; [ [21] ] (#cite_note-Cancelled-21 \"#cite_note-Cancelled-21\") WKEY's programming remains on W278BF and the second HD Radio channel of WJVR . [ [22] ] (#cite_note-ri-wkeyclosure-22 \"#cite_note-ri-wkeyclosure-22\")\n\n## Programming\n\n[ edit ]\n\nOffices in Covington\n\nWKEY carried a mix of local and syndicated programming. Weekdays began with a locally produced morning show called \"Highway 64 with Big Al\". [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The station also had a news department which prepared and broadcast local news reports on weekdays. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The bulk of the broadcast day's programming came from Dial Global 's Mainstream Country network. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") Nationally syndicated programs aired on WKEY included the \"Tim White Bluegrass Show\" and \"zMAX Racing Country\". [ [24] ] (#cite_note-Program2-24 \"#cite_note-Program2-24\") The station carried a one-minute newscast from Fox News Radio at the top of each hour. [ [25] ] (#cite_note-FoxNews-25 \"#cite_note-FoxNews-25\")\n\nWKEY had broadcast live football games from Covington High School in the Fall. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") WKEY was an affiliate of the University of Virginia 's Virginia Sports Network, which carried the school's football and basketball games. [ [26] ] (#cite_note-UVASports-26 \"#cite_note-UVASports-26\") NASCAR Sprint Cup Series races could also be heard on WKEY with live coverage provided by the Motor Racing Network and the Performance Racing Network . [ [27] ] (#cite_note-Racing1-27 \"#cite_note-Racing1-27\") [ [28] ] (#cite_note-Racing2-28 \"#cite_note-Racing2-28\")\n\nOn Sunday mornings, WKEY aired an assortment of religious programming . [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The programming began with one half hour of locally produced Gospel music program, after which the station aired the syndicated programs In Touch Ministries and Focus on the Family , rounding out the block with a live local church service broadcast. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\")\n\n## Translator\n\n[ edit ] In addition to the main station, WKEY was relayed by an FM translator to widen its broadcast area. [ [29] ] (#cite_note-fcc3-29 \"#cite_note-fcc3-29\") [ [30] ] (#cite_note-fcc4-30 \"#cite_note-fcc4-30\")\n\n| Call sign   | Frequency   | City of license     |    FID |   ERP(W) | HAAT            | Class   | FCC info   |\n|-------------|-------------|---------------------|--------|----------|-----------------|---------|------------|\n| W278BF      | 103.5 FM    | Covington, Virginia | 139546 |       16 | 310.6m(1,019ft) | D       | LMS        |\n\n## References\n\n[ edit ]\n\n1. ^ a b c d Broadcasting Yearbook - 1942 (PDF). Broadcasting Publications, Inc. 1942. p. 186. Retrieved December 10, 2012.\n2. ^ \"Call Sign History\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n3. ^ a b Broadcasting Yearbook - 1944 (PDF). Broadcasting Publications, Inc. 1944. p. 166. Retrieved December 10, 2012.\n4. ^ \"Facility Technical Data for WKEY\" . Licensing and Management System . Federal Communications Commission .\n5. ^ \"WKEY Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n6. ^ \"Station Information Profile\" . Arbitron / Nielsen Holdings . Retrieved November 20, 2013.\n7. ^ a b Broadcasting Yearbook - 1960 (PDF). Broadcasting Publications, Inc. 1960. pp. A-242. Retrieved December 10, 2012.\n8. ^ Broadcasting Yearbook - 1943 (PDF). Broadcasting Publications, Inc. 1943. p. 150. Retrieved December 10, 2012.\n9. ^ Broadcasting Yearbook - 1964 (PDF). Broadcasting Publications, Inc. 1964. pp. B-163. Retrieved December 10, 2012.\n10. ^ Broadcasting Yearbook - 1974 (PDF). Broadcasting Publications, Inc. 1974. pp. B-218. Retrieved December 10, 2012.\n11. ^ Broadcasting &amp; Cablecasting Yearbook - 1987 (PDF). Broadcasting Publications, Inc. 1987. pp. B-296. Retrieved December 10, 2012.\n12. ^ a b Broadcasting &amp; Cable Yearbook - 2003-2004 (PDF). Reed Publishing (Nederland) B.V. 2003. pp. D-494. Retrieved December 10, 2012.\n13. ^ Volume 19, Issue 86, Your Morning Radio Industry E-Paper . Radio Business Report. November 5, 2002. Retrieved May 6, 2012.\n14. ^ Broadcasting &amp; Cable Yearbook - 2006 (PDF). Reed Publishing (Nederland) B.V. 2006. pp. D-518. Retrieved December 10, 2012.\n15. ^ \"Application for Consent to Assignment of Broadcast Station Construction Permit or License\" . Federal Communications Commission . November 18, 2005. Retrieved December 10, 2012.\n16. ^ \"Escrow Agreement\" . Federal Communications Commission . November 4, 2005. Archived from the original on March 4, 2016. Retrieved December 10, 2012.\n17. ^ \"M-Street Directory 2009/2010 - 18th Edition\" (PDF). M Street Corporation. 2009. p. 644. Retrieved April 17, 2013.\n18. ^ \"Big Country 101\" . Todd P. Robinson, Inc. Archived from the original on January 16, 2012. Retrieved May 6, 2013.\n19. ^ \"We are set to...\" Todd P. Robinson, Inc./Facebook. August 9, 2012. Retrieved May 6, 2013.\n20. ^ \"BIG COUNTRY is now WORLDWIDE!\" . Todd P. Robinson, Inc./Facebook. November 18, 2013. Retrieved November 22, 2013.\n21. ^ \"Cancellation Application\" . Federal Communications Commission , audio division. November 12, 2024. Retrieved November 15, 2024.\n22. ^ Venta, Lance (November 17, 2024). \"FCC Report 11/17: WCCO On The Move\" . RadioInsight . Retrieved February 2, 2025.\n23. ^ a b c d e f \"Big Country 103.5 - Highlands Media Group\" . Todd P. Robinson, Inc. Retrieved April 27, 2016.\n24. ^ \"Affiliates - zMAX Racing Country\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n25. ^ \"Station Finder - Virginia\" . Fox News Channel / Premiere Networks . Retrieved November 20, 2013.\n26. ^ \"Virginia Sports Radio Network Affiliates\" . University of Virginia / CBS Interactive . Retrieved May 11, 2013.\n27. ^ \"Radio Stations - Virginia\" . MRN. Retrieved November 18, 2013.\n28. ^ \"Sprint Cup Series Affiliates\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n29. ^ \"W278BF Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 11, 2013.\n30. ^ \"Application for Authority to Construct or Make Changes in an FM Translator or FM Booster Station\" . FCC Media Bureau. January 3, 2012. Retrieved May 11, 2013.\n\n## External links\n\n[ edit ]\n\n- 103.5 Big Country Online\n- Facility details for Facility ID 73157 (WKEY) in the FCC Licensing and Management System\n- WKEY in Nielsen Audio 's AM station database\n- Facility details for Facility ID 139546 (W278BF) in the FCC Licensing and Management System\n- W278BF at FCCdata.org\n- FCC History Cards for WKEY\n\n| *v*t*eRadio stations in theVirginiaHighlands                                                                                                      |                                                                                  |\n|---------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\n| This area includes the countiesBath,Highland,Alleghany, andRockbridgein Virginia, andPocahontas CountyinWest Virginia.                            |                                                                                  |\n| ByAM frequency                                                                                                                                    | *1370*1450                                                                       |\n| ByFM frequency                                                                                                                                    | *88.7*89.7*89.9*90.9*91.5*91.9*96.7*101.9*107.1                                  |\n| Digital radioby frequency & subchannel                                                                                                            | *88.7-1*88.7-2*88.7-3                                                            |\n| Bycall sign                                                                                                                                       | *W237DF*W278BF*WCHG*WIQR+HD2+HD3*WJVR*WLUR*WMRL*WREL*WVLS*WVMR*WVMR-FM*WVRI*WWZW |\n| Defunct                                                                                                                                           | *WKEY (1340 AM) *WXCF (1230 AM)                                                  |\n| Nearby regionsEastern West VirginiaHarrisonburgRoanoke–LynchburgSee alsoList of radio stations in VirginiaList of radio stations in West Virginia |                                                                                  |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=WKEY\\_(AM)\\&amp;oldid\\=1276840556](https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556 \"https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [Radio stations in Virginia](/wiki/Category:Radio_stations_in_Virginia \"Category:Radio stations in Virginia\")\n\n* [Radio stations established in 1941](/wiki/Category:Radio_stations_established_in_1941 \"Category:Radio stations established in 1941\")\n\n* [1941 establishments in Virginia](/wiki/Category:1941_establishments_in_Virginia \"Category:1941 establishments in Virginia\")\n\n* [Radio stations disestablished in 2024](/wiki/Category:Radio_stations_disestablished_in_2024 \"Category:Radio stations disestablished in 2024\")\n\n* [2024 disestablishments in Virginia](/wiki/Category:2024_disestablishments_in_Virginia \"Category:2024 disestablishments in Virginia\")\n\n* [Defunct radio stations in the United States](/wiki/Category:Defunct_radio_stations_in_the_United_States \"Category:Defunct radio stations in the United States\")\n\n* [Defunct mass media in Virginia](/wiki/Category:Defunct_mass_media_in_Virginia \"Category:Defunct mass media in Virginia\")\n\n* [Covington, Virginia](/wiki/Category:Covington,_Virginia \"Category:Covington, Virginia\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Use American English from February 2025](/wiki/Category:Use_American_English_from_February_2025 \"Category:Use American English from February 2025\")\n\n* [All Wikipedia articles written in American English](/wiki/Category:All_Wikipedia_articles_written_in_American_English \"Category:All Wikipedia articles written in American English\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n* [Pages using gadget WikiMiniAtlas](/wiki/Category:Pages_using_gadget_WikiMiniAtlas \"Category:Pages using gadget WikiMiniAtlas\")\n\n* [Articles using infobox radio station](/wiki/Category:Articles_using_infobox_radio_station \"Category:Articles using infobox radio station\")\n\n- This page was last edited on 21 February 2025, at 02:02 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nWKEY (AM)\n\nAdd languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":12585875467379157536,"filename":"WKEY_AM.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064661.6512089,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/simple-table.md","file_size":152,"file_type":"md","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.009406805038452148,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":96.3,"avg_cpu_percent":19.259999999999998,"total_io_mb":null,"status":"success","character_count":167,"word_count":25,"error_type":null,"error_message":null,"quality_metrics":{"char_count":167,"word_count":25,"sentence_count":3,"paragraph_count":1,"avg_word_length":4.0,"avg_sentence_length":9.0,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.39999999999999997,"gibberish_ratio":0.0,"flesch_reading_ease":78.19795454545455,"gunning_fog_index":5.836363636363637,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5852474431818183,"extracted_text":"| Item         |   Price |   # In stock |\n|--------------|---------|--------------|\n| Juicy Apples |    1.99 |          739 |\n| Bananas      |    1.89 |            6 |","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":3364328643571723329,"filename":"simple-table.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064661.9215598,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/README.md","file_size":859,"file_type":"md","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.05092120170593262,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":97.5,"avg_cpu_percent":19.5,"total_io_mb":null,"status":"success","character_count":857,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":857,"word_count":136,"sentence_count":12,"paragraph_count":8,"avg_word_length":5.227941176470588,"avg_sentence_length":11.833333333333334,"extraction_completeness":1.0,"text_coherence":0.8461538461538461,"noise_ratio":0.24669778296382727,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":58.84138211382114,"gunning_fog_index":10.34471544715447,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5034274120512164,"extracted_text":"## Example Docs\n\nThe sample docs directory contains the following files:\n\n- `example-10k.html` - A 10-K SEC filing in HTML format\n- `layout-parser-paper.pdf` - A PDF copy of the layout parser paper\n- `factbook.xml` / `factbook.xsl` - Example XML/XLS files that you can use to test stylesheets\n\nThese documents can be used to test out the parsers in the library. In addition, here are instructions for pulling in some sample docs that are too big to store in the repo.\n\n#### XBRL 10-K\n\nYou can get an example 10-K in inline XBRL format using the following `curl` . Note, you need to have the user agent set in the header or the SEC site will reject your request.\n\n```\ncurl -O \\\n  -A '${organization} ${email}'\n  https://www.sec.gov/Archives/edgar/data/311094/000117184321001344/0001171843-21-001344.txt\n```\n\nYou can parse this document using the HTML parser.","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":8693080574564157183,"filename":"README.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064662.231946,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/HIP_13044_b.md","file_size":54082,"file_type":"md","category":"tiny","framework":"docling","iteration":0,"extraction_time":2.402385711669922,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":100.3,"avg_cpu_percent":20.06,"total_io_mb":null,"status":"success","character_count":19767,"word_count":1615,"error_type":null,"error_message":null,"quality_metrics":{"char_count":19767,"word_count":1615,"sentence_count":200,"paragraph_count":58,"avg_word_length":6.5702786377708975,"avg_sentence_length":8.255,"extraction_completeness":1.0,"text_coherence":0.665,"noise_ratio":0.6747002580057673,"gibberish_ratio":0.0,"flesch_reading_ease":22.493548039250953,"gunning_fog_index":15.724941590884583,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.46620446729978465,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Observational history\n- 2\n- Characteristics\n- 3\n- Claims of a planetary system\n- 4\n- References\n\nToggle the table of contents\n\n# HIP 13044\n\n15 languages\n\n- العربية\n- Bosanski\n- Deutsch\n- Español\n- فارسی\n- Français\n- Italiano\n- Latviešu\n- 日本語\n- Polski\n- Русский\n- Svenska\n- ไทย\n- Українська\n- 中文\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nCoordinates : 2h 47m 37.4431s, −36° 6′ 27.0322″\n\nFrom Wikipedia, the free encyclopedia\n\n(Redirected from HIP 13044 b ) Star in the constellation Fornax\n\nHIP 13044\n\n| Observation dataEpochJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")EquinoxJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")   |                                                                                                                                         |\n|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| Constellation                                                                                                                                    | Fornax[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                    |\n| Right ascension                                                                                                                                  | 02h 47m 37.44310s[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Declination                                                                                                                                      | −36° 06′ 27.0322″[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Apparent magnitude(V)                                                                                                                            | +9.94[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                     |\n| Characteristics                                                                                                                                  |                                                                                                                                         |\n| Evolutionary stage                                                                                                                               | horizontal branch[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                           |\n| Spectral type                                                                                                                                    | F2[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                        |\n| B−Vcolor index                                                                                                                                   | +0.466±0.026[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                              |\n| Astrometry                                                                                                                                       |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Radial velocity(Rv)                                                                                                                              | 300[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") km/s                                                                    |\n| Proper motion(μ)                                                                                                                                 | RA: +3.083[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yrDec.: −12.573[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yr |\n| Parallax(π)                                                                                                                                      | 1.3705±0.0499mas[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                      |\n| Distance                                                                                                                                         | 2,380 ± 90ly(730 ± 30pc)                                                                                                                |\n| Absolute magnitude(MV)                                                                                                                           | +0.62[[4]](#cite_note-carney2008-4 \"#cite_note-carney2008-4\")                                                                           |\n|                                                                                                                                                  |                                                                                                                                         |\n| Details[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                                              |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Mass                                                                                                                                             | 0.8±0.1M☉                                                                                                                               |\n| Radius                                                                                                                                           | 6.7±0.3R☉                                                                                                                               |\n| Temperature                                                                                                                                      | 6,025±63K                                                                                                                               |\n| Metallicity[Fe/H]                                                                                                                                | −2.09±0.26dex                                                                                                                           |\n| Rotation                                                                                                                                         | 5.53±0.73 d                                                                                                                             |\n|                                                                                                                                                  |                                                                                                                                         |\n| Other designations                                                                                                                               |                                                                                                                                         |\n| CD−36°1052,HIP13044,SAO193917,PPM278353[[5]](#cite_note-SIMBAD_data_on_HIP_13044-5 \"#cite_note-SIMBAD_data_on_HIP_13044-5\")                      |                                                                                                                                         |\n| Database references                                                                                                                              |                                                                                                                                         |\n| SIMBAD                                                                                                                                           | data                                                                                                                                    |\n\nHIP 13044 is a red horizontal-branch star about 2,300 light years (700 pc ) from Earth in the constellation Fornax . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\") The star is part of the Helmi stream , a former dwarf galaxy that merged with the Milky Way between six and nine billion years ago. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") As a result, HIP 13044 circles the Galactic Center at a highly irregular orbit with respect to the galactic plane . HIP 13044 is slightly less massive than the Sun, but is approximately seven times its size. The star, which is estimated to be at least nine billion years old, has passed the red-giant phase. The relatively fast rotation of the star may be due to having engulfed one or more planets during the red-giant phase. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\n## Observational history\n\n[ edit ] A science team from the Max Planck Institute for Astronomy first observed HIP 13044 using Fiber-fed Extended Range Optical Spectrograph (FEROS) at the European Southern Observatory 's La Silla Observatory in Chile. The first follow-up led to the collection of 36 radial velocity measurements taken between September 2009 and July 2010. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\nThe team also used photometric data that had been passively collected by and publicly released into the archive of the SuperWASP collaboration, which had been observing the region where the star was located. In this data, HIP 13044 was found to oscillate; the signal was blocked roughly every sixteen days. Analysis of the SuperWASP and FEROS data led to the supposed discovery of the planet HIP 13044 b , [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") although this claim was later refuted.\n\n## Characteristics\n\n[ edit ] HIP 13044 is an F-type star located approximately 701 parsecs (2,286 light years ) from Earth in the Helmi stream [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")—a group of low-metallicity stars moving with large velocities relative to the Sun. The star follows an eccentric galactic orbit, with a distance from the galactic center ranging from 7 to 16 kiloparsecs . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") The orbit does not lie in the galactic plane , and can reach distances as high as 13 kpc above it. This indicates that it once was part of a satellite galaxy of the Milky Way that was disrupted 6–9 billion years ago. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") The star itself is estimated to be at least nine billion years old. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\nHIP 13044 is fairly evolved star fusing helium in its core, and has therefore already passed the red-giant phase of its evolution. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") It lies near the blue end of the red horizontal branch bordering the instability strip . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") Its surface temperature is about 6025 K and its radius is approximately 6.7 solar radii . HIP 13044's mass is estimated to be 0.8 solar masses . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") Having a rotation period of 5–6 days, HIP 13044 is a fast-rotating star for its type. It is possible that this is because it has swallowed planets during its red-giant phase. [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\")\n\nHIP 13044 has an apparent magnitude of 9.94 and cannot be seen with the unaided eye. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\n## Claims of a planetary system\n\n[ edit ] In 2010, it was announced that a giant planet in a 16.2-day orbit had been discovered by the radial velocity measurements. This would have had implications for planet formation in metal-poor systems and survival of planets being engulfed by expanded giant stars. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") Subsequent analysis of the data revealed problems with the detection: for example an erroneous barycentric correction had been applied (the same error had also led to claims of planets around HIP 11952 that were subsequently refuted). After applying the corrections, there is no evidence for a planet orbiting the star. [ [9] ] (#cite_note-JonesJenkins2014-9 \"#cite_note-JonesJenkins2014-9\")\n\n## References\n\n[ edit ]\n\n1. ^ a b c d e f Brown, A. G. A. ; et al. ( Gaia collaboration ) (August 2018). \" Gaia Data Release 2: Summary of the contents and survey properties\" . Astronomy &amp; Astrophysics . 616 . A1. arXiv : 1804.09365 . Bibcode : 2018A&amp;A...616A...1G . doi : 10.1051/0004-6361/201833051 . Gaia DR2 record for this source at VizieR .\n2. ^ a b c d Anderson, E.; Francis, Ch. (2012). \"XHIP: An extended hipparcos compilation\". Astronomy Letters . 38 (5): 331. arXiv : 1108.4971 . Bibcode : 2012AstL...38..331A . doi : 10.1134/S1063773712050015 . S2CID 119257644 .\n3. ^ a b c d e f g Setiawan, Johny; et al. (2010). \"A Giant Planet Around a Metal-poor Star of Extragalactic Origin\". Science . 330 (6011): 1642–1644. arXiv : 1011.6376 . Bibcode : 2010Sci...330.1642S . doi : 10.1126/science.1193342 . PMID 21097905 . S2CID 657925 .\n4. ^ Carney, Bruce W.; Latham, David W.; Stefanik, Robert P.; Laird, John B. (2008). \"Line Broadening in Field Metal-Poor Red Giant and Red Horizontal Branch Stars\". The Astronomical Journal . 135 (1): 196. arXiv : 0710.0392 . Bibcode : 2008AJ....135..196C . doi : 10.1088/0004-6256/135/1/196 .\n5. ^ \"HIP 13044\" . SIMBAD . Centre de données astronomiques de Strasbourg . Retrieved 2010-11-19.\n6. ^ a b Than, Ker (2010-11-18). \"New Planet Discovered: First Spotted Outside Our Galaxy\" . NationalGeographic.com . National Geographic Society . Archived from the original on November 20, 2010. Retrieved 2010-11-19.\n7. ^ a b c d e f Klement, R.; Setiawan, J.; Thomas Henning; Hans-Walter Rix; Boyke Rochau; Jens Rodmann; Tim Schulze-Hartung; MPIA Heidelberg; ESTEC (2011). \"The visitor from an ancient galaxy: A planetary companion around an old, metal-poor red horizontal branch star\". The Astrophysics of Planetary Systems: Formation, Structure, and Dynamical Evolution . IAU Symposium. Vol. 276. Proceedings of the International Astronomical Union. pp. 121–125. arXiv : 1011.4938 . Bibcode : 2011IAUS..276..121K . doi : 10.1017/S1743921311020059 .\n8. ^ a b c d \"Notes for Planet HIP 13044 b\" . Extrasolar Planets Encyclopaedia . Retrieved 2010-11-22.\n9. ^ Jones, M. I.; Jenkins, J. S. (2014). \"No evidence of the planet orbiting the extremely metal-poor extragalactic star HIP 13044\". Astronomy &amp; Astrophysics . 562 : id.A129. arXiv : 1401.0517 . Bibcode : 2014A&amp;A...562A.129J . doi : 10.1051/0004-6361/201322132 . S2CID 55365608 .\n\n| *v*t*eConstellation of Fornax                                                                     |                     |\n|---------------------------------------------------------------------------------------------------|---------------------|\n| *List of stars in Fornax*Fornax in Chinese astronomy*Chandra Deep Field South*Hubble Legacy Field |                     |\n| Stars                                                                                             |                     |\n|                                                                                                   | Exoplanets          |\n|                                                                                                   | Star clusters       |\n|                                                                                                   | Nebulae             |\n| Galaxies                                                                                          |                     |\n|                                                                                                   | Galaxy clusters     |\n|                                                                                                   | Astronomical events |\n| Category                                                                                          |                     |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=HIP\\_13044\\&amp;oldid\\=1287367829\\#Claims\\_of\\_a\\_planetary\\_system](https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system \"https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [F\\-type giants](/wiki/Category:F-type_giants \"Category:F-type giants\")\n\n* [Horizontal\\-branch stars](/wiki/Category:Horizontal-branch_stars \"Category:Horizontal-branch stars\")\n\n* [Disproven exoplanets](/wiki/Category:Disproven_exoplanets \"Category:Disproven exoplanets\")\n\n* [Fornax](/wiki/Category:Fornax \"Category:Fornax\")\n\n* [Durchmusterung objects](/wiki/Category:Durchmusterung_objects \"Category:Durchmusterung objects\")\n\n* [Hipparcos objects](/wiki/Category:Hipparcos_objects \"Category:Hipparcos objects\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description is different from Wikidata](/wiki/Category:Short_description_is_different_from_Wikidata \"Category:Short description is different from Wikidata\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 25 April 2025, at 19:42 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nHIP 13044\n\n15 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1813732512932013776,"filename":"HIP_13044_b.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064664.8932621,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/Sinthgunt.md","file_size":18844,"file_type":"md","category":"tiny","framework":"docling","iteration":0,"extraction_time":1.201566219329834,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":100.7,"avg_cpu_percent":20.14,"total_io_mb":null,"status":"success","character_count":7655,"word_count":1129,"error_type":null,"error_message":null,"quality_metrics":{"char_count":7655,"word_count":1129,"sentence_count":116,"paragraph_count":53,"avg_word_length":5.731620903454385,"avg_sentence_length":9.724137931034482,"extraction_completeness":1.0,"text_coherence":0.6896551724137931,"noise_ratio":0.053109079033311565,"gibberish_ratio":0.024539877300613498,"flesch_reading_ease":33.82099875930521,"gunning_fog_index":14.126220016542598,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4088286764317438,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Etymology\n- 2\n- Placement\n- 3\n- Notes\n- 4\n- References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt [ needs IPA ] is a figure in Germanic mythology , attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm . In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt ), [ [1] ] (#cite_note-ORCHARD112-1 \"#cite_note-ORCHARD112-1\") and the two sisters are cited as both producing incantations to heal the horse of Phol , another otherwise unattested figure but possibly the same as Balder , who is named elsewhere in the charm. The two are then followed by Friia and Uolla , also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[ edit ] The etymology of Sinthgunt is unclear. In the original manuscript, Sinthgunt is spelled Sin ht gunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic * Sin-naχt-gund , i.e., \"the night-walking one\". [ [2] ] (#cite_note-2 \"#cite_note-2\") As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól ), this etymology has been interpreted as a reference to the moon . However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology , Máni , a male figure. According to Rudolf Simek , the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples. [ [3] ] (#cite_note-3 \"#cite_note-3\")\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [ de ] , because the first element Sinht- cannot be based on the presupposed earlier Germanic * sinχt- . Such a Germanic form would have yielded Old High German * sīht by regular sound change. [ [4] ] (#cite_note-4 \"#cite_note-4\") The amended Sinthgunt presupposes a Proto-Germanic compound * Senþa-gunþjō , the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from * Senþa-χilðijō , with its second element also meaning \"fight\", cf. Old Norse hildr , Old English hild ). [ [5] ] (#cite_note-5 \"#cite_note-5\") Simek also mentions the interpretation \"heavenly body, star\". [ [6] ] (#cite_note-SIMEK285-286-6 \"#cite_note-SIMEK285-286-6\")\n\n## Placement\n\n[ edit ] The figures Fulla ( Uolla ) and Frigg ( Friia ) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures. [ [7] ] (#cite_note-BOSTOCK29-7 \"#cite_note-BOSTOCK29-7\") Similarly, Wolfgang Beck [ de ] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources. [ [8] ] (#cite_note-8 \"#cite_note-8\")\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names. [ [9] ] (#cite_note-9 \"#cite_note-9\") Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers. [ [10] ] (#cite_note-10 \"#cite_note-10\")\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm , as a specially defined group of Germanic goddesses. [ [11] ] (#cite_note-11 \"#cite_note-11\")\n\n## Notes\n\n[ edit ]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge . Studien über die Entstehung der nordischen Götter- und Heldensagen . München 1889, p. 298. Cf. Rudolf Simek . Lexikon der germanischen Mythologie . Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology . Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck . Die Merseburger Zaubersprüche. Eine Einführung . Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann . \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm . Altgermanische Religionsgeschichte , Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[ edit ]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature . Oxford University Press . ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend . Cassell . ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology . D.S. Brewer . ISBN 0-85991-513-1\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=Sinthgunt\\&amp;oldid\\=1296614947](https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947 \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\")\"\n\n[Category](/wiki/Help:Category \"Help:Category\"): * [Germanic goddesses](/wiki/Category:Germanic_goddesses \"Category:Germanic goddesses\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Articles needing IPA](/wiki/Category:Articles_needing_IPA \"Category:Articles needing IPA\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1811526491729742173,"filename":"Sinthgunt.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064666.3569374,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/simple.pptx","file_size":34865,"file_type":"pptx","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.01645827293395996,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":59.4,"avg_cpu_percent":11.879999999999999,"total_io_mb":null,"status":"success","character_count":180,"word_count":35,"error_type":null,"error_message":null,"quality_metrics":{"char_count":180,"word_count":35,"sentence_count":5,"paragraph_count":8,"avg_word_length":3.9714285714285715,"avg_sentence_length":7.0,"extraction_completeness":0.75,"text_coherence":0.8333333333333334,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":97.59054545454545,"gunning_fog_index":3.8521212121212116,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4396965151515152,"extracted_text":"# Title Slide\n\nWith a subtitle\n\n# Things to think about\n\nHow much is enough?\n\nIf not now when?\n\nWhere have all the flowers gone?\n\nWho do you think you are?\n\nWhat were you thinking?","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":16826392897990412993,"filename":"simple.pptx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064666.634231,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_bad_text.pptx","file_size":35632,"file_type":"pptx","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0064885616302490234,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"success","character_count":120,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":120,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":7.066666666666666,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":5.296428571428578,"gunning_fog_index":19.885714285714286,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.20974553571428575,"extracted_text":"# X-Library The fully customisable and copyright-free standard content template collection exclusively for our customers","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":1443005848482130016,"filename":"powerpoint_bad_text.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064666.8977797,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_with_image.pptx","file_size":76480,"file_type":"pptx","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.01818060874938965,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":107.9,"avg_cpu_percent":21.580000000000002,"total_io_mb":null,"status":"success","character_count":21,"word_count":4,"error_type":null,"error_message":null,"quality_metrics":{"char_count":21,"word_count":4,"sentence_count":1,"paragraph_count":2,"avg_word_length":4.25,"avg_sentence_length":4.0,"extraction_completeness":0.5,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":62.79000000000002,"gunning_fog_index":1.2000000000000002,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.35973750000000004,"extracted_text":"# Docling\n\nImage test","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":8405570356673823665,"filename":"powerpoint_with_image.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064667.1758695,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/tests-example.xls","file_size":16384,"file_type":"xls","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.0008416175842285156,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: tests-example.xls","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064667.4339807,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_sample.pptx","file_size":45849,"file_type":"pptx","category":"tiny","framework":"docling","iteration":0,"extraction_time":0.027138471603393555,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":109.1,"avg_cpu_percent":21.82,"total_io_mb":null,"status":"success","character_count":1178,"word_count":188,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1178,"word_count":188,"sentence_count":9,"paragraph_count":16,"avg_word_length":3.0106382978723403,"avg_sentence_length":20.88888888888889,"extraction_completeness":1.0,"text_coherence":0.5555555555555556,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":90.54800000000002,"gunning_fog_index":9.08923076923077,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.519573888888889,"extracted_text":"# Test Table Slide\n\nWith footnote\n\n|    | Class1          | Class1          | Class1   | Class2   | Class2   | Class2   |\n|----|-----------------|-----------------|----------|----------|----------|----------|\n|    | A merged with B | A merged with B | C        | A        | B        | C        |\n| R1 | True            | False           |          | False    | True     | True     |\n| R2 |                 |                 | True     | False    |          |          |\n| R3 | False           |                 |          |          | False    |          |\n| R3 |                 | True            |          | True     |          |          |\n| R4 |                 |                 | False    |          | False    |          |\n| R4 |                 | True            |          | True     | False    | False    |\n| R4 | True            | False           | True     | False    | True     | False    |\n\n# Second slide title\n\nLet’s introduce a list\n\nWith foo\n\nBar\n\nAnd baz things\n\nA rectangle shape with this text inside.\n\n1. List item4\n2. List item5\n3. List item6\n\n- I1\n- I2\n- I3\n- I4\n\nSome info:\n\n- Item A\n- Item B\n\nMaybe a list?\n\n1. List1\n2. List2\n3. List3\n\n- l1 \n- l2\n- l3","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":15572290240354948364,"filename":"powerpoint_sample.pptx"},"page_count":3},"metadata_field_count":2,"attempts":1,"timestamp":1754064667.7222779,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/fake-text.txt","file_size":169,"file_type":"txt","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0011889934539794922,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: fake-text.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064672.9916196,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/book-war-and-peace-1p.txt","file_size":3045,"file_type":"txt","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0011844635009765625,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: book-war-and-peace-1p.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064673.2523983,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/selected_pdfs.txt","file_size":2374,"file_type":"txt","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0022783279418945312,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: selected_pdfs.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064673.5127504,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/norwich-city.txt","file_size":48194,"file_type":"txt","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0014977455139160156,"startup_time":null,"peak_memory_mb":1812.140625,"avg_memory_mb":1812.140625,"peak_cpu_percent":2934.6,"avg_cpu_percent":586.92,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: norwich-city.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064673.7691138,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_270.pdf","file_size":94702,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":1,"extraction_time":23.693296909332275,"startup_time":null,"peak_memory_mb":1976.26953125,"avg_memory_mb":1943.44375,"peak_cpu_percent":361.7,"avg_cpu_percent":110.62,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":10890858393843077593,"filename":"ocr_test_rotated_270.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064697.7199037,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/jpn-vert.jpeg","file_size":35012,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":1,"extraction_time":10.357391834259033,"startup_time":null,"peak_memory_mb":1976.390625,"avg_memory_mb":1943.6359375,"peak_cpu_percent":2608.2,"avg_cpu_percent":587.8,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":15120959776614916295,"filename":"jpn-vert.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064708.347111,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_180.pdf","file_size":94703,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":1,"extraction_time":3.6474974155426025,"startup_time":null,"peak_memory_mb":1976.2421875,"avg_memory_mb":1943.54140625,"peak_cpu_percent":192.7,"avg_cpu_percent":76.9,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2530576989861832966,"filename":"ocr_test_rotated_180.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064712.2738764,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_90.pdf","file_size":94126,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":1,"extraction_time":3.654024124145508,"startup_time":null,"peak_memory_mb":2001.11328125,"avg_memory_mb":1963.42109375,"peak_cpu_percent":190.7,"avg_cpu_percent":76.53999999999999,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6989291015361162334,"filename":"ocr_test_rotated_90.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064716.1996224,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/chi_sim_image.jpeg","file_size":20104,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":1,"extraction_time":6.515753746032715,"startup_time":null,"peak_memory_mb":2001.265625,"avg_memory_mb":1968.5171875,"peak_cpu_percent":292.4,"avg_cpu_percent":96.74,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":13643946977964376290,"filename":"chi_sim_image.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064722.9864771,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test.pdf","file_size":93549,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":1,"extraction_time":23.72606921195984,"startup_time":null,"peak_memory_mb":2001.2421875,"avg_memory_mb":1968.52890625,"peak_cpu_percent":362.9,"avg_cpu_percent":110.34,"total_io_mb":null,"status":"success","character_count":94,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":94,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":5.333333333333333,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":39.33000000000001,"gunning_fog_index":14.0,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":false},"overall_quality_score":0.40228750000000013,"extracted_text":"Docling bundles PDF document conversion to JSON and Markdown in an easy self contained package","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":14853448746796404529,"filename":"ocr_test.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064746.9849446,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.xlsx","file_size":6339,"file_type":"xlsx","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.008281707763671875,"startup_time":null,"peak_memory_mb":1837.58984375,"avg_memory_mb":1837.58984375,"peak_cpu_percent":115.8,"avg_cpu_percent":23.16,"total_io_mb":null,"status":"success","character_count":1314,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1314,"word_count":136,"sentence_count":7,"paragraph_count":2,"avg_word_length":4.492647058823529,"avg_sentence_length":20.285714285714285,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.0,"flesch_reading_ease":88.64013513513517,"gunning_fog_index":5.30965250965251,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.635800168918919,"extracted_text":"| Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   |\n|----------------|----------------|----------------|----------------|----------------|\n| Team           | Location       | Stanley Cups   | None           | None           |\n| Blues          | STL            | 1.0            | None           | None           |\n| Flyers         | PHI            | 2.0            | None           | None           |\n| Maple Leafs    | TOR            | 13.0           | None           | None           |\n\n| Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   |\n|-------------------------|-------------------------|-------------------------|-------------------------|-------------------------|\n| Team                    | Location                | Stanley Cups            | None                    | None                    |\n| Blues                   | STL                     | 1.0                     | None                    | None                    |\n| Flyers                  | PHI                     | 2.0                     | None                    | None                    |\n| Maple Leafs             | TOR                     | 0.0                     | None                    | None                    |","extracted_metadata":{"origin":{"mimetype":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","binary_hash":13071959898645931525,"filename":"stanley-cups.xlsx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064747.2693198,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.csv","file_size":91,"file_type":"csv","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.002105236053466797,"startup_time":null,"peak_memory_mb":1837.58984375,"avg_memory_mb":1837.58984375,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"success","character_count":269,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":269,"word_count":37,"sentence_count":1,"paragraph_count":1,"avg_word_length":3.5675675675675675,"avg_sentence_length":37.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.47,"gibberish_ratio":0.0,"flesch_reading_ease":74.27000000000001,"gunning_fog_index":8.9,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5109625000000001,"extracted_text":"| Stanley Cups   |          |              |\n|----------------|----------|--------------|\n| Team           | Location | Stanley Cups |\n| Blues          | STL      | 1            |\n| Flyers         | PHI      | 2            |\n| Maple Leafs    | TOR      | 13           |","extracted_metadata":{"origin":{"mimetype":"text/csv","binary_hash":14995389103761630903,"filename":"stanley-cups.csv"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064747.5328765,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/complex-table.html","file_size":3010,"file_type":"html","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.008473396301269531,"startup_time":null,"peak_memory_mb":1837.58984375,"avg_memory_mb":1837.58984375,"peak_cpu_percent":113.2,"avg_cpu_percent":22.64,"total_io_mb":null,"status":"success","character_count":1960,"word_count":189,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1960,"word_count":189,"sentence_count":1,"paragraph_count":4,"avg_word_length":4.148148148148148,"avg_sentence_length":189.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":-28.167653061224442,"gunning_fog_index":43.28163265306122,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.634375,"extracted_text":"# Quarterly Sales Report\n\n| Region        | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | Total         |\n|---------------|-----------------------------|-----------------------------|-----------------------------|-----------------------------|---------------|\n| Region        | Q1                          | Q2                          | Q3                          | Q4                          | Total         |\n| North America | North America               | North America               | North America               | North America               | North America |\n| USA           | $150                        | $180                        | $165                        | $200                        | $695          |\n| Canada        | $45                         | $52                         | $48                         | $60                         | $205          |\n| Europe        | Europe                      | Europe                      | Europe                      | Europe                      | Europe        |\n| UK            | $80                         | $95                         | $88                         | $110                        | $373          |\n| Germany       | $65                         | $75                         | $70                         | $85                         | $295          |\n| France        | $40                         | $48                         | $45                         | $55                         | $188          |\n| Grand Total   | $380                        | $450                        | $416                        | $510                        | $1,756        |\n\n## Performance Metrics\n\n| Metric         | Target   | Actual   | Status     |\n|----------------|----------|----------|------------|\n| Annual Revenue | $1,500K  | $1,756K  | ✓ Exceeded |\n| Growth Rate    | 10%      | 17%      | ✓ Exceeded |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":143411372199986808,"filename":"complex-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064747.800404,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/Sinthgunt.html","file_size":71465,"file_type":"html","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0582737922668457,"startup_time":null,"peak_memory_mb":1837.58984375,"avg_memory_mb":1837.58984375,"peak_cpu_percent":85.1,"avg_cpu_percent":17.02,"total_io_mb":null,"status":"success","character_count":6581,"word_count":991,"error_type":null,"error_message":null,"quality_metrics":{"char_count":6581,"word_count":991,"sentence_count":108,"paragraph_count":61,"avg_word_length":5.579212916246216,"avg_sentence_length":9.37037037037037,"extraction_completeness":1.0,"text_coherence":0.7037037037037037,"noise_ratio":0.02279288861875095,"gibberish_ratio":0.024691358024691357,"flesch_reading_ease":41.66122901135651,"gunning_fog_index":13.792768062425976,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.6058515732674654,"extracted_text":"## Contents\n\nmove to sidebar\n\nhide\n\n- (Top)\n- 1 Etymology\n- 2 Placement\n- 3 Notes\n- 4 References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools\n\nmove to sidebar\n\nhide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance\n\nmove to sidebar\n\nhide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt[needs  IPA] is a figure in Germanic mythology, attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm. In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt),[1] and the two sisters are cited as both producing incantations to heal the horse of Phol, another otherwise unattested figure but possibly the same as Balder, who is named elsewhere in the charm. The two are then followed by Friia and Uolla, also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[edit]\n\nThe etymology of Sinthgunt is unclear.  In the original manuscript, Sinthgunt is spelled Sinhtgunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic *Sin-naχt-gund, i.e., \"the night-walking one\".[2] As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól), this etymology has been interpreted as a reference to the moon. However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology, Máni, a male figure. According to Rudolf Simek, the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples.[3]\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [de], because the first element Sinht- cannot be based on the presupposed earlier Germanic *sinχt-. Such a Germanic form would have yielded Old High German *sīht by regular sound change.[4] The amended Sinthgunt presupposes a Proto-Germanic compound *Senþa-gunþjō, the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from *Senþa-χilðijō, with its second element also meaning \"fight\", cf. Old Norse hildr, Old English hild).[5] Simek also mentions the interpretation \"heavenly body, star\".[6]\n\n## Placement\n\n[edit]\n\nThe figures Fulla (Uolla) and Frigg (Friia) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures.[7] Similarly, Wolfgang Beck [de] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources.[8]\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names.[9] Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers.[10]\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm, as a specially defined group of Germanic goddesses.[11]\n\n## Notes\n\n[edit]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge. Studien über die Entstehung der nordischen Götter- und Heldensagen. München 1889, p. 298. Cf. Rudolf Simek. Lexikon der germanischen Mythologie. Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology. Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck. Die Merseburger Zaubersprüche. Eine Einführung. Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann. \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm. Altgermanische Religionsgeschichte, Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[edit]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature. Oxford University Press. ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend. Cassell. ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology. D.S. Brewer. ISBN 0-85991-513-1\n\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\"\n\nCategory:\n\n- Germanic goddesses\n\nHidden categories:\n\n- Articles with short description\n- Short description matches Wikidata\n- Articles needing IPA\n- Good articles\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\nWikimedia Foundation\nPowered by MediaWiki\n\nSearch\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":3790431279105409656,"filename":"Sinthgunt.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064748.1170123,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/simple-table.html","file_size":1623,"file_type":"html","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.005578756332397461,"startup_time":null,"peak_memory_mb":1837.58984375,"avg_memory_mb":1837.58984375,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"success","character_count":474,"word_count":75,"error_type":null,"error_message":null,"quality_metrics":{"char_count":474,"word_count":75,"sentence_count":6,"paragraph_count":4,"avg_word_length":4.346666666666667,"avg_sentence_length":13.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.51,"gibberish_ratio":0.0,"flesch_reading_ease":54.2406981981982,"gunning_fog_index":7.872072072072072,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.7565508727477478,"extracted_text":"# Sample Data Table\n\n| Product    | Category    | Price   |   Stock |\n|------------|-------------|---------|---------|\n| Laptop     | Electronics | $999.99 |      25 |\n| Desk Chair | Furniture   | $199.99 |       8 |\n| Coffee Mug | Kitchen     | $9.99   |     150 |\n| Notebook   | Office      | $3.49   |      75 |\n\n## Summary Statistics\n\n| Total Products:   | 4         |\n|-------------------|-----------|\n| Average Price:    | $303.12   |\n| Total Stock:      | 258 units |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":9830432069415051293,"filename":"simple-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064748.3860419,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Program Design in the UNIX Environment..pdf","file_size":26912,"file_type":"pdf","category":"tiny","framework":"docling","iteration":1,"extraction_time":13.276902437210083,"startup_time":null,"peak_memory_mb":1963.83203125,"avg_memory_mb":1938.58359375,"peak_cpu_percent":260.1,"avg_cpu_percent":52.02,"total_io_mb":null,"status":"success","character_count":24911,"word_count":4167,"error_type":null,"error_message":null,"quality_metrics":{"char_count":24911,"word_count":4167,"sentence_count":199,"paragraph_count":83,"avg_word_length":4.958723302135829,"avg_sentence_length":21.0,"extraction_completeness":1.0,"text_coherence":0.95,"noise_ratio":0.13693147605475492,"gibberish_ratio":0.017142857142857144,"flesch_reading_ease":47.80305316314639,"gunning_fog_index":14.43295513058626,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6518702509607774,"extracted_text":"## Program design in the UNIX /2020 environment\n\nRob Pike\n\nBrian W. Kernighan\n\n## ABSTRACT\n\nMuch of the power of the UNIX operating system comes from a style of program design that makes programs easy to use and, more important, easy to combine with other programs. This style has been called the use of software tools , and depends more on how the programs fit into the programming environment /2014 how they can be used with other programs /2014 than on how they are designed internally. But as the system has become commercially successful and has spread widely, this style has often been compromised, to the detriment of all users. Old programs have become encrusted with dubious features. Newer programs are not always written with attention to proper separation of function and design for interconnection. This paper discusses the elements of program design, showing by example good and bad design, and indicates some possible trends for the future.\n\nThe UNIX operating system has become a great commercial success, and is likely to be the standard operating system for microcomputers and some mainframes in the coming years.\n\nThere are good reasons for this popularity. One is portability: the operating system kernel and the applications programs are written in the programming language C, and thus can be moved from one type of computer to another with much less effort than would be involved in recreating them in the assembly language of each machine. Essentially the same operating system therefore runs on a wide variety of computers, and users needn't learn a new system when new hardware comes along. Perhaps more important, vendors that sell the UNIX system needn't provide new software for each new machine; instead, their software can be compiled and run without change on any hardware, which makes the system commercially attractive. There is also an element of zealotry: users of the system tend to be enthusiastic and to expect it wherever they go; the students who used the UNIX system in university a few years ago are now in the job market and often demand it as a condition of employment.\n\nBut the UNIX system was popular long before it was even portable, let alone a commercial success. The reasons for that are more interesting.\n\nExcept for the initial PDP-7 version, the UNIX system was written for the DEC PDP-11, a machine that was (deservedly) very popular. PDP-11's were powerful enough to do real computing, but small enough to be affordable by small organizations such as academic departments in universities.\n\nThe early UNIX system was smaller but more effective and technically more interesting than competing systems on the same hardware. It provided a number of innovative applications of computer science, showing the benefits to be obtained by a judicious blend of theory and practice. Examples include the yacc parser-generator, the diff file comparison program, and the pervasive use of regular expressions to describe string patterns. These led in turn to new programming languages and interesting software for applications like program development, document preparation and circuit design.\n\nSince the system was modest in size, and since essentially everything was written in C, the software was easy to modify, to customize for particular applications or merely to support a view of the world\n\n__________________\n\n/2020 UNIX is a trademark of Bell Laboratories.\n\ndifferent from the original. (This ease of change is also a weakness, of course, as evidenced by the plethora of different versions of the system.)\n\nFinally, the UNIX system provided a new style of computing, a new way of thinking of how to attack a problem with a computer. This style was based on the use of tools : using programs separately or in combination to get a job done, rather than doing it by hand, by monolithic self-sufficient subsystems, or by special-purpose, one-time programs. This has been much discussed in the literature, so we don't need to repeat it here; see [1], for example.\n\nThe style of use and design of the tools on the system are closely related. The style is still evolving, and is the subject of this essay: in particular, how the design and use of a program fit together, how the tools fit into the environment, and how the style influences solutions to new problems. The focus of the discussion is a single example, the program cat , which concatenates a set of files onto its standard output. cat is a simple program, both in implementation and in use; it is essential to the UNIX system; and it is a good illustration of the kinds of decisions that delight both supporters and critics of the system. (Often a single property of the system will be taken as an asset or as a fault by different audiences; our audience is programmers, because the UNIX environment is designed fundamentally for programming.) Even the name cat is typical of UNIX program names: it is short, pronounceable, but not conventional English for the job it does. (For an opposing viewpoint, see [2].) Most important, though, cat in its usages and variations exemplifies UNIX program design style and how it has been interpreted by different communities.\n\n```\n11/3/71 NAME c_a_t_ -- concatenate and print SYNOPSIS c_a_t_ f_i_l_e_1_ ... DESCRIPTION c_a_t_ reads each file in sequence and writes it on the standard output stream. Thus: c_a_t_ f_i_l_e_ is about the easiest way to print a file. Also: c_a_t_ f_i_l_e_1_ f_i_l_e_2_ >f_i_l_e_3_ is about the easiest way to concatenate files. If no input file is given c_a_t_ reads from the standard input file. FILES --SEE ALSO pr, cp DIAGNOSTICS none; if a file cannot be found it is ignored. BUGS --OWNER ken, dmr\n```\n\n<!-- formula-not-decoded -->\n\nFigure 1: Manual page for cat , UNIX 1st Edition, November, 1971\n\nFigure 1 is the manual page for cat from the UNIX 1st Edition manual. Evidently, cat copies its input to its output. The input is normally taken from a sequence of one or more files, but it can come from the standard input. The output is the standard output. The manual suggests two uses, the general file copy:\n\n## cat file1 file2 &gt;file3\n\nand printing a file on the terminal:\n\ncat file\n\nThe general case is certainly what was intended in the design of the program. Output redirection (provided by the &gt; operator, implemented by the UNIX shell) makes cat a fine general-purpose file concatenator and a valuable adjunct for other programs, which can use cat to process filenames, as in:\n\n<!-- formula-not-decoded -->\n\nThe fact that cat will also print on the terminal is a special case. Perhaps surprisingly, in practice it turns out that the special case is the main use of the program. /2020\n\nThe design of cat is typical of most UNIX programs: it implements one simple but general function that can be used in many different applications (including many not envisioned by the original author). Other commands are used for other functions. For example, there are separate commands for file system tasks like renaming files, deleting them or telling how big they are. Other systems instead lump these into a single ''file system'' command with an internal structure and command language of its own. (The PIP file copy program found on operating systems like CP/M or RSX-11 is an example.) That approach is not necessarily worse or better, but it is certainly against the UNIX philosophy. Unfortunately, such programs are not completely alien to the UNIX system /2014 some mail-reading programs and text editors, for example, are large self-contained ''subsystems'' that provide their own complete environments and mesh poorly with the rest of the system. Most such subsystems, however, are usually imported from or inspired by programs on other operating systems with markedly different programming environments.\n\nThere are some significant advantages to the traditional UNIX system approach. The most important is that the surrounding environment /2014 the shell and the programs it can invoke /2014 provides a uniform access to system facilities. Filename argument patterns are expanded by the shell for all programs, without prearrangement in each command. The same is true of input and output redirection. Pipes are a natural outgrowth of redirection. Rather than decorate each command with options for all relevant pre- and postprocessing, each program expects as input, and produces as output, concise and header-free textual data that connects well with other programs to do the rest of the task at hand. It takes some programming discipline to build a program that works well in this environment /2014 primarily, to avoid the temptation to add features that conflict with or duplicate services provided by other commands /2014 but it's well worthwhile.\n\nGrowth is easy when the functions are well separated. For example, the 7th Edition shell was augmented with a backquote operator that converts the output of one program into the arguments to another, as in\n\n## cat 'cat filelist'\n\nNo changes were made in any other program when this operator was invented; because the backquote is interpreted by the shell, all programs called by the shell acquire the feature transparently and uniformly. If special characters like backquotes were instead interpreted, even by calling a standard subroutine, by each program that found the feature appropriate, every program would require (at least) recompilation whenever someone had a new idea. Not only would uniformity be hard to enforce, but experimentation would be harder because of the effort of installing any changes.\n\nThe UNIX 7th Edition system introduced two changes in cat . First, files that could not be read, either because of denied permissions or simple non-existence, were reported rather than ignored. Second, and less desirable, was the addition of a single optional argument -u , which forced cat to unbuffer its output (the reasons for this option, which has disappeared again in the 8th Edition of the system, are technical and irrelevant here.)\n\nBut the existence of one argument was enough to suggest more, and other versions of the system\n\n__________________\n\n/2020 The use of cat to feed a single input file to a program has to some degree superseded the shell's &lt; operator, which illustrates that general-purpose constructs /2014 like cat and pipes /2014 are often more natural than convenient special-purpose ones.\n\nsoon embellished cat with features. This list comes from cat on the Berkeley distribution of the UNIX system:\n\n- -s strip multiple blank lines to a single instance\n\n- -n number the output lines\n\n- -b number only the non-blank lines\n\n- -v make non-printing characters visible\n\n- -ve mark ends of lines\n\n- -vt change representation of tab\n\nIn System V, there are similar options and even a clash of naming: -s instructs cat to be silent about non-existent files. But none of these options are appropriate additions to cat ; the reasons get to the heart of how UNIX programs are designed and why they work well together.\n\nIt's easy to dispose of (Berkeley) -s , -n and -b : all of these jobs are readily done with existing tools like sed and awk . For example, to number lines, this awk invocation suffices:\n\n<!-- formula-not-decoded -->\n\nIf line-numbering is needed often, this command can be packaged under a name like linenumber and put in a convenient public place. Another possibility is to modify the pr command, whose job is to format text such as program source for output on a line printer. Numbering lines is an appropriate feature in pr ; in fact UNIX System V pr has a -n option to do so. There never was a need to modify cat ; these options are gratuitous tinkering.\n\nBut what about -v ? That prints non-printing characters in a visible representation. Making strange characters visible is a genuinely new function, for which no existing program is suitable. ('' sed -n l '', the closest standard possibility, aborts when given very long input lines, which are more likely to occur in files containing non-printing characters.) So isn't it appropriate to add the -v option to cat to make strange characters visible when a file is printed?\n\nThe answer is ''No.'' Such a modification confuses what cat 's job is /2014 concatenating files /2014 with what it happens to do in a common special case /2014 showing a file on the terminal. A UNIX program should do one thing well, and leave unrelated tasks to other programs. cat 's job is to collect the data in files. Programs that collect data shouldn't change the data; cat therefore shouldn't transform its input.\n\nThe preferred approach in this case is a separate program that deals with non-printable characters. We called ours vis (a suggestive, pronounceable, non-English name) because its job is to make things visible. As usual, the default is to do what most users will want /2014 make strange characters visible /2014 and as necessary include options for variations on that theme. By making vis a separate program, related useful functions are easy to provide. For example, the option -s strips out (i.e., discards) strange characters, which is handy for dealing with files from other operating systems. Other options control the treatment and format of characters like tabs and backspaces that may or may not be considered strange in different situations. Such options make sense in vis because its focus is entirely on the treatment of such characters. In cat , they require an entire sub-language within the -v option, and thus get even further away from the fundamental purpose of that program. Also, providing the function in a separate program makes convenient options such as -s easier to invent, because it isolates the problem as well as the solution.\n\nOne possible objection to separate programs for each task is efficiency. For example, if we want numbered lines and visible characters it is probably more efficient to run the one command\n\n<!-- formula-not-decoded -->\n\n## than the two-element pipeline\n\n<!-- formula-not-decoded -->\n\nIn practice, however, cat is usually used with no options, so it makes sense to have the common cases be the efficient ones. The current research version of the cat command is actually about five times faster than the Berkeley and System V versions because it can process data in large blocks instead of the byte-attime processing that might be required if an option is enabled. Also, and this is perhaps more important, it is hard to imagine any of these examples being the bottleneck of a production program. Most of the real\n\ntime is probably taken waiting for the user's terminal to display the characters, or even for the user to read them.\n\nSeparate programs are not always better than wider options; which is better depends on the problem. Whenever one needs a way to perform a new function, one faces the choice of whether to add a new option or write a new program (assuming that none of the programmable tools will do the job conveniently). The guiding principle for making the choice should be that each program does one thing. Options are appropriately added to a program that already has the right functionality. If there is no such program, then a new program is called for. In that case, the usual criteria for program design should be used: the program should be as general as possible, its default behavior should match the most common usage, and it should cooperate with other programs.\n\nLet's look at these issues in the context of another problem, dealing with fast terminal lines. The first versions of the UNIX system were written in the days when 150 baud was ''fast,'' and all terminals used paper. Today, 9600 baud is typical, and hard-copy terminals are rare. How should we deal with the fact that output from programs like cat scrolls off the top of the screen faster than one can read it?\n\nThere are two obvious approaches. One is to tell each program about the properties of terminals, so it does the right thing (whether by option or automatically). The other is to write a command that handles terminals, and leave most programs untouched.\n\nAn example of the first approach is Berkeley's version of the ls command, which lists the filenames in a directory. Let us call it lsc to avoid confusion. The 7th Edition ls command lists filenames in a single column, so for a large directory, the list of filenames disappears off the top of the screen at great speed. lsc prints in columns across the screen (which is assumed to be 80 columns wide), so there are typically four to eight times as many names on each line, and thus the output usually fits on one screen. The option -1 can be used to get the old single-column behavior.\n\nSurprisingly, lsc operates differently if its output is a file or pipe:\n\nlsc\n\n## produces output different from\n\n<!-- formula-not-decoded -->\n\nThe reason is that lsc begins by examining whether or not its output is a terminal, and prints in columns only if it is. By retaining single-column output to files or pipes, lsc ensures compatibility with programs like grep or wc that expect things to be printed one per line. This ad hoc adjustment of the output format depending on the destination is not only distasteful, it is unique /2014 no standard UNIX command has this property.\n\nA more insidious problem with lsc is that the columnation facility, which is actually a useful, general function, is built in and thus inaccessible to other programs that could use a similar compression. Programs should not attempt special solutions to general problems. The automatic columnation in lsc is reminiscent of the ''wild cards'' found in some systems that provide filename pattern matching only for a particular program. The experience with centralized processing of wild cards in the UNIX shell shows overwhelmingly how important it is to centralize the function where it can be used by all programs.\n\nOne solution for the ls problem is obvious /2014 a separate program for columnation, so that columnation into say 5 columns is just\n\n<!-- formula-not-decoded -->\n\nIt is easy to build a first-draft version with the multi-column option of pr . The commands 2 , 3 , etc., are all links to a single file:\n\n<!-- formula-not-decoded -->\n\n$0 is the program name ( 2 , 3 , etc.), so -$0 becomes -n where n is the number of columns that pr is to produce. The other options suppress the normal heading, set the page length to 1 line, and pass the arguments on to pr . This implementation is typical of the use of tools /2014 it takes only a moment to write, and it serves perfectly well for most applications. If a more general service is desired, such as automatically selecting the number of columns for optimal compaction, a C program is probably required, but the one-\n\nline implementation above satisfies the immediate need and provides a base for experimentation with the design of a fancier program, should one become necessary.\n\nSimilar reasoning suggests a solution for the general problem of data flowing off screens (columnated or not): a separate program to take any input and print it a screen at a time. Such programs are by now widely available, under names like pg and more . This solution affects no other programs, but can be used with all of them. As usual, once the basic feature is right, the program can be enhanced with options for specifying screen size, backing up, searching for patterns, and anything else that proves useful within that basic job.\n\nThere is still a problem, of course. If the user forgets to pipe output into pg , the output that goes off the top of the screen is gone. It would be desirable if the facilities of pg were always present without having to be requested explicitly.\n\nThere are related useful functions that are typically only available as part of a particular program, not in a central service. One example is the history mechanism provided by some versions of the UNIX shell: commands are remembered, so it's possible to review and repeat them, perhaps with editing. But why should this facility be restricted to the shell? (It's not even general enough to pass input to programs called by the shell; it applies to shell commands only.) Certainly other programs could profit as well; any interactive program could benefit from the ability to re-execute commands. More subtly, why should the facility be restricted to program input ? Pipes have shown that the output from one program is often useful as input to another. With a little editing, the output of commands such as ls or make can be turned into commands or data for other programs.\n\nAnother facility that could be usefully centralized is typified by the editor escape in some mail commands. It is possible to pick up part of a mail message, edit it, and then include it in a reply. But this is all done by special facilities within the mail command and so its use is restricted.\n\nEach such service is provided by a different program, which usually has its own syntax and semantics. This is in contrast to features such as pagination, which is always the same because it is only done by one program. The editing of input and output text is more environmental than functional; it is more like the shell's expansion of filename metacharacters than automatic numbering of lines of text. But since the shell does not see the characters sent as input to the programs, it cannot provide such editing. The emacs editor 3 provides a limited form of this capability, by processing all UNIX command input and output, but this is expensive, clumsy, and subjects the users to the complexities and vagaries of yet another massive subsystem (which isn't to criticize the inventiveness of the idea).\n\nA potentially simpler solution is to let the terminal or terminal interface do the work, with controlled scrolling, editing and retransmission of visible text, and review of what has gone before. We have used the programmability of the Blit terminal 4 /2014 a programmable bitmap graphics display /2014 to capitalize on this possibility, to good effect.\n\nThe Blit uses a mouse to point to characters on the display, which can be edited, rearranged and transmitted back to the UNIX system as though they had been typed on the keyboard. Because the terminal is essentially simulating typed input, the programs are oblivious to how the text was created; all the features discussed above are provided by the general editing capabilities of the terminal, with no changes to the UNIX programs.\n\nThere are some obvious direct advantages to the Blit's ability to process text under the user's control. Shell history is trivial: commands can be selected with the mouse, edited if desired, and retransmitted. Since from the terminal's viewpoint all text on the display is equivalent, history is limited neither to the shell nor to command input. Because the Blit provides editing, most of the interactive features of programs like mail are unnecessary; they are done easily, transparently and uniformly by the terminal.\n\nThe most interesting facet of this work, however, is the way it removes the need for interactive features in programs; instead, the Blit is the place where interaction is provided, much as the shell is the program that interprets filename-matching metacharacters. Unfortunately, of course, programming the terminal demands access to a part of the environment off-limits to most programmers, but the solution meshes well with the environment and is appealing in its simplicity. If the terminal cannot be modified to provide the capabilities, a user-level program or perhaps the UNIX kernel itself could be modified fairly easily to do roughly what the Blit does, with similar results.\n\nThe key to problem-solving on the UNIX system is to identify the right primitive operations and to put them at the right place. UNIX programs tend to solve general problems rather than special cases. In a very loose sense, the programs are orthogonal, spanning the space of jobs to be done (although with a fair amount of overlap for reasons of history, convenience or efficiency). Functions are placed where they will do the most good: there shouldn't be a pager in every program that produces output any more than there should be filename pattern matching in every program that uses filenames.\n\nOne thing that UNIX does not need is more features. It is successful in part because it has a small number of good ideas that work well together. Merely adding features does not make it easier for users to do things /2014 it just makes the manual thicker. The right solution in the right place is always more effective than haphazard hacking.\n\n1. B. W. Kernighan and Rob Pike, The UNIX Programming Environment, Prentice-Hall (1984).\n2. D. Norman, ''The Truth about UNIX,'' Datamation (November, 1981).\n3. James Gosling, ''UNIX Emacs,'' CMU internal memorandum (August, 1982).\n4. R. Pike, ''The Blit: A Multiplexed Graphics Terminal,'' Bell System Technical Journal (this issue, 1984).","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8779506571593515518,"filename":"Program Design in the UNIX Environment..pdf"},"page_count":7},"metadata_field_count":2,"attempts":1,"timestamp":1754064761.9226909,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/code_and_formula.pdf","file_size":89031,"file_type":"pdf","category":"tiny","framework":"docling","iteration":1,"extraction_time":5.181172847747803,"startup_time":null,"peak_memory_mb":2006.8046875,"avg_memory_mb":1964.50390625,"peak_cpu_percent":223.1,"avg_cpu_percent":44.62,"total_io_mb":null,"status":"success","character_count":5537,"word_count":908,"error_type":null,"error_message":null,"quality_metrics":{"char_count":5537,"word_count":908,"sentence_count":46,"paragraph_count":14,"avg_word_length":5.084801762114537,"avg_sentence_length":19.782608695652176,"extraction_completeness":1.0,"text_coherence":0.9574468085106383,"noise_ratio":0.06889651435795557,"gibberish_ratio":0.0,"flesch_reading_ease":40.41317290816957,"gunning_fog_index":13.196895315782967,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.6734902325576162,"extracted_text":"## JavaScript Code Example\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n```\nfunction add(a, b) { return a + b; } console.log(add(3, 5));\n```\n\nListing 1: Simple JavaScript Program\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n## Formula\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt.\n\n<!-- formula-not-decoded -->\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8967166443255744998,"filename":"code_and_formula.pdf"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064767.3854578,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/The Hideous Name - 1985 (pike85hideous).pdf","file_size":32949,"file_type":"pdf","category":"tiny","framework":"docling","iteration":1,"extraction_time":15.41817593574524,"startup_time":null,"peak_memory_mb":1967.87109375,"avg_memory_mb":1942.72734375,"peak_cpu_percent":258.1,"avg_cpu_percent":51.620000000000005,"total_io_mb":null,"status":"success","character_count":29498,"word_count":4762,"error_type":null,"error_message":null,"quality_metrics":{"char_count":29498,"word_count":4762,"sentence_count":268,"paragraph_count":99,"avg_word_length":5.040109197816044,"avg_sentence_length":17.813432835820894,"extraction_completeness":1.0,"text_coherence":0.9368029739776952,"noise_ratio":0.10169638619567428,"gibberish_ratio":0.00641025641025641,"flesch_reading_ease":50.76226731146622,"gunning_fog_index":13.57057751611999,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6478656259082158,"extracted_text":"## The Hideous Name †\n\nRob Pike P.J. Weinberger\n\nAT&amp;T Bell Laboratories\n\nMurray Hill, New Jersey 07974\n\n## ABSTRACT\n\nThe principles of good naming in computing have been known for decades.  The invention of new facilities in computing systems can be guided by these principles.  For example, the introduction of networking need not require any change to the majority of system utilities, because objects such as files on remote machines can be given syntactically familiar names within the local machine's name space.  Indeed, the implementers of networks often do well by these standards by striving to make remote files essentially indistinguishable  from  local  ones. Unfortunately,  the  situation  with  internetwork  mail addresses  is  not  as  satisfactory. The  practitioners  of  internetworking  would  profit  by understanding the benefits of simple, uniform syntax.\n\n## research!ucbvax!@cmu-cs-pt.arpa:@CMU-ITC-LINUS:dave%CMU-ITC-LINUS@CMU-CS-PT\n\n- Carnegie-Mellon University mailer\n\nI cannot tell what the dickens his name is.\n\n- Shakespeare, Merry Wives of Windsor , II. ii. 20.\n\n## Introduction\n\nAny object relevant to computation - file, process, user, computer, network or whatever - needs a name.  The name determines the access: it is by interpreting the name, within the name space it inhabits, that a program or person is given access to the object.  The manner in which names are constructed affects not only how objects are named but also how they are used.\n\nThe form of names and name spaces is the subject of this essay.  We will use file names from several operating systems as examples to illustrate criteria for distinguishing good names from bad.  The same criteria may be applied to network mail names, pointing out some of the shortcomings of the current ad hoc systems for internetworking.\n\nThe criteria are not new, and seem to be generally accepted, but are not applied in practice.  This paper is an attempt to re-establish their use.\n\n## Principles of Names and Name Spaces\n\nWhat's in a name?  A string of characters, encoded by some convention (ASCII or EBCDIC), that identifies an object.  If the function of a name stopped there, this definition would be sufficient.  In IBM's MVS, for example, a file name is an at most 44-character string, largely uninterpreted by system software. The name space is 'flat,' or linear.\n\nSystems  designed  more  recently  use  names  to  help organize as  well  as  identify. For  instance, although in MVS the disk containing the file is specified separately from the name, in MS-DOS part of the\n\n__________________\n\n† An earlier version of this appeared in Summer 1985 Usenix Conference Proceedings, Salt Lake City, Utah.\n\nname of a file is a string that identifies the disk drive holding the file.  Syntax separates these components of the name; MS-DOS uses a colon following the disk name, a single character:\n\nA:FILE\n\nis a file on disk drive A , while\n\nB:FILE\n\n## is a file on disk drive B .\n\nThe advantage of putting such information in names is that software need not know about disks to manipulate files.  Internally, of course, system software must use the syntax of the name to locate the file, but this is largely transparent to applications software, and users.\n\nThe MVS system uses independent information (stored in a catalog) to find a file given its name, while  MS-DOS exposes location  information  in  the  name.  MS-DOS  users  may  put related  files  on  the same disk, thus using a distinguished piece of the name to help organize their world.  MVS users  must instead adapt ad hoc strategies (conventions for the syntax of names) to the same end.  Thus each system does both more and less for the user: MVS provides no help in organization and a naming independent of the  physical  location  of  the  file,  while  MS-DOS  provides  the  opposite. Instead,  if  names  had  multiple components (that is, syntax), where the components did not necessarily correspond to physical devices, the name  space  would  have  the  advantages  of  that  of  both  MVS  and  MS-DOS,  with  the  disadvantages  of neither.  Such a name space exists.\n\n## A good example: UNIX ®\n\nUNIX file name space is a tree, with file names that specify a path from one node to another.  The representation of the name is a simple ASCII string, with slashes / separating node identifiers.  The name\n\n## /usr/rob/bin/cat-v\n\nis a path from the root of the tree (denoted by the leading slash), through nodes called usr , rob and bin , to a file called cat-v .  Nodes intermediate in the tree are called directories .  The system uses the components to find the file, which the user can use as syntax to organize sets of files.  For example, although on most UNIX systems, the string /usr specifies a separate disk drive, this is irrelevant to both software and users; it is merely a string that identifies the directory beneath which users' files may be found.\n\nThe structure of the name space (a directory tree) is reflected in the style of the name (a path through the tree).  Were the file system arranged differently, say as a flat array, the form and interpretation of file names would also be different; for example, UNIX processes are named by small integers.\n\n## Properties of Name Spaces\n\nName spaces have some general properties.  First, names within the space may be absolute or relative.  Absolute names specify an object by position with respect to a single fixed point, such as the root of the UNIX file system (named / ); relative names, with respect to a local point (the 'current working directory' in UNIX, named . (dot)).  Also, an operating system typically has operators to manipulate its name space, such as system calls to create and remove files. UNIX also provides a system call (named mount ) to join together two name spaces by attaching the root of one space, resident on a separate disk drive, to a leaf of another.\n\nFinally, a name space has syntax - how a name is constructed - and semantics - the nature of the object a name identifies.\n\nA UNIX file name, for example, is a sequence of slash-separated strings that identifies a formatless byte stream.  External conventions may provide further semantics: the UNIX file system contains objects that are not ordinary files.  Simply by having ordinary file names, though, these objects have ordinary file properties such as protection.  Some examples from our research version of UNIX, called the Ninth Edition:\n\nDevice files.  With names conventionally prefixed (that is, residing in the directory) /dev , these files provide direct access to devices.  The name /dev/mt , for example, identifies a magnetic tape drive.\n\nProcesses.  The directory /proc contains files with names that are process numbers.  Opening such a file\n\nprovides access to processes for purposes such as interactive debugging.  Although processes have integers that identify them, it is convenient to provide names for them in the file system as well.  For example, listing the directory containing the process files is a simple way to identify running processes.\n\nDatabases.  Some databases are conveniently represented as name-value pairs in a hierarchy, and such databases may be mapped into the file system name space.  For example, the directory /n/face contains a hierarchically-structured database that associates digitized images of people's faces with the people's electronic mail addresses.\n\nOther files. UNIX has the notion of standard input : the input connected to a (typically) interactive program. The name /dev/stdin identifies a file that, when opened, connects to the standard input of the program.  This allows files that demand a file name (such as the file comparison program) to be given input directly from the interactive terminal or from a pipe.\n\nBecause these unusual objects have regular names, existing tools can treat them as files, so standard software can provide services for them that would otherwise require special handling.\n\nSome  of  the  Ninth  Edition  examples  above  have  different  names  in  other UNIX systems. /dev/stdin is often represented by the single character -,  as an argument to commands, but this convention is capriciously followed.  Because it must be provided explicitly by each program, it is only available in some programs.  By providing /dev/stdin in the global name space, it is available uniformly for all programs, always.  As another example, processes are represented by an integer process identifier, which is  only  meaningful  to  a  few  process-specific  system  calls. These  calls  implement  their  own  protection mechanism, although the protection provided by the file system suits perfectly (these system calls predate the process file system).  Finally, virtual terminals implemented using the multiplexed files of the Seventh Edition (an earlier research version of the system) have no external name, so it is impossible to open one for I/O.  The Ninth Edition provides a name in the file system that is available, without prearrangement or special protocol, to any program.\n\n## Connecting Name Spaces\n\nWhen machines are connected together, their name spaces may be joined to facilitate the sharing of files.  If the name spaces have the same clean structure, that structure can be extended simply to describe the  larger  space. The  Newcastle  Connection  names  a  file  on  another  machine,  say ucbvax ,  as /../ucbvax/usr/rob/bin/cat-v ; the Ninth Edition notation is /n/ucbvax/usr/rob/bin/cat-v .  In the former the name space has been extended by making it a subspace of a larger space, in the latter a new name subspace has been grafted on using mount , but in neither case has the syntax of names been changed; any program that understands a file name will understand a network  file  name  without  change,  and  relative  names  for  files  (those  that  don't  begin  with / )  are unchanged.  As a spectacular example, we might see on which machines user wnj has a login by searching (using a program called grep ) through the system administration files (called /etc/passwd ) on all the machines:\n\ngrep wnj /n/*/etc/passwd\n\nThe file name 'wild card' character * matches all files within a directory.  Here, it happens to match all machines reachable from the local machine, although grep is oblivious of this distinction.  We could even investigate those machines connected to ucbvax by grep wnj /n/ucbvax/n/*/etc/passwd\n\nThe file system that is the union of these name spaces might have no global root, so the meaning of an absolute name may become ambiguous because of the presence of multiple reference points.  In fact, there might be no single point to which all names can be fixed.  In practice, though, this ambiguity is unimportant.\n\n## A bad example: VAX/VMS\n\nUnfortunately,  not  everyone  chooses  naming  conventions  in  accord  with  these  guidelines.  On VAX/VMS  our  canonical  file  might  be  called UCBVAX::SYS$DISK:[ROB.BIN]CAT_V.EXE;13 . The  VMS  file  naming  scheme  provides  a  distinct  syntax  for  each  level  in  the  name: UCBVAX:: is  a machine; SYS$DISK: is  a  disk  (actually  a  macro  that  expands  to  a  disk  name  such  as DUA0: ); [ROB.BIN] is a directory; CAT_V is a file 'base' name; .EXE is a file 'type'; and ;13 is a version number.\n\nAlthough  this  syntax  may  seem  unnecessarily  cumbersome,  it  has  a  precedent:  it  is  analogous  to expressions in programming languages. Consider a C expression such as *structure[index].field-&gt;ptr . If * were  postfix  and / the  only  dereferencing  operator,  the expression  might  be  written structure/index/field/ptr/ . Functionally-minded  programmers might use the notation contents(ptr(field(index(structure)))) .  (A single character cannot be used in C because it could not distinguish X[Y] and X-&gt;Y , with X a structure pointer and Y an integer or structure element respectively, but this ambiguity could be eliminated in a different language.)  C and VMS use syntax to distinguish the types of the components of a name.  Instead, the UNIX file system deliberately  hides  the  distinctions. Aside  from  the  obvious  advantages  such  as  simplicity  of  syntax  and  the usurping of only a single character, the uniformity also makes the name space easier to manipulate: the mount system call aliases a disk and a directory.\n\nVMS has no true name space manipulation operator.  Although one could be constructed, it would be limited  in  scope:  how  could  a  disk  be  mounted  atop SYS$DISK:[ROB.BIN] when disks  are  always before directories in the name?  Instead, VMS has macros such as SYS$DISK to hide the manner in which the  space  is  assembled,  and  even  to  provide  the  concept  of  a  local  name  by  automatically  inserting  an expanded macro before an unqualified name.\n\nThe problems with dynamic evaluation of macros are well known.  For example, the VMS service to set  the  reference  point  for  local  names  (the  equivalent  of UNIX chdir )  sets  the  default  prefix  for  file names, but the prefix will only be evaluated and so checked for validity, when a file name is interpreted, which may be arbitrarily and confusingly long after the prefix was set.  In fact, the default prefix macro is handled  in  a  special  way,  because  directories  are  not  constructed  by  simple  concatenation;  subdirectory [.BIN] in directory [ROB] is named [ROB.BIN] .  Also, these local names are not really local at all; the prefix implicitly binds them to a root of the name space.  This implies that all names are always attached to some root, and therefore if the root changes, the name must also change, invisibly.\n\nAnother problem with VMS names is that one cannot do the equivalent of searching the VMS password files ( SYSUAF.LIS )  on various machines with *::SYS$SYSTEM:SYSUAF.LIS ;  the * operator doesn't apply to that portion of a name.  This is an example of the general problem that whenever the name syntax  is  changed  all  programs  that  interpret  names  must  be  modified. More  subtly,  although  if  the machine ucbvax were a gateway we could access files on a distant machine as UCBVAX::KREMVAX::file ,  it  is  only because the semantics of :: explicitly permit such access.  The :: operator is implemented by passing the string after it to the remote machine, but first checking its syntax, so the file name parser must have special code for multiple :: 's.\n\n## A Quibble about Cedar\n\nThe Cedar file system has a uniform naming syntax, just like UNIX, except that files have version numbers, separated from the file name by an exclamation mark ! .  The implementers thought that version numbers are fundamentally different components of file names and therefore deserved different syntax.  But the  change  in  syntax  requires  new  rules  to  define  the  meaning  of  file  names. A  good  test  of  naming schemes is whether arbitrary names constructed by the syntactic rules make sense within the rules of the system or whether their interpretation requires new semantic rules. In Cedar file, /usr/rob/bin/cat-v!3 is clearly version 3 of cat-v , but what is /usr/rob!3/bin/cat-v ?\n\n## Connecting to other machine's file systems\n\nThe IBIS remote file system on UNIX 4.2BSD names a remote file as ucbvax:file .  Many programs don't understand this syntax; the shell (command interpreter) must be modified to make *:file behave as we expect, because the shell expects a slash to separate name components.  Worse, by changing the  syntax,  the  implicit  semantics  of  the  original  naming  scheme  is  lost. In  the  Ninth  Edition  name /n/ucbvax/file it is obvious what file refers to: a file in the root directory of ucbvax. But what is it in ucbvax:file ?  It might be a file in the root, but it isn't.  It is a file in the initial working directory on  the destination machine ( ucbvax )  of  the  user  invoking  the  name  on  the  source  machine  (unless  it begins with / );  its  meaning depends on who is asking.  The extra semantics of : complicate attempts to patch the syntactic problems.  We might try creating a connection (called a symbolic link in UNIX) from the name /n/ucbvax to  the  name ucbvax: ,  but /n/ucbvax/file would  then  still  point  to  a  file  in someone's home directory, and /n/ucbvax/usr/wnj/file would refer to /usr/wnj/usr/wnj/file . If  the  link  evaluates  to ucbvax:/ ,  things  work  as  expected,  but  the slash-less form of IBIS naming is made unavailable.\n\nPart of the problem in the IBIS file system is that it is implemented outside the name space.  By using a variant of the standard system call mount, the Ninth Edition remote file system guarantees that the syntax and semantics of names are free of surprises. For example, it is clear what /n/ucbvax/n/kremvax/file refers to, but what about the IBIS name ucbvax:kremvax:file ? Where does kremvax:file get interpreted?\n\nThere are other ways to interpret file names like ucbvax:file .  When using the UNIX program uucp to  copy a local file to a remote machine, the name ucbvax!file refers to the file on ucbvax whose name is file prefixed by the current directory on the source machine.  The prize goes to DECNET, however: ucbvax::file refers to file in the home directory of the 'default network user' on the destination machine, and ucbvax\"wnj password\"::file refers to file in wnj 's home directory.  It is inexcusable that the password is in the file name, let alone that it is in clear text.\n\n## The story so far\n\nIn summary, there are some guidelines for constructing naming conventions, particularly for objects in a network.  There should be both relative names and absolute names.  Relative names are more important because, among other reasons, the root of the name space may be unknown or non-unique.  The syntax should be clean and uniform; every new syntactic rule requires at least one, and usually many, semantic rules to resolve peculiarities introduced by the new syntax.  If the name space is a tree or any other kind of graph, a single character should be used to separate nodes in a name.\n\nIf these guidelines are followed, names of objects in a network of machines will be easy to construct and interpret; difficult problems of networking will be completely hidden to the users and programs accessing objects in the network.  If they are ignored, both users and programs must be aware of and understand the details of naming locally, globally and everywhere in between.\n\n## Principles of mail names\n\nNow consider the other common name space, mail names.  Mail names are more complex than file names, for both syntactic and semantic reasons.  There are conflicting syntactic traditions, the most familiar two being the UNIX tradition and the ARPANET tradition.  Also, mail names are interpreted by user programs only, with no operating system to enforce semantics.  Thus, the interpretation of the name space is subject to arbitrary hackery.\n\nEven a trivial case like the name pjw in the command\n\n<!-- formula-not-decoded -->\n\nhas no clear meaning.  When electronic mail was invented, the name pjw referred to a mailbox on the local machine - the only machine to which mail could be sent.  The local space of mailbox names was a small flat space.  Later, when systems were connected together, there were two ways to generalize.  If the computers were closely connected (that is, sharing administration), one could extend the flat name space over the whole set of machines, so that saying mail pjw on any of the machines gets pjw 's mailbox on pjw 's\n\nhome machine.  If the machines were instead loosely connected, a more attractive scheme would be to use machine  names  to  qualify  the  local  mailbox  names: pjw@system in  the  ARPANET  tradition,  or system!pjw in  the UNIX tradition.  The two methods differ only in the naming and how the software decides to find the destination.  In the first alternative, it looks up pjw in a database, while in the second it looks  up system . In  both  cases,  the  software  on  the  machines  involved  must  also  have  a  protocol  for delivering mail, but that's irrelevant here.  Note that neither naming scheme has anything to do with routing the message.\n\nAt this level, either of these two schemes is fairly convenient.  But when we try to connect lots of systems with these flat name spaces, names must either conflict or be decorated artificially to disambiguate them.  We should apply the principles of good naming to find a better solution.\n\nMail names specify paths within a large name space populated by systems and mailboxes rather than files, but the basic idea is the same.  The question is what a path denotes.  The answer depends on how the software determines what to do with the mail.\n\nImagine we are on machine ucbvax and want to send mail to pjw@system .  There are two methods to negotiate the transaction.  The first method, used by UNIX, views system as the name of an authority that the mail and mail address are passed to.  That is, sending the mail involves a message to system of the form, ''I am machine ucbvax , here is mail for pjw .''  The second, that of the ARPANET, interprets system as the name of an authority that will say where to send the mail, as in, ''I am machine ucbvax , where do I send mail for pjw ?''  The destination of these messages is found by looking up system in a database.  (The details of sending the message are outside this discussion.)  All naming schemes for mail follow  some  combination  of  these  alternatives.  The UNIX method uses the same mechanism to resolve names and to transmit mail; the ARPANET method resolves the names with one mechanism and uses some other, not associated with the name at all, to send the mail.\n\nGiven these two models, how do we generalize mail delivery in larger networks?  For ARPANET, a mail address user@world3.world2.world1 is interpreted by looking up world1 and then asking it where to send mail for world3.world2 .  For UNIX, a mail address world1!world2!world3!user is  interpreted  by  looking  up world1 and  then  sending  the  mail  and world2!world3!user to  it. Although the two forms sound similar, they have different problems.  (And, why does ARPA use two characters when one is sufficient?)\n\nThe most common interpretation of the UNIX name is as a route, but it need have nothing to do with a  route. Once  the  name  is  handed  off  to world1 ,  it  can  be  rewritten  to  correspond  to  the  syntax  of world1 's name space; in fact, UNIX mailers rewrite names freely.  Because ARPANET names are handled differently, they cannot be rewritten:  the answer to the routing question must produce the four-byte binary network address of the destination mailbox.  (At least in principle, this defect may be circumvented. The response to the routing question might be a little program: ''Send the mail to A and tell it to use protocol P to send it to B'' and so forth.  However, that's not how it's done in practice.)\n\nConsider again the relation between mail names and file names.  When the operating system interprets the name /n/ucbvax/n/kremvax/file it discovers that the directory /n/ucbvax refers to a remote machine, finds the server on that machine, and sends it the name /n/kremvax/file expecting back a handle to use the file.  It does not care what the server does with the name.  It does not expect to get back instructions for finding the file.  It is asking for file service, not name service.  Indeed were ucbvax a VMS machine, the server might invisibly translate /n/kremvax/file immediately into KREMVAX::SYS$DISK:[NETUSER]file to discover it on its local system.  Remote file access would be harder to implement using the ARPANET scheme.\n\n## Name servers † considered speculative\n\nName servers don't scale well, for precisely  the  reason  that  the  ARPANET  name  scheme  doesn't  scale well: the name server must understand all possible name syntaxes.  When a system with a different naming convention  is  connected,  the  name  server  must  suddenly  interpret  all  the  different  syntaxes,  instead  of\n\n__________________\n\n† ''Name server'' is a noun phrase that is ambiguous.  You hand a name server a name, it hands you connection informa-\n\ntion.  Thus it serves connections, not names.  Consider the difference between air pollution and noise pollution.\n\nleaving the job to the new system itself.  Worse, how do you connect two networks, each with its own name server?  Even if the servers use the same data formats and algorithms, they might use unique identifiers that become non-unique when they are joined.\n\nName servers have problems on other levels, too.  Who administers a name server's database?  If the database is not audited frequently much of the data will be obsolete, while if the controls are too onerous, people won't bother keeping the database current.  What does the database contain?  Most name servers produce network addresses, but no single network reaches everywhere.\n\n## Why are mail names such a mess?\n\nBecause people keep gluing name spaces together without smoothing the syntactic differences.  The result is the mail name equivalent of bastardized file names like /n/ucbvax/UCBVAX::KREMVAX:/rob/bin/A:dos-file where different conventions are mixed in a single string.\n\n## Relative names are important\n\nThe ARPANET people define their names to have the form\n\n## local-part @ domain\n\nwhere both local-part and domain are dot-separated lists of words.  Domains are the generalization of what we have been calling systems; the local part is anything understood by the leftmost domain name.  According to RFC 882 (''Domain Names - Concepts and Facilities''), the domains are all absolute.  The dot signifying the root of the hierarchy is implicit at the right of the list of names, which makes it impossible to connect disjoint name spaces since all interpreters of names must know all names at the top level of the hierarchy.  Also, for backwards compatibility, RFC 822 (''Standard for the Format of ARPA Internet Text Messages'') allows all but the leftmost of the domain names to be elided, since ''specification of a fully qualified address can become inconvenient.''\n\n## What happens in practice?\n\nAs long as software continues to deliver mail, people are unwilling to improve the state of affairs. Mailers just butt together names with their own rewriting rules, producing names like:\n\nIJQ3SRA%UCLAMVS.BITNET%SU-LINDY@SU-CSLI.ARPA\n\nThis  is  the  name  of  user IJQ3SRA on  machine UCLAMVS ,  accessible  through  BITNET  from  machine SU-LINDY ,  which  is  known  to SU-CSLI on  the  ARPANET.  Each  program  that  touched  this  name rewrote it by its own rules, although the domains proposal is intended to prevent this.\n\nThere are two domains in this name (although the syntax is wrong): BITNET and ARPA .  However, BITNET is not a registered name, so the gateway service between BITNET and ARPANET must be made explicit in the name, requiring the invention of a new syntax character ( % ) which is translated to @ at the gateway, because ARPANET names can only contain a single @ .  Despite the words in the standard about hierarchy, the domain space is nearly flat, so the local parts of the names carry source routing and domain transitions explicitly.  To worsen matters, machines that advertise adherence to the standard in fact do not; instead the name translations that occur at gateways (such as converting @ to % and rearranging the components)  are  at  best ad  hoc. By  legislating  away  bad  names,  ARPANET  has  reduced  the  problem  of networking to a still-unsolved problem.  But the mailers plod resolutely on.\n\n## Standards?\n\nIt  is  clear  that  standards  are  necessary  for  electronic  mail  to  be  delivered  reliably  across  network boundaries.  What needs to be standardized is the interpretation of names, especially at network boundaries. Until such a standard exists; is syntactically and semantically clean; distributes the interpretation of names across the systems that understand them; and is adhered to, the network mail situation will not improve.\n\n## Conclusions\n\n## Doug McIlroy has observed that\n\n...  bad  notations  can  stifle  progress.  Roman numerals  hobbled  mathematics  for  a  millennium  but were propagated by custom and by natural deference to authority.  Today we no longer meekly accept individual authority.  Instead, we have ''standards,'' impersonal imprimaturs on convention.  Some standards are sound and indispensable; some simply celebrate bureaucratic littleness of mind.  A harvest of gimmicks to save appearances within the standard has grown up, then gimmicks to save the appearances within the appearances.  You know how each one got there: an overnight hack to paste another tumor onto a wild cancerous growth.  The concern was with method, regardless of results. The result is extravagantly worse than Roman numerals: you can't read the notation right to left or left to right.  As an amalgam of languages, it can't be deciphered by a native speaker of any one of them, much as if we were to switch at random places in a number between Roman and Arabic signs and between big-endian and little-endian order.  But now that it all ''works'' - at least for the strong of stomach - the tumors themselves are being standardized.\n\nI fled, and cry'd out ''Death''; Hell trembled at the hideous name, and sigh'd From all her caves, and back resounded, ''Death.''\n\n- Milton, Paradise Lost","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":16409241325064761934,"filename":"The Hideous Name - 1985 (pike85hideous).pdf"},"page_count":8},"metadata_field_count":2,"attempts":1,"timestamp":1754064783.0818415,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/fake-memo.pdf","file_size":13374,"file_type":"pdf","category":"tiny","framework":"docling","iteration":1,"extraction_time":3.6124520301818848,"startup_time":null,"peak_memory_mb":1962.85546875,"avg_memory_mb":1931.128125,"peak_cpu_percent":194.3,"avg_cpu_percent":57.84000000000001,"total_io_mb":null,"status":"success","character_count":205,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":205,"word_count":37,"sentence_count":3,"paragraph_count":5,"avg_word_length":4.45945945945946,"avg_sentence_length":12.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.07407407407407407,"flesch_reading_ease":77.70585585585587,"gunning_fog_index":6.014414414414415,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.72213231981982,"extracted_text":"May 5, 2023\n\nTo Whom it May Concern:\n\nThere were 20,000 bottles of water, 10,000 blankets, and 200 laptops delivered on January 23, 2023. A total of 3 trucks were used for 15 hours.\n\nBest Regards,\n\nMallori","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2324428769090743019,"filename":"fake-memo.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064786.9723237,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Perfect Hash Functions - Slides.pdf","file_size":17159,"file_type":"pdf","category":"tiny","framework":"docling","iteration":1,"extraction_time":12.770730018615723,"startup_time":null,"peak_memory_mb":1958.0078125,"avg_memory_mb":1925.66796875,"peak_cpu_percent":309.2,"avg_cpu_percent":61.839999999999996,"total_io_mb":null,"status":"success","character_count":3222,"word_count":535,"error_type":null,"error_message":null,"quality_metrics":{"char_count":3222,"word_count":535,"sentence_count":12,"paragraph_count":55,"avg_word_length":4.31214953271028,"avg_sentence_length":44.75,"extraction_completeness":1.0,"text_coherence":0.9230769230769231,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":39.084615384615404,"gunning_fog_index":20.813675213675214,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.697125,"extracted_text":"## Perfect Hash Functions\n\nIn most general applications, we cannot know exactly what set of key values will need to be hashed until the hash function and table have been designed and put to use.\n\nAt that point, changing the hash function or changing the size of the table will be extremely expensive since either would require re-hashing every key.\n\nA perfect hash function is one that maps the set of actual key values to the table without any collisions.\n\nA minimal perfect hash function does so using a table that has only as many slots as there are key values to be hashed.\n\nIf the set of keys IS known in advance, it is possible to construct a specialized hash function that is perfect, perhaps even minimal perfect.\n\nAlgorithms for constructing perfect hash functions tend to be tedious, but a number are known.\n\n## Cichelli's Method\n\nThis is used primarily when it is necessary to hash a relatively small collection of keys, such as the set of reserved words for a programming language.\n\nThe basic formula is:\n\n$$h(S) = S.length() + g(S[0]) + g(S[S.length()-1])$$\n\nwhere g() is constructed using Cichelli's algorithm so that h() will return a different hash value for each word in the set.\n\nThe algorithm has three phases:\n\n- computation of the letter frequencies in the words\n\n- ordering the words\n\n- searching\n\nSuppose we need to hash the words in the list below:\n\ncalliope\n\nDetermine the frequency with which each first and last letter occurs:\n\nclio erato\n\neuterpe melpomene\n\npolyhymnia terpsichore\n\nthalia urania\n\n```\nletter: e  a  c  o  t  m  p  u freq:   6  3  2  2  2  1  1  1\n```\n\nScore the words by summing the frequencies of their first and last letters, and then sort them in that order:\n\ncalliope     8\n\nclio\n\n4\n\nerato 8\n\neuterpe\n\n12\n\nmelpomene 7\n\npolyhymnia\n\n4\n\nterpsichore\n\n8\n\nthalia 5\n\nurania\n\n4\n\neuterpe\n\ncalliope\n\nerato\n\nterpsichore\n\nmelpomene\n\nthalia\n\nclio\n\npolyhymnia\n\nurania\n\n## Cichelli's Method\n\nFinally, consider the words in order and define g(x) for each possible first and last letter in such a way that each of the words will have a distinct hash value:\n\n## Cichelli's Method\n\nCichelli's method imposes a limit on the search at this point (we're assuming it's 5 steps), and so we back up to the previous word and redefine the mapping there:\n\n| word       | g_value assigned   |   h(word) |   table | slot   |\n|------------|--------------------|-----------|---------|--------|\n| polyhymnia | p-->0              |        10 |       1 | reject |\n|            | p-->1              |        11 |       2 | reject |\n|            | p-->2              |        12 |       3 |        |\n| urania     | u-->0              |         6 |       6 | reject |\n|            | u-->1              |         7 |       7 | reject |\n|            | u-->2              |         8 |       8 | reject |\n|            | u-->3              |         9 |       0 | reject |\n|            | u-->4              |        10 |       1 | ok     |\n\nSo, if we define g() as determined above, then h() will be a minimal perfect hash function on the given set of words.\n\nThe primary difficulty is the cost, because the search phase can degenerate to exponential performance, and so it is only practical for small sets of words.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6699026421032985158,"filename":"Perfect Hash Functions - Slides.pdf"},"page_count":5},"metadata_field_count":2,"attempts":1,"timestamp":1754064800.0182712,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/WKEY_AM.md","file_size":58405,"file_type":"md","category":"tiny","framework":"docling","iteration":1,"extraction_time":3.6668131351470947,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":100.1,"avg_cpu_percent":20.02,"total_io_mb":null,"status":"success","character_count":20729,"word_count":2118,"error_type":null,"error_message":null,"quality_metrics":{"char_count":20729,"word_count":2118,"sentence_count":268,"paragraph_count":75,"avg_word_length":6.4178470254957505,"avg_sentence_length":7.958955223880597,"extraction_completeness":1.0,"text_coherence":0.6753731343283582,"noise_ratio":0.7,"gibberish_ratio":0.07228915662650602,"flesch_reading_ease":29.140747770425776,"gunning_fog_index":12.929579976985043,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4802692182951217,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- History\n- 2\n- Programming\n- 3\n- Translator\n- 4\n- References\n- 5\n- External links\n\nToggle the table of contents\n\n# WKEY (AM)\n\nAdd languages\n\nAdd links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nRadio station in Covington, Virginia\n\nWKEY\n\n|                                                         |                                                                                                                      |\n|---------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| *Covington, Virginia* United States                     |                                                                                                                      |\n| Broadcast area                                          | *Covington, Virginia*Clifton Forge, Virginia                                                                         |\n| Frequency                                               | 1340kHz                                                                                                              |\n| Branding                                                | 103.5 Big Country                                                                                                    |\n| Programming                                             |                                                                                                                      |\n| Format                                                  | Country                                                                                                              |\n| Affiliations                                            | *Westwood One's Mainstream Country network *Fox News Radio*MRN Radio*PRN Radio* Virginia Sports Network              |\n| Ownership                                               |                                                                                                                      |\n| Owner                                                   | *Todd P. Robinson, Inc. * (WVJT, LLC)                                                                                |\n| Sister stations                                         | WJVR,WXCF                                                                                                            |\n| History                                                 |                                                                                                                      |\n| First air date                                          | May 23, 1941 (1941-05-23)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")                                    |\n| Last air date                                           | November 14, 2024 (2024-11-14)                                                                                       |\n| Former call signs                                       | WJMA (1941–1943)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")[[2]](#cite_note-fcc1-2 \"#cite_note-fcc1-2\") |\n| Call signmeaning                                        | Earl M. Key (former owner)[[3]](#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\")                                         |\n| Technical information[[4]](#cite_note-4 \"#cite_note-4\") |                                                                                                                      |\n| Licensing authority                                     | FCC                                                                                                                  |\n| Facility ID                                             | 73157                                                                                                                |\n| Class                                                   | C                                                                                                                    |\n| Power                                                   | 1,000 watts (day and night)                                                                                          |\n| Transmitter coordinates                                 | 37°46′3.5″N 79°59′5.2″W﻿ / ﻿37.767639°N 79.984778°W﻿ / 37.767639; -79.984778                                         |\n| Translator(s)                                           | See § Translator                                                                                                     |\n| Repeater(s)                                             | 101.9WJVR-HD2(Iron Gate)                                                                                             |\n| Links                                                   |                                                                                                                      |\n| Public license information                              | *Public file*LMS                                                                                                     |\n| Webcast                                                 | Listen live                                                                                                          |\n| Website                                                 | twovirginiasmedia.com/stations/103-5-big-country/                                                                    |\n\nWKEY (1340 kHz ) was an American AM radio station licensed to serve the community of Covington, Virginia . The station, which began broadcasting in 1941, was owned and operated by Todd P. Robinson, Inc. The WKEY broadcast license was held by WVJT, LLC. [ [5] ] (#cite_note-fcc2-5 \"#cite_note-fcc2-5\")\n\nThe station had broadcast a country music format to the Covington / Clifton Forge area. WKEY was branded, along with its broadcast translator W278BF (103.5 FM , Covington), as \"103.5 Big Country\". [ [6] ] (#cite_note-arb1-6 \"#cite_note-arb1-6\")\n\n## History\n\n[ edit ]\n\nPhoto of Earl M. Key, owner of WKEY from 1942 until 1973.\n\nWKEY began broadcasting on May 23, 1941, as WJMA with 250 watts of power. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") WJMA was owned by John Arrington Jr. and his wife, Marcia. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") On May 26, 1942, WJMA was sold to Earl M. Key and the callsign changed to WKEY in 1943. [ [3] ] (#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") [ [8] ] (#cite_note-Key-8 \"#cite_note-Key-8\")\n\nBy 1964, the station's power increased to 1,000 watts during the day, while the nighttime power remained at 250 watts. [ [9] ] (#cite_note-Power1-9 \"#cite_note-Power1-9\") On June 1, 1973, WKEY was sold to WKEY, Inc., headed by E.H. Barr, for an undisclosed amount. [ [10] ] (#cite_note-Sale1-10 \"#cite_note-Sale1-10\") WKEY increased its nighttime power in 1987, to 1,000 watts, matching its daytime power. [ [11] ] (#cite_note-Power2-11 \"#cite_note-Power2-11\")\n\nOn December 20, 2002, WKEY was acquired by Quorum Radio Partners of Virginia, Inc. for $650,000. [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") [ [13] ] (#cite_note-Sale2a-13 \"#cite_note-Sale2a-13\") During 2002, WKEY switched from its longtime country format to oldies . [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") On April 20, 2005, Quorum Radio Partners of Virginia, Inc. filed for bankruptcy and WKEY placed into debtor-in-possession status pending a sale. [ [14] ] (#cite_note-Debtor-14 \"#cite_note-Debtor-14\") On January 1, 2006, WKEY was sold to Todd P. Robinson, Inc., for $100,000. [ [15] ] (#cite_note-Sale3a-15 \"#cite_note-Sale3a-15\") [ [16] ] (#cite_note-Sale3b-16 \"#cite_note-Sale3b-16\")\n\nOn May 1, 2008, the station changed its format from oldies to southern gospel , under \"The Cross\" branding. [ [17] ] (#cite_note-SGospel-17 \"#cite_note-SGospel-17\") On January 14, 2012, WKEY began simulcasting sister station WIQO-FM , after its move to Forest, Virginia , and away from Covington. [ [18] ] (#cite_note-Big1035a-18 \"#cite_note-Big1035a-18\") On August 9, 2012, WKEY began simulcasting full-time on translator station W278BF (103.5 FM), located in Covington, with the country format that was previously heard on WIQO. [ [19] ] (#cite_note-Big1035b-19 \"#cite_note-Big1035b-19\")\n\nOn November 18, 2013, WKEY began streaming its signal live on the internet. [ [20] ] (#cite_note-Streaming-20 \"#cite_note-Streaming-20\")\n\nThe Federal Communications Commission cancelled the station's license on November 14, 2024; [ [21] ] (#cite_note-Cancelled-21 \"#cite_note-Cancelled-21\") WKEY's programming remains on W278BF and the second HD Radio channel of WJVR . [ [22] ] (#cite_note-ri-wkeyclosure-22 \"#cite_note-ri-wkeyclosure-22\")\n\n## Programming\n\n[ edit ]\n\nOffices in Covington\n\nWKEY carried a mix of local and syndicated programming. Weekdays began with a locally produced morning show called \"Highway 64 with Big Al\". [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The station also had a news department which prepared and broadcast local news reports on weekdays. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The bulk of the broadcast day's programming came from Dial Global 's Mainstream Country network. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") Nationally syndicated programs aired on WKEY included the \"Tim White Bluegrass Show\" and \"zMAX Racing Country\". [ [24] ] (#cite_note-Program2-24 \"#cite_note-Program2-24\") The station carried a one-minute newscast from Fox News Radio at the top of each hour. [ [25] ] (#cite_note-FoxNews-25 \"#cite_note-FoxNews-25\")\n\nWKEY had broadcast live football games from Covington High School in the Fall. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") WKEY was an affiliate of the University of Virginia 's Virginia Sports Network, which carried the school's football and basketball games. [ [26] ] (#cite_note-UVASports-26 \"#cite_note-UVASports-26\") NASCAR Sprint Cup Series races could also be heard on WKEY with live coverage provided by the Motor Racing Network and the Performance Racing Network . [ [27] ] (#cite_note-Racing1-27 \"#cite_note-Racing1-27\") [ [28] ] (#cite_note-Racing2-28 \"#cite_note-Racing2-28\")\n\nOn Sunday mornings, WKEY aired an assortment of religious programming . [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The programming began with one half hour of locally produced Gospel music program, after which the station aired the syndicated programs In Touch Ministries and Focus on the Family , rounding out the block with a live local church service broadcast. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\")\n\n## Translator\n\n[ edit ] In addition to the main station, WKEY was relayed by an FM translator to widen its broadcast area. [ [29] ] (#cite_note-fcc3-29 \"#cite_note-fcc3-29\") [ [30] ] (#cite_note-fcc4-30 \"#cite_note-fcc4-30\")\n\n| Call sign   | Frequency   | City of license     |    FID |   ERP(W) | HAAT            | Class   | FCC info   |\n|-------------|-------------|---------------------|--------|----------|-----------------|---------|------------|\n| W278BF      | 103.5 FM    | Covington, Virginia | 139546 |       16 | 310.6m(1,019ft) | D       | LMS        |\n\n## References\n\n[ edit ]\n\n1. ^ a b c d Broadcasting Yearbook - 1942 (PDF). Broadcasting Publications, Inc. 1942. p. 186. Retrieved December 10, 2012.\n2. ^ \"Call Sign History\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n3. ^ a b Broadcasting Yearbook - 1944 (PDF). Broadcasting Publications, Inc. 1944. p. 166. Retrieved December 10, 2012.\n4. ^ \"Facility Technical Data for WKEY\" . Licensing and Management System . Federal Communications Commission .\n5. ^ \"WKEY Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n6. ^ \"Station Information Profile\" . Arbitron / Nielsen Holdings . Retrieved November 20, 2013.\n7. ^ a b Broadcasting Yearbook - 1960 (PDF). Broadcasting Publications, Inc. 1960. pp. A-242. Retrieved December 10, 2012.\n8. ^ Broadcasting Yearbook - 1943 (PDF). Broadcasting Publications, Inc. 1943. p. 150. Retrieved December 10, 2012.\n9. ^ Broadcasting Yearbook - 1964 (PDF). Broadcasting Publications, Inc. 1964. pp. B-163. Retrieved December 10, 2012.\n10. ^ Broadcasting Yearbook - 1974 (PDF). Broadcasting Publications, Inc. 1974. pp. B-218. Retrieved December 10, 2012.\n11. ^ Broadcasting &amp; Cablecasting Yearbook - 1987 (PDF). Broadcasting Publications, Inc. 1987. pp. B-296. Retrieved December 10, 2012.\n12. ^ a b Broadcasting &amp; Cable Yearbook - 2003-2004 (PDF). Reed Publishing (Nederland) B.V. 2003. pp. D-494. Retrieved December 10, 2012.\n13. ^ Volume 19, Issue 86, Your Morning Radio Industry E-Paper . Radio Business Report. November 5, 2002. Retrieved May 6, 2012.\n14. ^ Broadcasting &amp; Cable Yearbook - 2006 (PDF). Reed Publishing (Nederland) B.V. 2006. pp. D-518. Retrieved December 10, 2012.\n15. ^ \"Application for Consent to Assignment of Broadcast Station Construction Permit or License\" . Federal Communications Commission . November 18, 2005. Retrieved December 10, 2012.\n16. ^ \"Escrow Agreement\" . Federal Communications Commission . November 4, 2005. Archived from the original on March 4, 2016. Retrieved December 10, 2012.\n17. ^ \"M-Street Directory 2009/2010 - 18th Edition\" (PDF). M Street Corporation. 2009. p. 644. Retrieved April 17, 2013.\n18. ^ \"Big Country 101\" . Todd P. Robinson, Inc. Archived from the original on January 16, 2012. Retrieved May 6, 2013.\n19. ^ \"We are set to...\" Todd P. Robinson, Inc./Facebook. August 9, 2012. Retrieved May 6, 2013.\n20. ^ \"BIG COUNTRY is now WORLDWIDE!\" . Todd P. Robinson, Inc./Facebook. November 18, 2013. Retrieved November 22, 2013.\n21. ^ \"Cancellation Application\" . Federal Communications Commission , audio division. November 12, 2024. Retrieved November 15, 2024.\n22. ^ Venta, Lance (November 17, 2024). \"FCC Report 11/17: WCCO On The Move\" . RadioInsight . Retrieved February 2, 2025.\n23. ^ a b c d e f \"Big Country 103.5 - Highlands Media Group\" . Todd P. Robinson, Inc. Retrieved April 27, 2016.\n24. ^ \"Affiliates - zMAX Racing Country\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n25. ^ \"Station Finder - Virginia\" . Fox News Channel / Premiere Networks . Retrieved November 20, 2013.\n26. ^ \"Virginia Sports Radio Network Affiliates\" . University of Virginia / CBS Interactive . Retrieved May 11, 2013.\n27. ^ \"Radio Stations - Virginia\" . MRN. Retrieved November 18, 2013.\n28. ^ \"Sprint Cup Series Affiliates\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n29. ^ \"W278BF Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 11, 2013.\n30. ^ \"Application for Authority to Construct or Make Changes in an FM Translator or FM Booster Station\" . FCC Media Bureau. January 3, 2012. Retrieved May 11, 2013.\n\n## External links\n\n[ edit ]\n\n- 103.5 Big Country Online\n- Facility details for Facility ID 73157 (WKEY) in the FCC Licensing and Management System\n- WKEY in Nielsen Audio 's AM station database\n- Facility details for Facility ID 139546 (W278BF) in the FCC Licensing and Management System\n- W278BF at FCCdata.org\n- FCC History Cards for WKEY\n\n| *v*t*eRadio stations in theVirginiaHighlands                                                                                                      |                                                                                  |\n|---------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\n| This area includes the countiesBath,Highland,Alleghany, andRockbridgein Virginia, andPocahontas CountyinWest Virginia.                            |                                                                                  |\n| ByAM frequency                                                                                                                                    | *1370*1450                                                                       |\n| ByFM frequency                                                                                                                                    | *88.7*89.7*89.9*90.9*91.5*91.9*96.7*101.9*107.1                                  |\n| Digital radioby frequency & subchannel                                                                                                            | *88.7-1*88.7-2*88.7-3                                                            |\n| Bycall sign                                                                                                                                       | *W237DF*W278BF*WCHG*WIQR+HD2+HD3*WJVR*WLUR*WMRL*WREL*WVLS*WVMR*WVMR-FM*WVRI*WWZW |\n| Defunct                                                                                                                                           | *WKEY (1340 AM) *WXCF (1230 AM)                                                  |\n| Nearby regionsEastern West VirginiaHarrisonburgRoanoke–LynchburgSee alsoList of radio stations in VirginiaList of radio stations in West Virginia |                                                                                  |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=WKEY\\_(AM)\\&amp;oldid\\=1276840556](https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556 \"https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [Radio stations in Virginia](/wiki/Category:Radio_stations_in_Virginia \"Category:Radio stations in Virginia\")\n\n* [Radio stations established in 1941](/wiki/Category:Radio_stations_established_in_1941 \"Category:Radio stations established in 1941\")\n\n* [1941 establishments in Virginia](/wiki/Category:1941_establishments_in_Virginia \"Category:1941 establishments in Virginia\")\n\n* [Radio stations disestablished in 2024](/wiki/Category:Radio_stations_disestablished_in_2024 \"Category:Radio stations disestablished in 2024\")\n\n* [2024 disestablishments in Virginia](/wiki/Category:2024_disestablishments_in_Virginia \"Category:2024 disestablishments in Virginia\")\n\n* [Defunct radio stations in the United States](/wiki/Category:Defunct_radio_stations_in_the_United_States \"Category:Defunct radio stations in the United States\")\n\n* [Defunct mass media in Virginia](/wiki/Category:Defunct_mass_media_in_Virginia \"Category:Defunct mass media in Virginia\")\n\n* [Covington, Virginia](/wiki/Category:Covington,_Virginia \"Category:Covington, Virginia\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Use American English from February 2025](/wiki/Category:Use_American_English_from_February_2025 \"Category:Use American English from February 2025\")\n\n* [All Wikipedia articles written in American English](/wiki/Category:All_Wikipedia_articles_written_in_American_English \"Category:All Wikipedia articles written in American English\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n* [Pages using gadget WikiMiniAtlas](/wiki/Category:Pages_using_gadget_WikiMiniAtlas \"Category:Pages using gadget WikiMiniAtlas\")\n\n* [Articles using infobox radio station](/wiki/Category:Articles_using_infobox_radio_station \"Category:Articles using infobox radio station\")\n\n- This page was last edited on 21 February 2025, at 02:02 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nWKEY (AM)\n\nAdd languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":12585875467379157536,"filename":"WKEY_AM.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064803.9547994,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/simple-table.md","file_size":152,"file_type":"md","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.01244497299194336,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":78.3,"avg_cpu_percent":15.66,"total_io_mb":null,"status":"success","character_count":167,"word_count":25,"error_type":null,"error_message":null,"quality_metrics":{"char_count":167,"word_count":25,"sentence_count":3,"paragraph_count":1,"avg_word_length":4.0,"avg_sentence_length":9.0,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.39999999999999997,"gibberish_ratio":0.0,"flesch_reading_ease":78.19795454545455,"gunning_fog_index":5.836363636363637,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5852474431818183,"extracted_text":"| Item         |   Price |   # In stock |\n|--------------|---------|--------------|\n| Juicy Apples |    1.99 |          739 |\n| Bananas      |    1.89 |            6 |","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":3364328643571723329,"filename":"simple-table.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064804.2257495,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/README.md","file_size":859,"file_type":"md","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.07088160514831543,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":112.2,"avg_cpu_percent":22.44,"total_io_mb":null,"status":"success","character_count":857,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":857,"word_count":136,"sentence_count":12,"paragraph_count":8,"avg_word_length":5.227941176470588,"avg_sentence_length":11.833333333333334,"extraction_completeness":1.0,"text_coherence":0.8461538461538461,"noise_ratio":0.24669778296382727,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":58.84138211382114,"gunning_fog_index":10.34471544715447,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5034274120512164,"extracted_text":"## Example Docs\n\nThe sample docs directory contains the following files:\n\n- `example-10k.html` - A 10-K SEC filing in HTML format\n- `layout-parser-paper.pdf` - A PDF copy of the layout parser paper\n- `factbook.xml` / `factbook.xsl` - Example XML/XLS files that you can use to test stylesheets\n\nThese documents can be used to test out the parsers in the library. In addition, here are instructions for pulling in some sample docs that are too big to store in the repo.\n\n#### XBRL 10-K\n\nYou can get an example 10-K in inline XBRL format using the following `curl` . Note, you need to have the user agent set in the header or the SEC site will reject your request.\n\n```\ncurl -O \\\n  -A '${organization} ${email}'\n  https://www.sec.gov/Archives/edgar/data/311094/000117184321001344/0001171843-21-001344.txt\n```\n\nYou can parse this document using the HTML parser.","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":8693080574564157183,"filename":"README.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064804.553663,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/HIP_13044_b.md","file_size":54082,"file_type":"md","category":"tiny","framework":"docling","iteration":1,"extraction_time":3.3996050357818604,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":100.0,"avg_cpu_percent":20.0,"total_io_mb":null,"status":"success","character_count":19767,"word_count":1615,"error_type":null,"error_message":null,"quality_metrics":{"char_count":19767,"word_count":1615,"sentence_count":200,"paragraph_count":58,"avg_word_length":6.5702786377708975,"avg_sentence_length":8.255,"extraction_completeness":1.0,"text_coherence":0.665,"noise_ratio":0.6747002580057673,"gibberish_ratio":0.0,"flesch_reading_ease":22.493548039250953,"gunning_fog_index":15.724941590884583,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.46620446729978465,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Observational history\n- 2\n- Characteristics\n- 3\n- Claims of a planetary system\n- 4\n- References\n\nToggle the table of contents\n\n# HIP 13044\n\n15 languages\n\n- العربية\n- Bosanski\n- Deutsch\n- Español\n- فارسی\n- Français\n- Italiano\n- Latviešu\n- 日本語\n- Polski\n- Русский\n- Svenska\n- ไทย\n- Українська\n- 中文\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nCoordinates : 2h 47m 37.4431s, −36° 6′ 27.0322″\n\nFrom Wikipedia, the free encyclopedia\n\n(Redirected from HIP 13044 b ) Star in the constellation Fornax\n\nHIP 13044\n\n| Observation dataEpochJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")EquinoxJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")   |                                                                                                                                         |\n|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| Constellation                                                                                                                                    | Fornax[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                    |\n| Right ascension                                                                                                                                  | 02h 47m 37.44310s[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Declination                                                                                                                                      | −36° 06′ 27.0322″[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Apparent magnitude(V)                                                                                                                            | +9.94[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                     |\n| Characteristics                                                                                                                                  |                                                                                                                                         |\n| Evolutionary stage                                                                                                                               | horizontal branch[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                           |\n| Spectral type                                                                                                                                    | F2[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                        |\n| B−Vcolor index                                                                                                                                   | +0.466±0.026[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                              |\n| Astrometry                                                                                                                                       |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Radial velocity(Rv)                                                                                                                              | 300[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") km/s                                                                    |\n| Proper motion(μ)                                                                                                                                 | RA: +3.083[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yrDec.: −12.573[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yr |\n| Parallax(π)                                                                                                                                      | 1.3705±0.0499mas[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                      |\n| Distance                                                                                                                                         | 2,380 ± 90ly(730 ± 30pc)                                                                                                                |\n| Absolute magnitude(MV)                                                                                                                           | +0.62[[4]](#cite_note-carney2008-4 \"#cite_note-carney2008-4\")                                                                           |\n|                                                                                                                                                  |                                                                                                                                         |\n| Details[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                                              |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Mass                                                                                                                                             | 0.8±0.1M☉                                                                                                                               |\n| Radius                                                                                                                                           | 6.7±0.3R☉                                                                                                                               |\n| Temperature                                                                                                                                      | 6,025±63K                                                                                                                               |\n| Metallicity[Fe/H]                                                                                                                                | −2.09±0.26dex                                                                                                                           |\n| Rotation                                                                                                                                         | 5.53±0.73 d                                                                                                                             |\n|                                                                                                                                                  |                                                                                                                                         |\n| Other designations                                                                                                                               |                                                                                                                                         |\n| CD−36°1052,HIP13044,SAO193917,PPM278353[[5]](#cite_note-SIMBAD_data_on_HIP_13044-5 \"#cite_note-SIMBAD_data_on_HIP_13044-5\")                      |                                                                                                                                         |\n| Database references                                                                                                                              |                                                                                                                                         |\n| SIMBAD                                                                                                                                           | data                                                                                                                                    |\n\nHIP 13044 is a red horizontal-branch star about 2,300 light years (700 pc ) from Earth in the constellation Fornax . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\") The star is part of the Helmi stream , a former dwarf galaxy that merged with the Milky Way between six and nine billion years ago. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") As a result, HIP 13044 circles the Galactic Center at a highly irregular orbit with respect to the galactic plane . HIP 13044 is slightly less massive than the Sun, but is approximately seven times its size. The star, which is estimated to be at least nine billion years old, has passed the red-giant phase. The relatively fast rotation of the star may be due to having engulfed one or more planets during the red-giant phase. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\n## Observational history\n\n[ edit ] A science team from the Max Planck Institute for Astronomy first observed HIP 13044 using Fiber-fed Extended Range Optical Spectrograph (FEROS) at the European Southern Observatory 's La Silla Observatory in Chile. The first follow-up led to the collection of 36 radial velocity measurements taken between September 2009 and July 2010. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\nThe team also used photometric data that had been passively collected by and publicly released into the archive of the SuperWASP collaboration, which had been observing the region where the star was located. In this data, HIP 13044 was found to oscillate; the signal was blocked roughly every sixteen days. Analysis of the SuperWASP and FEROS data led to the supposed discovery of the planet HIP 13044 b , [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") although this claim was later refuted.\n\n## Characteristics\n\n[ edit ] HIP 13044 is an F-type star located approximately 701 parsecs (2,286 light years ) from Earth in the Helmi stream [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")—a group of low-metallicity stars moving with large velocities relative to the Sun. The star follows an eccentric galactic orbit, with a distance from the galactic center ranging from 7 to 16 kiloparsecs . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") The orbit does not lie in the galactic plane , and can reach distances as high as 13 kpc above it. This indicates that it once was part of a satellite galaxy of the Milky Way that was disrupted 6–9 billion years ago. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") The star itself is estimated to be at least nine billion years old. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\nHIP 13044 is fairly evolved star fusing helium in its core, and has therefore already passed the red-giant phase of its evolution. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") It lies near the blue end of the red horizontal branch bordering the instability strip . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") Its surface temperature is about 6025 K and its radius is approximately 6.7 solar radii . HIP 13044's mass is estimated to be 0.8 solar masses . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") Having a rotation period of 5–6 days, HIP 13044 is a fast-rotating star for its type. It is possible that this is because it has swallowed planets during its red-giant phase. [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\")\n\nHIP 13044 has an apparent magnitude of 9.94 and cannot be seen with the unaided eye. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\n## Claims of a planetary system\n\n[ edit ] In 2010, it was announced that a giant planet in a 16.2-day orbit had been discovered by the radial velocity measurements. This would have had implications for planet formation in metal-poor systems and survival of planets being engulfed by expanded giant stars. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") Subsequent analysis of the data revealed problems with the detection: for example an erroneous barycentric correction had been applied (the same error had also led to claims of planets around HIP 11952 that were subsequently refuted). After applying the corrections, there is no evidence for a planet orbiting the star. [ [9] ] (#cite_note-JonesJenkins2014-9 \"#cite_note-JonesJenkins2014-9\")\n\n## References\n\n[ edit ]\n\n1. ^ a b c d e f Brown, A. G. A. ; et al. ( Gaia collaboration ) (August 2018). \" Gaia Data Release 2: Summary of the contents and survey properties\" . Astronomy &amp; Astrophysics . 616 . A1. arXiv : 1804.09365 . Bibcode : 2018A&amp;A...616A...1G . doi : 10.1051/0004-6361/201833051 . Gaia DR2 record for this source at VizieR .\n2. ^ a b c d Anderson, E.; Francis, Ch. (2012). \"XHIP: An extended hipparcos compilation\". Astronomy Letters . 38 (5): 331. arXiv : 1108.4971 . Bibcode : 2012AstL...38..331A . doi : 10.1134/S1063773712050015 . S2CID 119257644 .\n3. ^ a b c d e f g Setiawan, Johny; et al. (2010). \"A Giant Planet Around a Metal-poor Star of Extragalactic Origin\". Science . 330 (6011): 1642–1644. arXiv : 1011.6376 . Bibcode : 2010Sci...330.1642S . doi : 10.1126/science.1193342 . PMID 21097905 . S2CID 657925 .\n4. ^ Carney, Bruce W.; Latham, David W.; Stefanik, Robert P.; Laird, John B. (2008). \"Line Broadening in Field Metal-Poor Red Giant and Red Horizontal Branch Stars\". The Astronomical Journal . 135 (1): 196. arXiv : 0710.0392 . Bibcode : 2008AJ....135..196C . doi : 10.1088/0004-6256/135/1/196 .\n5. ^ \"HIP 13044\" . SIMBAD . Centre de données astronomiques de Strasbourg . Retrieved 2010-11-19.\n6. ^ a b Than, Ker (2010-11-18). \"New Planet Discovered: First Spotted Outside Our Galaxy\" . NationalGeographic.com . National Geographic Society . Archived from the original on November 20, 2010. Retrieved 2010-11-19.\n7. ^ a b c d e f Klement, R.; Setiawan, J.; Thomas Henning; Hans-Walter Rix; Boyke Rochau; Jens Rodmann; Tim Schulze-Hartung; MPIA Heidelberg; ESTEC (2011). \"The visitor from an ancient galaxy: A planetary companion around an old, metal-poor red horizontal branch star\". The Astrophysics of Planetary Systems: Formation, Structure, and Dynamical Evolution . IAU Symposium. Vol. 276. Proceedings of the International Astronomical Union. pp. 121–125. arXiv : 1011.4938 . Bibcode : 2011IAUS..276..121K . doi : 10.1017/S1743921311020059 .\n8. ^ a b c d \"Notes for Planet HIP 13044 b\" . Extrasolar Planets Encyclopaedia . Retrieved 2010-11-22.\n9. ^ Jones, M. I.; Jenkins, J. S. (2014). \"No evidence of the planet orbiting the extremely metal-poor extragalactic star HIP 13044\". Astronomy &amp; Astrophysics . 562 : id.A129. arXiv : 1401.0517 . Bibcode : 2014A&amp;A...562A.129J . doi : 10.1051/0004-6361/201322132 . S2CID 55365608 .\n\n| *v*t*eConstellation of Fornax                                                                     |                     |\n|---------------------------------------------------------------------------------------------------|---------------------|\n| *List of stars in Fornax*Fornax in Chinese astronomy*Chandra Deep Field South*Hubble Legacy Field |                     |\n| Stars                                                                                             |                     |\n|                                                                                                   | Exoplanets          |\n|                                                                                                   | Star clusters       |\n|                                                                                                   | Nebulae             |\n| Galaxies                                                                                          |                     |\n|                                                                                                   | Galaxy clusters     |\n|                                                                                                   | Astronomical events |\n| Category                                                                                          |                     |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=HIP\\_13044\\&amp;oldid\\=1287367829\\#Claims\\_of\\_a\\_planetary\\_system](https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system \"https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [F\\-type giants](/wiki/Category:F-type_giants \"Category:F-type giants\")\n\n* [Horizontal\\-branch stars](/wiki/Category:Horizontal-branch_stars \"Category:Horizontal-branch stars\")\n\n* [Disproven exoplanets](/wiki/Category:Disproven_exoplanets \"Category:Disproven exoplanets\")\n\n* [Fornax](/wiki/Category:Fornax \"Category:Fornax\")\n\n* [Durchmusterung objects](/wiki/Category:Durchmusterung_objects \"Category:Durchmusterung objects\")\n\n* [Hipparcos objects](/wiki/Category:Hipparcos_objects \"Category:Hipparcos objects\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description is different from Wikidata](/wiki/Category:Short_description_is_different_from_Wikidata \"Category:Short description is different from Wikidata\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 25 April 2025, at 19:42 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nHIP 13044\n\n15 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1813732512932013776,"filename":"HIP_13044_b.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064808.210748,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/Sinthgunt.md","file_size":18844,"file_type":"md","category":"tiny","framework":"docling","iteration":1,"extraction_time":1.6948895454406738,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":100.3,"avg_cpu_percent":20.06,"total_io_mb":null,"status":"success","character_count":7655,"word_count":1129,"error_type":null,"error_message":null,"quality_metrics":{"char_count":7655,"word_count":1129,"sentence_count":116,"paragraph_count":53,"avg_word_length":5.731620903454385,"avg_sentence_length":9.724137931034482,"extraction_completeness":1.0,"text_coherence":0.6896551724137931,"noise_ratio":0.053109079033311565,"gibberish_ratio":0.024539877300613498,"flesch_reading_ease":33.82099875930521,"gunning_fog_index":14.126220016542598,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4088286764317438,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Etymology\n- 2\n- Placement\n- 3\n- Notes\n- 4\n- References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt [ needs IPA ] is a figure in Germanic mythology , attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm . In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt ), [ [1] ] (#cite_note-ORCHARD112-1 \"#cite_note-ORCHARD112-1\") and the two sisters are cited as both producing incantations to heal the horse of Phol , another otherwise unattested figure but possibly the same as Balder , who is named elsewhere in the charm. The two are then followed by Friia and Uolla , also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[ edit ] The etymology of Sinthgunt is unclear. In the original manuscript, Sinthgunt is spelled Sin ht gunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic * Sin-naχt-gund , i.e., \"the night-walking one\". [ [2] ] (#cite_note-2 \"#cite_note-2\") As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól ), this etymology has been interpreted as a reference to the moon . However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology , Máni , a male figure. According to Rudolf Simek , the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples. [ [3] ] (#cite_note-3 \"#cite_note-3\")\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [ de ] , because the first element Sinht- cannot be based on the presupposed earlier Germanic * sinχt- . Such a Germanic form would have yielded Old High German * sīht by regular sound change. [ [4] ] (#cite_note-4 \"#cite_note-4\") The amended Sinthgunt presupposes a Proto-Germanic compound * Senþa-gunþjō , the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from * Senþa-χilðijō , with its second element also meaning \"fight\", cf. Old Norse hildr , Old English hild ). [ [5] ] (#cite_note-5 \"#cite_note-5\") Simek also mentions the interpretation \"heavenly body, star\". [ [6] ] (#cite_note-SIMEK285-286-6 \"#cite_note-SIMEK285-286-6\")\n\n## Placement\n\n[ edit ] The figures Fulla ( Uolla ) and Frigg ( Friia ) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures. [ [7] ] (#cite_note-BOSTOCK29-7 \"#cite_note-BOSTOCK29-7\") Similarly, Wolfgang Beck [ de ] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources. [ [8] ] (#cite_note-8 \"#cite_note-8\")\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names. [ [9] ] (#cite_note-9 \"#cite_note-9\") Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers. [ [10] ] (#cite_note-10 \"#cite_note-10\")\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm , as a specially defined group of Germanic goddesses. [ [11] ] (#cite_note-11 \"#cite_note-11\")\n\n## Notes\n\n[ edit ]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge . Studien über die Entstehung der nordischen Götter- und Heldensagen . München 1889, p. 298. Cf. Rudolf Simek . Lexikon der germanischen Mythologie . Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology . Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck . Die Merseburger Zaubersprüche. Eine Einführung . Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann . \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm . Altgermanische Religionsgeschichte , Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[ edit ]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature . Oxford University Press . ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend . Cassell . ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology . D.S. Brewer . ISBN 0-85991-513-1\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=Sinthgunt\\&amp;oldid\\=1296614947](https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947 \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\")\"\n\n[Category](/wiki/Help:Category \"Help:Category\"): * [Germanic goddesses](/wiki/Category:Germanic_goddesses \"Category:Germanic goddesses\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Articles needing IPA](/wiki/Category:Articles_needing_IPA \"Category:Articles needing IPA\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1811526491729742173,"filename":"Sinthgunt.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064810.172336,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/simple.pptx","file_size":34865,"file_type":"pptx","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.015799522399902344,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":123.7,"avg_cpu_percent":24.740000000000002,"total_io_mb":null,"status":"success","character_count":180,"word_count":35,"error_type":null,"error_message":null,"quality_metrics":{"char_count":180,"word_count":35,"sentence_count":5,"paragraph_count":8,"avg_word_length":3.9714285714285715,"avg_sentence_length":7.0,"extraction_completeness":0.75,"text_coherence":0.8333333333333334,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":97.59054545454545,"gunning_fog_index":3.8521212121212116,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4396965151515152,"extracted_text":"# Title Slide\n\nWith a subtitle\n\n# Things to think about\n\nHow much is enough?\n\nIf not now when?\n\nWhere have all the flowers gone?\n\nWho do you think you are?\n\nWhat were you thinking?","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":16826392897990412993,"filename":"simple.pptx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064810.4515235,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_bad_text.pptx","file_size":35632,"file_type":"pptx","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0064852237701416016,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":146.4,"avg_cpu_percent":29.28,"total_io_mb":null,"status":"success","character_count":120,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":120,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":7.066666666666666,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":5.296428571428578,"gunning_fog_index":19.885714285714286,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.20974553571428575,"extracted_text":"# X-Library The fully customisable and copyright-free standard content template collection exclusively for our customers","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":1443005848482130016,"filename":"powerpoint_bad_text.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064810.7219927,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_with_image.pptx","file_size":76480,"file_type":"pptx","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.018282413482666016,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":107.4,"avg_cpu_percent":21.48,"total_io_mb":null,"status":"success","character_count":21,"word_count":4,"error_type":null,"error_message":null,"quality_metrics":{"char_count":21,"word_count":4,"sentence_count":1,"paragraph_count":2,"avg_word_length":4.25,"avg_sentence_length":4.0,"extraction_completeness":0.5,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":62.79000000000002,"gunning_fog_index":1.2000000000000002,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.35973750000000004,"extracted_text":"# Docling\n\nImage test","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":8405570356673823665,"filename":"powerpoint_with_image.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064811.0031652,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/tests-example.xls","file_size":16384,"file_type":"xls","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.0007779598236083984,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: tests-example.xls","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064811.2635698,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_sample.pptx","file_size":45849,"file_type":"pptx","category":"tiny","framework":"docling","iteration":1,"extraction_time":0.02728104591369629,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":108.6,"avg_cpu_percent":21.72,"total_io_mb":null,"status":"success","character_count":1178,"word_count":188,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1178,"word_count":188,"sentence_count":9,"paragraph_count":16,"avg_word_length":3.0106382978723403,"avg_sentence_length":20.88888888888889,"extraction_completeness":1.0,"text_coherence":0.5555555555555556,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":90.54800000000002,"gunning_fog_index":9.08923076923077,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.519573888888889,"extracted_text":"# Test Table Slide\n\nWith footnote\n\n|    | Class1          | Class1          | Class1   | Class2   | Class2   | Class2   |\n|----|-----------------|-----------------|----------|----------|----------|----------|\n|    | A merged with B | A merged with B | C        | A        | B        | C        |\n| R1 | True            | False           |          | False    | True     | True     |\n| R2 |                 |                 | True     | False    |          |          |\n| R3 | False           |                 |          |          | False    |          |\n| R3 |                 | True            |          | True     |          |          |\n| R4 |                 |                 | False    |          | False    |          |\n| R4 |                 | True            |          | True     | False    | False    |\n| R4 | True            | False           | True     | False    | True     | False    |\n\n# Second slide title\n\nLet’s introduce a list\n\nWith foo\n\nBar\n\nAnd baz things\n\nA rectangle shape with this text inside.\n\n1. List item4\n2. List item5\n3. List item6\n\n- I1\n- I2\n- I3\n- I4\n\nSome info:\n\n- Item A\n- Item B\n\nMaybe a list?\n\n1. List1\n2. List2\n3. List3\n\n- l1 \n- l2\n- l3","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":15572290240354948364,"filename":"powerpoint_sample.pptx"},"page_count":3},"metadata_field_count":2,"attempts":1,"timestamp":1754064811.5525858,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/fake-text.txt","file_size":169,"file_type":"txt","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0011432170867919922,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: fake-text.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064816.8251448,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/book-war-and-peace-1p.txt","file_size":3045,"file_type":"txt","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0011777877807617188,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: book-war-and-peace-1p.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064817.0818536,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/selected_pdfs.txt","file_size":2374,"file_type":"txt","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.002322673797607422,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":376.3,"avg_cpu_percent":75.26,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: selected_pdfs.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064817.341564,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/text/norwich-city.txt","file_size":48194,"file_type":"txt","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0015401840209960938,"startup_time":null,"peak_memory_mb":1794.35546875,"avg_memory_mb":1794.35546875,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: norwich-city.txt","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064817.5993726,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_270.pdf","file_size":94702,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":2,"extraction_time":23.69583773612976,"startup_time":null,"peak_memory_mb":1982.9140625,"avg_memory_mb":1945.20234375,"peak_cpu_percent":362.2,"avg_cpu_percent":110.3,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":10890858393843077593,"filename":"ocr_test_rotated_270.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064841.5566645,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/jpn-vert.jpeg","file_size":35012,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":2,"extraction_time":10.189518213272095,"startup_time":null,"peak_memory_mb":1982.76953125,"avg_memory_mb":1950.06953125,"peak_cpu_percent":328.1,"avg_cpu_percent":65.62,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":15120959776614916295,"filename":"jpn-vert.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064852.0180323,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_180.pdf","file_size":94703,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":2,"extraction_time":3.6285643577575684,"startup_time":null,"peak_memory_mb":1982.79296875,"avg_memory_mb":1950.0578125,"peak_cpu_percent":192.1,"avg_cpu_percent":76.7,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2530576989861832966,"filename":"ocr_test_rotated_180.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064855.9244182,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test_rotated_90.pdf","file_size":94126,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":2,"extraction_time":3.696568250656128,"startup_time":null,"peak_memory_mb":1982.93359375,"avg_memory_mb":1950.1875,"peak_cpu_percent":191.2,"avg_cpu_percent":76.0,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6989291015361162334,"filename":"ocr_test_rotated_90.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064859.898796,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/chi_sim_image.jpeg","file_size":20104,"file_type":"jpeg","category":"tiny","framework":"docling","iteration":2,"extraction_time":6.53255295753479,"startup_time":null,"peak_memory_mb":1987.5078125,"avg_memory_mb":1953.8625,"peak_cpu_percent":292.1,"avg_cpu_percent":96.82000000000001,"total_io_mb":null,"status":"success","character_count":0,"word_count":0,"error_type":null,"error_message":null,"quality_metrics":null,"overall_quality_score":null,"extracted_text":"","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":13643946977964376290,"filename":"chi_sim_image.jpeg"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064866.7090383,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/images/ocr_test.pdf","file_size":93549,"file_type":"pdf_scanned","category":"tiny","framework":"docling","iteration":2,"extraction_time":24.74666452407837,"startup_time":null,"peak_memory_mb":1987.44140625,"avg_memory_mb":1954.72421875,"peak_cpu_percent":347.6,"avg_cpu_percent":107.92,"total_io_mb":null,"status":"success","character_count":94,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":94,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":5.333333333333333,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":39.33000000000001,"gunning_fog_index":14.0,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":false},"overall_quality_score":0.40228750000000013,"extracted_text":"Docling bundles PDF document conversion to JSON and Markdown in an easy self contained package","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":14853448746796404529,"filename":"ocr_test.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064891.7349112,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.xlsx","file_size":6339,"file_type":"xlsx","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.008580446243286133,"startup_time":null,"peak_memory_mb":1823.8515625,"avg_memory_mb":1823.8515625,"peak_cpu_percent":111.9,"avg_cpu_percent":22.380000000000003,"total_io_mb":null,"status":"success","character_count":1314,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1314,"word_count":136,"sentence_count":7,"paragraph_count":2,"avg_word_length":4.492647058823529,"avg_sentence_length":20.285714285714285,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.0,"flesch_reading_ease":88.64013513513517,"gunning_fog_index":5.30965250965251,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.635800168918919,"extracted_text":"| Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   | Stanley Cups   |\n|----------------|----------------|----------------|----------------|----------------|\n| Team           | Location       | Stanley Cups   | None           | None           |\n| Blues          | STL            | 1.0            | None           | None           |\n| Flyers         | PHI            | 2.0            | None           | None           |\n| Maple Leafs    | TOR            | 13.0           | None           | None           |\n\n| Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   | Stanley Cups Since 67   |\n|-------------------------|-------------------------|-------------------------|-------------------------|-------------------------|\n| Team                    | Location                | Stanley Cups            | None                    | None                    |\n| Blues                   | STL                     | 1.0                     | None                    | None                    |\n| Flyers                  | PHI                     | 2.0                     | None                    | None                    |\n| Maple Leafs             | TOR                     | 0.0                     | None                    | None                    |","extracted_metadata":{"origin":{"mimetype":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","binary_hash":13071959898645931525,"filename":"stanley-cups.xlsx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064892.0176983,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/csv_json_yaml/stanley-cups.csv","file_size":91,"file_type":"csv","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0019419193267822266,"startup_time":null,"peak_memory_mb":1823.8515625,"avg_memory_mb":1823.8515625,"peak_cpu_percent":0.0,"avg_cpu_percent":0.0,"total_io_mb":null,"status":"success","character_count":269,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":269,"word_count":37,"sentence_count":1,"paragraph_count":1,"avg_word_length":3.5675675675675675,"avg_sentence_length":37.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.47,"gibberish_ratio":0.0,"flesch_reading_ease":74.27000000000001,"gunning_fog_index":8.9,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5109625000000001,"extracted_text":"| Stanley Cups   |          |              |\n|----------------|----------|--------------|\n| Team           | Location | Stanley Cups |\n| Blues          | STL      | 1            |\n| Flyers         | PHI      | 2            |\n| Maple Leafs    | TOR      | 13           |","extracted_metadata":{"origin":{"mimetype":"text/csv","binary_hash":14995389103761630903,"filename":"stanley-cups.csv"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064892.2870114,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/complex-table.html","file_size":3010,"file_type":"html","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.008562564849853516,"startup_time":null,"peak_memory_mb":1823.8515625,"avg_memory_mb":1823.8515625,"peak_cpu_percent":112.1,"avg_cpu_percent":22.419999999999998,"total_io_mb":null,"status":"success","character_count":1960,"word_count":189,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1960,"word_count":189,"sentence_count":1,"paragraph_count":4,"avg_word_length":4.148148148148148,"avg_sentence_length":189.0,"extraction_completeness":0.75,"text_coherence":1.0,"noise_ratio":0.7,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":-28.167653061224442,"gunning_fog_index":43.28163265306122,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.634375,"extracted_text":"# Quarterly Sales Report\n\n| Region        | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | 2024 Sales (in thousands)   | Total         |\n|---------------|-----------------------------|-----------------------------|-----------------------------|-----------------------------|---------------|\n| Region        | Q1                          | Q2                          | Q3                          | Q4                          | Total         |\n| North America | North America               | North America               | North America               | North America               | North America |\n| USA           | $150                        | $180                        | $165                        | $200                        | $695          |\n| Canada        | $45                         | $52                         | $48                         | $60                         | $205          |\n| Europe        | Europe                      | Europe                      | Europe                      | Europe                      | Europe        |\n| UK            | $80                         | $95                         | $88                         | $110                        | $373          |\n| Germany       | $65                         | $75                         | $70                         | $85                         | $295          |\n| France        | $40                         | $48                         | $45                         | $55                         | $188          |\n| Grand Total   | $380                        | $450                        | $416                        | $510                        | $1,756        |\n\n## Performance Metrics\n\n| Metric         | Target   | Actual   | Status     |\n|----------------|----------|----------|------------|\n| Annual Revenue | $1,500K  | $1,756K  | ✓ Exceeded |\n| Growth Rate    | 10%      | 17%      | ✓ Exceeded |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":143411372199986808,"filename":"complex-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064892.560744,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/Sinthgunt.html","file_size":71465,"file_type":"html","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.05820798873901367,"startup_time":null,"peak_memory_mb":1823.8515625,"avg_memory_mb":1823.8515625,"peak_cpu_percent":102.2,"avg_cpu_percent":20.44,"total_io_mb":null,"status":"success","character_count":6581,"word_count":991,"error_type":null,"error_message":null,"quality_metrics":{"char_count":6581,"word_count":991,"sentence_count":108,"paragraph_count":61,"avg_word_length":5.579212916246216,"avg_sentence_length":9.37037037037037,"extraction_completeness":1.0,"text_coherence":0.7037037037037037,"noise_ratio":0.02279288861875095,"gibberish_ratio":0.024691358024691357,"flesch_reading_ease":41.66122901135651,"gunning_fog_index":13.792768062425976,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.6058515732674654,"extracted_text":"## Contents\n\nmove to sidebar\n\nhide\n\n- (Top)\n- 1 Etymology\n- 2 Placement\n- 3 Notes\n- 4 References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools\n\nmove to sidebar\n\nhide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance\n\nmove to sidebar\n\nhide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt[needs  IPA] is a figure in Germanic mythology, attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm. In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt),[1] and the two sisters are cited as both producing incantations to heal the horse of Phol, another otherwise unattested figure but possibly the same as Balder, who is named elsewhere in the charm. The two are then followed by Friia and Uolla, also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[edit]\n\nThe etymology of Sinthgunt is unclear.  In the original manuscript, Sinthgunt is spelled Sinhtgunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic *Sin-naχt-gund, i.e., \"the night-walking one\".[2] As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól), this etymology has been interpreted as a reference to the moon. However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology, Máni, a male figure. According to Rudolf Simek, the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples.[3]\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [de], because the first element Sinht- cannot be based on the presupposed earlier Germanic *sinχt-. Such a Germanic form would have yielded Old High German *sīht by regular sound change.[4] The amended Sinthgunt presupposes a Proto-Germanic compound *Senþa-gunþjō, the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from *Senþa-χilðijō, with its second element also meaning \"fight\", cf. Old Norse hildr, Old English hild).[5] Simek also mentions the interpretation \"heavenly body, star\".[6]\n\n## Placement\n\n[edit]\n\nThe figures Fulla (Uolla) and Frigg (Friia) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures.[7] Similarly, Wolfgang Beck [de] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources.[8]\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names.[9] Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers.[10]\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm, as a specially defined group of Germanic goddesses.[11]\n\n## Notes\n\n[edit]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge. Studien über die Entstehung der nordischen Götter- und Heldensagen. München 1889, p. 298. Cf. Rudolf Simek. Lexikon der germanischen Mythologie. Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology. Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck. Die Merseburger Zaubersprüche. Eine Einführung. Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann. \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm. Altgermanische Religionsgeschichte, Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[edit]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature. Oxford University Press. ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend. Cassell. ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology. D.S. Brewer. ISBN 0-85991-513-1\n\nRetrieved from \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\"\n\nCategory:\n\n- Germanic goddesses\n\nHidden categories:\n\n- Articles with short description\n- Short description matches Wikidata\n- Articles needing IPA\n- Good articles\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.\n\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\nWikimedia Foundation\nPowered by MediaWiki\n\nSearch\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":3790431279105409656,"filename":"Sinthgunt.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064892.8846939,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/html/simple-table.html","file_size":1623,"file_type":"html","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0055119991302490234,"startup_time":null,"peak_memory_mb":1823.8515625,"avg_memory_mb":1823.8515625,"peak_cpu_percent":169.6,"avg_cpu_percent":33.92,"total_io_mb":null,"status":"success","character_count":474,"word_count":75,"error_type":null,"error_message":null,"quality_metrics":{"char_count":474,"word_count":75,"sentence_count":6,"paragraph_count":4,"avg_word_length":4.346666666666667,"avg_sentence_length":13.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.51,"gibberish_ratio":0.0,"flesch_reading_ease":54.2406981981982,"gunning_fog_index":7.872072072072072,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":1.0,"expected_content_preserved":false,"clean_html_extraction":true,"has_html_remnants":false,"has_script_pollution":false},"overall_quality_score":0.7565508727477478,"extracted_text":"# Sample Data Table\n\n| Product    | Category    | Price   |   Stock |\n|------------|-------------|---------|---------|\n| Laptop     | Electronics | $999.99 |      25 |\n| Desk Chair | Furniture   | $199.99 |       8 |\n| Coffee Mug | Kitchen     | $9.99   |     150 |\n| Notebook   | Office      | $3.49   |      75 |\n\n## Summary Statistics\n\n| Total Products:   | 4         |\n|-------------------|-----------|\n| Average Price:    | $303.12   |\n| Total Stock:      | 258 units |","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":9830432069415051293,"filename":"simple-table.html"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064893.1603353,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Program Design in the UNIX Environment..pdf","file_size":26912,"file_type":"pdf","category":"tiny","framework":"docling","iteration":2,"extraction_time":13.487689733505249,"startup_time":null,"peak_memory_mb":1964.203125,"avg_memory_mb":1936.1328125,"peak_cpu_percent":259.3,"avg_cpu_percent":51.86,"total_io_mb":null,"status":"success","character_count":24911,"word_count":4167,"error_type":null,"error_message":null,"quality_metrics":{"char_count":24911,"word_count":4167,"sentence_count":199,"paragraph_count":83,"avg_word_length":4.958723302135829,"avg_sentence_length":21.0,"extraction_completeness":1.0,"text_coherence":0.95,"noise_ratio":0.13693147605475492,"gibberish_ratio":0.017142857142857144,"flesch_reading_ease":47.80305316314639,"gunning_fog_index":14.43295513058626,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6518702509607774,"extracted_text":"## Program design in the UNIX /2020 environment\n\nRob Pike\n\nBrian W. Kernighan\n\n## ABSTRACT\n\nMuch of the power of the UNIX operating system comes from a style of program design that makes programs easy to use and, more important, easy to combine with other programs. This style has been called the use of software tools , and depends more on how the programs fit into the programming environment /2014 how they can be used with other programs /2014 than on how they are designed internally. But as the system has become commercially successful and has spread widely, this style has often been compromised, to the detriment of all users. Old programs have become encrusted with dubious features. Newer programs are not always written with attention to proper separation of function and design for interconnection. This paper discusses the elements of program design, showing by example good and bad design, and indicates some possible trends for the future.\n\nThe UNIX operating system has become a great commercial success, and is likely to be the standard operating system for microcomputers and some mainframes in the coming years.\n\nThere are good reasons for this popularity. One is portability: the operating system kernel and the applications programs are written in the programming language C, and thus can be moved from one type of computer to another with much less effort than would be involved in recreating them in the assembly language of each machine. Essentially the same operating system therefore runs on a wide variety of computers, and users needn't learn a new system when new hardware comes along. Perhaps more important, vendors that sell the UNIX system needn't provide new software for each new machine; instead, their software can be compiled and run without change on any hardware, which makes the system commercially attractive. There is also an element of zealotry: users of the system tend to be enthusiastic and to expect it wherever they go; the students who used the UNIX system in university a few years ago are now in the job market and often demand it as a condition of employment.\n\nBut the UNIX system was popular long before it was even portable, let alone a commercial success. The reasons for that are more interesting.\n\nExcept for the initial PDP-7 version, the UNIX system was written for the DEC PDP-11, a machine that was (deservedly) very popular. PDP-11's were powerful enough to do real computing, but small enough to be affordable by small organizations such as academic departments in universities.\n\nThe early UNIX system was smaller but more effective and technically more interesting than competing systems on the same hardware. It provided a number of innovative applications of computer science, showing the benefits to be obtained by a judicious blend of theory and practice. Examples include the yacc parser-generator, the diff file comparison program, and the pervasive use of regular expressions to describe string patterns. These led in turn to new programming languages and interesting software for applications like program development, document preparation and circuit design.\n\nSince the system was modest in size, and since essentially everything was written in C, the software was easy to modify, to customize for particular applications or merely to support a view of the world\n\n__________________\n\n/2020 UNIX is a trademark of Bell Laboratories.\n\ndifferent from the original. (This ease of change is also a weakness, of course, as evidenced by the plethora of different versions of the system.)\n\nFinally, the UNIX system provided a new style of computing, a new way of thinking of how to attack a problem with a computer. This style was based on the use of tools : using programs separately or in combination to get a job done, rather than doing it by hand, by monolithic self-sufficient subsystems, or by special-purpose, one-time programs. This has been much discussed in the literature, so we don't need to repeat it here; see [1], for example.\n\nThe style of use and design of the tools on the system are closely related. The style is still evolving, and is the subject of this essay: in particular, how the design and use of a program fit together, how the tools fit into the environment, and how the style influences solutions to new problems. The focus of the discussion is a single example, the program cat , which concatenates a set of files onto its standard output. cat is a simple program, both in implementation and in use; it is essential to the UNIX system; and it is a good illustration of the kinds of decisions that delight both supporters and critics of the system. (Often a single property of the system will be taken as an asset or as a fault by different audiences; our audience is programmers, because the UNIX environment is designed fundamentally for programming.) Even the name cat is typical of UNIX program names: it is short, pronounceable, but not conventional English for the job it does. (For an opposing viewpoint, see [2].) Most important, though, cat in its usages and variations exemplifies UNIX program design style and how it has been interpreted by different communities.\n\n```\n11/3/71 NAME c_a_t_ -- concatenate and print SYNOPSIS c_a_t_ f_i_l_e_1_ ... DESCRIPTION c_a_t_ reads each file in sequence and writes it on the standard output stream. Thus: c_a_t_ f_i_l_e_ is about the easiest way to print a file. Also: c_a_t_ f_i_l_e_1_ f_i_l_e_2_ >f_i_l_e_3_ is about the easiest way to concatenate files. If no input file is given c_a_t_ reads from the standard input file. FILES --SEE ALSO pr, cp DIAGNOSTICS none; if a file cannot be found it is ignored. BUGS --OWNER ken, dmr\n```\n\n<!-- formula-not-decoded -->\n\nFigure 1: Manual page for cat , UNIX 1st Edition, November, 1971\n\nFigure 1 is the manual page for cat from the UNIX 1st Edition manual. Evidently, cat copies its input to its output. The input is normally taken from a sequence of one or more files, but it can come from the standard input. The output is the standard output. The manual suggests two uses, the general file copy:\n\n## cat file1 file2 &gt;file3\n\nand printing a file on the terminal:\n\ncat file\n\nThe general case is certainly what was intended in the design of the program. Output redirection (provided by the &gt; operator, implemented by the UNIX shell) makes cat a fine general-purpose file concatenator and a valuable adjunct for other programs, which can use cat to process filenames, as in:\n\n<!-- formula-not-decoded -->\n\nThe fact that cat will also print on the terminal is a special case. Perhaps surprisingly, in practice it turns out that the special case is the main use of the program. /2020\n\nThe design of cat is typical of most UNIX programs: it implements one simple but general function that can be used in many different applications (including many not envisioned by the original author). Other commands are used for other functions. For example, there are separate commands for file system tasks like renaming files, deleting them or telling how big they are. Other systems instead lump these into a single ''file system'' command with an internal structure and command language of its own. (The PIP file copy program found on operating systems like CP/M or RSX-11 is an example.) That approach is not necessarily worse or better, but it is certainly against the UNIX philosophy. Unfortunately, such programs are not completely alien to the UNIX system /2014 some mail-reading programs and text editors, for example, are large self-contained ''subsystems'' that provide their own complete environments and mesh poorly with the rest of the system. Most such subsystems, however, are usually imported from or inspired by programs on other operating systems with markedly different programming environments.\n\nThere are some significant advantages to the traditional UNIX system approach. The most important is that the surrounding environment /2014 the shell and the programs it can invoke /2014 provides a uniform access to system facilities. Filename argument patterns are expanded by the shell for all programs, without prearrangement in each command. The same is true of input and output redirection. Pipes are a natural outgrowth of redirection. Rather than decorate each command with options for all relevant pre- and postprocessing, each program expects as input, and produces as output, concise and header-free textual data that connects well with other programs to do the rest of the task at hand. It takes some programming discipline to build a program that works well in this environment /2014 primarily, to avoid the temptation to add features that conflict with or duplicate services provided by other commands /2014 but it's well worthwhile.\n\nGrowth is easy when the functions are well separated. For example, the 7th Edition shell was augmented with a backquote operator that converts the output of one program into the arguments to another, as in\n\n## cat 'cat filelist'\n\nNo changes were made in any other program when this operator was invented; because the backquote is interpreted by the shell, all programs called by the shell acquire the feature transparently and uniformly. If special characters like backquotes were instead interpreted, even by calling a standard subroutine, by each program that found the feature appropriate, every program would require (at least) recompilation whenever someone had a new idea. Not only would uniformity be hard to enforce, but experimentation would be harder because of the effort of installing any changes.\n\nThe UNIX 7th Edition system introduced two changes in cat . First, files that could not be read, either because of denied permissions or simple non-existence, were reported rather than ignored. Second, and less desirable, was the addition of a single optional argument -u , which forced cat to unbuffer its output (the reasons for this option, which has disappeared again in the 8th Edition of the system, are technical and irrelevant here.)\n\nBut the existence of one argument was enough to suggest more, and other versions of the system\n\n__________________\n\n/2020 The use of cat to feed a single input file to a program has to some degree superseded the shell's &lt; operator, which illustrates that general-purpose constructs /2014 like cat and pipes /2014 are often more natural than convenient special-purpose ones.\n\nsoon embellished cat with features. This list comes from cat on the Berkeley distribution of the UNIX system:\n\n- -s strip multiple blank lines to a single instance\n\n- -n number the output lines\n\n- -b number only the non-blank lines\n\n- -v make non-printing characters visible\n\n- -ve mark ends of lines\n\n- -vt change representation of tab\n\nIn System V, there are similar options and even a clash of naming: -s instructs cat to be silent about non-existent files. But none of these options are appropriate additions to cat ; the reasons get to the heart of how UNIX programs are designed and why they work well together.\n\nIt's easy to dispose of (Berkeley) -s , -n and -b : all of these jobs are readily done with existing tools like sed and awk . For example, to number lines, this awk invocation suffices:\n\n<!-- formula-not-decoded -->\n\nIf line-numbering is needed often, this command can be packaged under a name like linenumber and put in a convenient public place. Another possibility is to modify the pr command, whose job is to format text such as program source for output on a line printer. Numbering lines is an appropriate feature in pr ; in fact UNIX System V pr has a -n option to do so. There never was a need to modify cat ; these options are gratuitous tinkering.\n\nBut what about -v ? That prints non-printing characters in a visible representation. Making strange characters visible is a genuinely new function, for which no existing program is suitable. ('' sed -n l '', the closest standard possibility, aborts when given very long input lines, which are more likely to occur in files containing non-printing characters.) So isn't it appropriate to add the -v option to cat to make strange characters visible when a file is printed?\n\nThe answer is ''No.'' Such a modification confuses what cat 's job is /2014 concatenating files /2014 with what it happens to do in a common special case /2014 showing a file on the terminal. A UNIX program should do one thing well, and leave unrelated tasks to other programs. cat 's job is to collect the data in files. Programs that collect data shouldn't change the data; cat therefore shouldn't transform its input.\n\nThe preferred approach in this case is a separate program that deals with non-printable characters. We called ours vis (a suggestive, pronounceable, non-English name) because its job is to make things visible. As usual, the default is to do what most users will want /2014 make strange characters visible /2014 and as necessary include options for variations on that theme. By making vis a separate program, related useful functions are easy to provide. For example, the option -s strips out (i.e., discards) strange characters, which is handy for dealing with files from other operating systems. Other options control the treatment and format of characters like tabs and backspaces that may or may not be considered strange in different situations. Such options make sense in vis because its focus is entirely on the treatment of such characters. In cat , they require an entire sub-language within the -v option, and thus get even further away from the fundamental purpose of that program. Also, providing the function in a separate program makes convenient options such as -s easier to invent, because it isolates the problem as well as the solution.\n\nOne possible objection to separate programs for each task is efficiency. For example, if we want numbered lines and visible characters it is probably more efficient to run the one command\n\n<!-- formula-not-decoded -->\n\n## than the two-element pipeline\n\n<!-- formula-not-decoded -->\n\nIn practice, however, cat is usually used with no options, so it makes sense to have the common cases be the efficient ones. The current research version of the cat command is actually about five times faster than the Berkeley and System V versions because it can process data in large blocks instead of the byte-attime processing that might be required if an option is enabled. Also, and this is perhaps more important, it is hard to imagine any of these examples being the bottleneck of a production program. Most of the real\n\ntime is probably taken waiting for the user's terminal to display the characters, or even for the user to read them.\n\nSeparate programs are not always better than wider options; which is better depends on the problem. Whenever one needs a way to perform a new function, one faces the choice of whether to add a new option or write a new program (assuming that none of the programmable tools will do the job conveniently). The guiding principle for making the choice should be that each program does one thing. Options are appropriately added to a program that already has the right functionality. If there is no such program, then a new program is called for. In that case, the usual criteria for program design should be used: the program should be as general as possible, its default behavior should match the most common usage, and it should cooperate with other programs.\n\nLet's look at these issues in the context of another problem, dealing with fast terminal lines. The first versions of the UNIX system were written in the days when 150 baud was ''fast,'' and all terminals used paper. Today, 9600 baud is typical, and hard-copy terminals are rare. How should we deal with the fact that output from programs like cat scrolls off the top of the screen faster than one can read it?\n\nThere are two obvious approaches. One is to tell each program about the properties of terminals, so it does the right thing (whether by option or automatically). The other is to write a command that handles terminals, and leave most programs untouched.\n\nAn example of the first approach is Berkeley's version of the ls command, which lists the filenames in a directory. Let us call it lsc to avoid confusion. The 7th Edition ls command lists filenames in a single column, so for a large directory, the list of filenames disappears off the top of the screen at great speed. lsc prints in columns across the screen (which is assumed to be 80 columns wide), so there are typically four to eight times as many names on each line, and thus the output usually fits on one screen. The option -1 can be used to get the old single-column behavior.\n\nSurprisingly, lsc operates differently if its output is a file or pipe:\n\nlsc\n\n## produces output different from\n\n<!-- formula-not-decoded -->\n\nThe reason is that lsc begins by examining whether or not its output is a terminal, and prints in columns only if it is. By retaining single-column output to files or pipes, lsc ensures compatibility with programs like grep or wc that expect things to be printed one per line. This ad hoc adjustment of the output format depending on the destination is not only distasteful, it is unique /2014 no standard UNIX command has this property.\n\nA more insidious problem with lsc is that the columnation facility, which is actually a useful, general function, is built in and thus inaccessible to other programs that could use a similar compression. Programs should not attempt special solutions to general problems. The automatic columnation in lsc is reminiscent of the ''wild cards'' found in some systems that provide filename pattern matching only for a particular program. The experience with centralized processing of wild cards in the UNIX shell shows overwhelmingly how important it is to centralize the function where it can be used by all programs.\n\nOne solution for the ls problem is obvious /2014 a separate program for columnation, so that columnation into say 5 columns is just\n\n<!-- formula-not-decoded -->\n\nIt is easy to build a first-draft version with the multi-column option of pr . The commands 2 , 3 , etc., are all links to a single file:\n\n<!-- formula-not-decoded -->\n\n$0 is the program name ( 2 , 3 , etc.), so -$0 becomes -n where n is the number of columns that pr is to produce. The other options suppress the normal heading, set the page length to 1 line, and pass the arguments on to pr . This implementation is typical of the use of tools /2014 it takes only a moment to write, and it serves perfectly well for most applications. If a more general service is desired, such as automatically selecting the number of columns for optimal compaction, a C program is probably required, but the one-\n\nline implementation above satisfies the immediate need and provides a base for experimentation with the design of a fancier program, should one become necessary.\n\nSimilar reasoning suggests a solution for the general problem of data flowing off screens (columnated or not): a separate program to take any input and print it a screen at a time. Such programs are by now widely available, under names like pg and more . This solution affects no other programs, but can be used with all of them. As usual, once the basic feature is right, the program can be enhanced with options for specifying screen size, backing up, searching for patterns, and anything else that proves useful within that basic job.\n\nThere is still a problem, of course. If the user forgets to pipe output into pg , the output that goes off the top of the screen is gone. It would be desirable if the facilities of pg were always present without having to be requested explicitly.\n\nThere are related useful functions that are typically only available as part of a particular program, not in a central service. One example is the history mechanism provided by some versions of the UNIX shell: commands are remembered, so it's possible to review and repeat them, perhaps with editing. But why should this facility be restricted to the shell? (It's not even general enough to pass input to programs called by the shell; it applies to shell commands only.) Certainly other programs could profit as well; any interactive program could benefit from the ability to re-execute commands. More subtly, why should the facility be restricted to program input ? Pipes have shown that the output from one program is often useful as input to another. With a little editing, the output of commands such as ls or make can be turned into commands or data for other programs.\n\nAnother facility that could be usefully centralized is typified by the editor escape in some mail commands. It is possible to pick up part of a mail message, edit it, and then include it in a reply. But this is all done by special facilities within the mail command and so its use is restricted.\n\nEach such service is provided by a different program, which usually has its own syntax and semantics. This is in contrast to features such as pagination, which is always the same because it is only done by one program. The editing of input and output text is more environmental than functional; it is more like the shell's expansion of filename metacharacters than automatic numbering of lines of text. But since the shell does not see the characters sent as input to the programs, it cannot provide such editing. The emacs editor 3 provides a limited form of this capability, by processing all UNIX command input and output, but this is expensive, clumsy, and subjects the users to the complexities and vagaries of yet another massive subsystem (which isn't to criticize the inventiveness of the idea).\n\nA potentially simpler solution is to let the terminal or terminal interface do the work, with controlled scrolling, editing and retransmission of visible text, and review of what has gone before. We have used the programmability of the Blit terminal 4 /2014 a programmable bitmap graphics display /2014 to capitalize on this possibility, to good effect.\n\nThe Blit uses a mouse to point to characters on the display, which can be edited, rearranged and transmitted back to the UNIX system as though they had been typed on the keyboard. Because the terminal is essentially simulating typed input, the programs are oblivious to how the text was created; all the features discussed above are provided by the general editing capabilities of the terminal, with no changes to the UNIX programs.\n\nThere are some obvious direct advantages to the Blit's ability to process text under the user's control. Shell history is trivial: commands can be selected with the mouse, edited if desired, and retransmitted. Since from the terminal's viewpoint all text on the display is equivalent, history is limited neither to the shell nor to command input. Because the Blit provides editing, most of the interactive features of programs like mail are unnecessary; they are done easily, transparently and uniformly by the terminal.\n\nThe most interesting facet of this work, however, is the way it removes the need for interactive features in programs; instead, the Blit is the place where interaction is provided, much as the shell is the program that interprets filename-matching metacharacters. Unfortunately, of course, programming the terminal demands access to a part of the environment off-limits to most programmers, but the solution meshes well with the environment and is appealing in its simplicity. If the terminal cannot be modified to provide the capabilities, a user-level program or perhaps the UNIX kernel itself could be modified fairly easily to do roughly what the Blit does, with similar results.\n\nThe key to problem-solving on the UNIX system is to identify the right primitive operations and to put them at the right place. UNIX programs tend to solve general problems rather than special cases. In a very loose sense, the programs are orthogonal, spanning the space of jobs to be done (although with a fair amount of overlap for reasons of history, convenience or efficiency). Functions are placed where they will do the most good: there shouldn't be a pager in every program that produces output any more than there should be filename pattern matching in every program that uses filenames.\n\nOne thing that UNIX does not need is more features. It is successful in part because it has a small number of good ideas that work well together. Merely adding features does not make it easier for users to do things /2014 it just makes the manual thicker. The right solution in the right place is always more effective than haphazard hacking.\n\n1. B. W. Kernighan and Rob Pike, The UNIX Programming Environment, Prentice-Hall (1984).\n2. D. Norman, ''The Truth about UNIX,'' Datamation (November, 1981).\n3. James Gosling, ''UNIX Emacs,'' CMU internal memorandum (August, 1982).\n4. R. Pike, ''The Blit: A Multiplexed Graphics Terminal,'' Bell System Technical Journal (this issue, 1984).","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8779506571593515518,"filename":"Program Design in the UNIX Environment..pdf"},"page_count":7},"metadata_field_count":2,"attempts":1,"timestamp":1754064906.9139738,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/code_and_formula.pdf","file_size":89031,"file_type":"pdf","category":"tiny","framework":"docling","iteration":2,"extraction_time":5.1867969036102295,"startup_time":null,"peak_memory_mb":1962.43359375,"avg_memory_mb":1929.8734375,"peak_cpu_percent":222.7,"avg_cpu_percent":44.54,"total_io_mb":null,"status":"success","character_count":5537,"word_count":908,"error_type":null,"error_message":null,"quality_metrics":{"char_count":5537,"word_count":908,"sentence_count":46,"paragraph_count":14,"avg_word_length":5.084801762114537,"avg_sentence_length":19.782608695652176,"extraction_completeness":1.0,"text_coherence":0.9574468085106383,"noise_ratio":0.06889651435795557,"gibberish_ratio":0.0,"flesch_reading_ease":40.41317290816957,"gunning_fog_index":13.196895315782967,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.6734902325576162,"extracted_text":"## JavaScript Code Example\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n```\nfunction add(a, b) { return a + b; } console.log(add(3, 5));\n```\n\nListing 1: Simple JavaScript Program\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet,\n\n## Formula\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt.\n\n<!-- formula-not-decoded -->\n\nLorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.\n\nDuis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":8967166443255744998,"filename":"code_and_formula.pdf"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064912.3808522,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/The Hideous Name - 1985 (pike85hideous).pdf","file_size":32949,"file_type":"pdf","category":"tiny","framework":"docling","iteration":2,"extraction_time":15.387336254119873,"startup_time":null,"peak_memory_mb":1972.2421875,"avg_memory_mb":1937.3046875,"peak_cpu_percent":258.1,"avg_cpu_percent":51.620000000000005,"total_io_mb":null,"status":"success","character_count":29498,"word_count":4762,"error_type":null,"error_message":null,"quality_metrics":{"char_count":29498,"word_count":4762,"sentence_count":268,"paragraph_count":99,"avg_word_length":5.040109197816044,"avg_sentence_length":17.813432835820894,"extraction_completeness":1.0,"text_coherence":0.9368029739776952,"noise_ratio":0.10169638619567428,"gibberish_ratio":0.00641025641025641,"flesch_reading_ease":50.76226731146622,"gunning_fog_index":13.57057751611999,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.6478656259082158,"extracted_text":"## The Hideous Name †\n\nRob Pike P.J. Weinberger\n\nAT&amp;T Bell Laboratories\n\nMurray Hill, New Jersey 07974\n\n## ABSTRACT\n\nThe principles of good naming in computing have been known for decades.  The invention of new facilities in computing systems can be guided by these principles.  For example, the introduction of networking need not require any change to the majority of system utilities, because objects such as files on remote machines can be given syntactically familiar names within the local machine's name space.  Indeed, the implementers of networks often do well by these standards by striving to make remote files essentially indistinguishable  from  local  ones. Unfortunately,  the  situation  with  internetwork  mail addresses  is  not  as  satisfactory. The  practitioners  of  internetworking  would  profit  by understanding the benefits of simple, uniform syntax.\n\n## research!ucbvax!@cmu-cs-pt.arpa:@CMU-ITC-LINUS:dave%CMU-ITC-LINUS@CMU-CS-PT\n\n- Carnegie-Mellon University mailer\n\nI cannot tell what the dickens his name is.\n\n- Shakespeare, Merry Wives of Windsor , II. ii. 20.\n\n## Introduction\n\nAny object relevant to computation - file, process, user, computer, network or whatever - needs a name.  The name determines the access: it is by interpreting the name, within the name space it inhabits, that a program or person is given access to the object.  The manner in which names are constructed affects not only how objects are named but also how they are used.\n\nThe form of names and name spaces is the subject of this essay.  We will use file names from several operating systems as examples to illustrate criteria for distinguishing good names from bad.  The same criteria may be applied to network mail names, pointing out some of the shortcomings of the current ad hoc systems for internetworking.\n\nThe criteria are not new, and seem to be generally accepted, but are not applied in practice.  This paper is an attempt to re-establish their use.\n\n## Principles of Names and Name Spaces\n\nWhat's in a name?  A string of characters, encoded by some convention (ASCII or EBCDIC), that identifies an object.  If the function of a name stopped there, this definition would be sufficient.  In IBM's MVS, for example, a file name is an at most 44-character string, largely uninterpreted by system software. The name space is 'flat,' or linear.\n\nSystems  designed  more  recently  use  names  to  help organize as  well  as  identify. For  instance, although in MVS the disk containing the file is specified separately from the name, in MS-DOS part of the\n\n__________________\n\n† An earlier version of this appeared in Summer 1985 Usenix Conference Proceedings, Salt Lake City, Utah.\n\nname of a file is a string that identifies the disk drive holding the file.  Syntax separates these components of the name; MS-DOS uses a colon following the disk name, a single character:\n\nA:FILE\n\nis a file on disk drive A , while\n\nB:FILE\n\n## is a file on disk drive B .\n\nThe advantage of putting such information in names is that software need not know about disks to manipulate files.  Internally, of course, system software must use the syntax of the name to locate the file, but this is largely transparent to applications software, and users.\n\nThe MVS system uses independent information (stored in a catalog) to find a file given its name, while  MS-DOS exposes location  information  in  the  name.  MS-DOS  users  may  put related  files  on  the same disk, thus using a distinguished piece of the name to help organize their world.  MVS users  must instead adapt ad hoc strategies (conventions for the syntax of names) to the same end.  Thus each system does both more and less for the user: MVS provides no help in organization and a naming independent of the  physical  location  of  the  file,  while  MS-DOS  provides  the  opposite. Instead,  if  names  had  multiple components (that is, syntax), where the components did not necessarily correspond to physical devices, the name  space  would  have  the  advantages  of  that  of  both  MVS  and  MS-DOS,  with  the  disadvantages  of neither.  Such a name space exists.\n\n## A good example: UNIX ®\n\nUNIX file name space is a tree, with file names that specify a path from one node to another.  The representation of the name is a simple ASCII string, with slashes / separating node identifiers.  The name\n\n## /usr/rob/bin/cat-v\n\nis a path from the root of the tree (denoted by the leading slash), through nodes called usr , rob and bin , to a file called cat-v .  Nodes intermediate in the tree are called directories .  The system uses the components to find the file, which the user can use as syntax to organize sets of files.  For example, although on most UNIX systems, the string /usr specifies a separate disk drive, this is irrelevant to both software and users; it is merely a string that identifies the directory beneath which users' files may be found.\n\nThe structure of the name space (a directory tree) is reflected in the style of the name (a path through the tree).  Were the file system arranged differently, say as a flat array, the form and interpretation of file names would also be different; for example, UNIX processes are named by small integers.\n\n## Properties of Name Spaces\n\nName spaces have some general properties.  First, names within the space may be absolute or relative.  Absolute names specify an object by position with respect to a single fixed point, such as the root of the UNIX file system (named / ); relative names, with respect to a local point (the 'current working directory' in UNIX, named . (dot)).  Also, an operating system typically has operators to manipulate its name space, such as system calls to create and remove files. UNIX also provides a system call (named mount ) to join together two name spaces by attaching the root of one space, resident on a separate disk drive, to a leaf of another.\n\nFinally, a name space has syntax - how a name is constructed - and semantics - the nature of the object a name identifies.\n\nA UNIX file name, for example, is a sequence of slash-separated strings that identifies a formatless byte stream.  External conventions may provide further semantics: the UNIX file system contains objects that are not ordinary files.  Simply by having ordinary file names, though, these objects have ordinary file properties such as protection.  Some examples from our research version of UNIX, called the Ninth Edition:\n\nDevice files.  With names conventionally prefixed (that is, residing in the directory) /dev , these files provide direct access to devices.  The name /dev/mt , for example, identifies a magnetic tape drive.\n\nProcesses.  The directory /proc contains files with names that are process numbers.  Opening such a file\n\nprovides access to processes for purposes such as interactive debugging.  Although processes have integers that identify them, it is convenient to provide names for them in the file system as well.  For example, listing the directory containing the process files is a simple way to identify running processes.\n\nDatabases.  Some databases are conveniently represented as name-value pairs in a hierarchy, and such databases may be mapped into the file system name space.  For example, the directory /n/face contains a hierarchically-structured database that associates digitized images of people's faces with the people's electronic mail addresses.\n\nOther files. UNIX has the notion of standard input : the input connected to a (typically) interactive program. The name /dev/stdin identifies a file that, when opened, connects to the standard input of the program.  This allows files that demand a file name (such as the file comparison program) to be given input directly from the interactive terminal or from a pipe.\n\nBecause these unusual objects have regular names, existing tools can treat them as files, so standard software can provide services for them that would otherwise require special handling.\n\nSome  of  the  Ninth  Edition  examples  above  have  different  names  in  other UNIX systems. /dev/stdin is often represented by the single character -,  as an argument to commands, but this convention is capriciously followed.  Because it must be provided explicitly by each program, it is only available in some programs.  By providing /dev/stdin in the global name space, it is available uniformly for all programs, always.  As another example, processes are represented by an integer process identifier, which is  only  meaningful  to  a  few  process-specific  system  calls. These  calls  implement  their  own  protection mechanism, although the protection provided by the file system suits perfectly (these system calls predate the process file system).  Finally, virtual terminals implemented using the multiplexed files of the Seventh Edition (an earlier research version of the system) have no external name, so it is impossible to open one for I/O.  The Ninth Edition provides a name in the file system that is available, without prearrangement or special protocol, to any program.\n\n## Connecting Name Spaces\n\nWhen machines are connected together, their name spaces may be joined to facilitate the sharing of files.  If the name spaces have the same clean structure, that structure can be extended simply to describe the  larger  space. The  Newcastle  Connection  names  a  file  on  another  machine,  say ucbvax ,  as /../ucbvax/usr/rob/bin/cat-v ; the Ninth Edition notation is /n/ucbvax/usr/rob/bin/cat-v .  In the former the name space has been extended by making it a subspace of a larger space, in the latter a new name subspace has been grafted on using mount , but in neither case has the syntax of names been changed; any program that understands a file name will understand a network  file  name  without  change,  and  relative  names  for  files  (those  that  don't  begin  with / )  are unchanged.  As a spectacular example, we might see on which machines user wnj has a login by searching (using a program called grep ) through the system administration files (called /etc/passwd ) on all the machines:\n\ngrep wnj /n/*/etc/passwd\n\nThe file name 'wild card' character * matches all files within a directory.  Here, it happens to match all machines reachable from the local machine, although grep is oblivious of this distinction.  We could even investigate those machines connected to ucbvax by grep wnj /n/ucbvax/n/*/etc/passwd\n\nThe file system that is the union of these name spaces might have no global root, so the meaning of an absolute name may become ambiguous because of the presence of multiple reference points.  In fact, there might be no single point to which all names can be fixed.  In practice, though, this ambiguity is unimportant.\n\n## A bad example: VAX/VMS\n\nUnfortunately,  not  everyone  chooses  naming  conventions  in  accord  with  these  guidelines.  On VAX/VMS  our  canonical  file  might  be  called UCBVAX::SYS$DISK:[ROB.BIN]CAT_V.EXE;13 . The  VMS  file  naming  scheme  provides  a  distinct  syntax  for  each  level  in  the  name: UCBVAX:: is  a machine; SYS$DISK: is  a  disk  (actually  a  macro  that  expands  to  a  disk  name  such  as DUA0: ); [ROB.BIN] is a directory; CAT_V is a file 'base' name; .EXE is a file 'type'; and ;13 is a version number.\n\nAlthough  this  syntax  may  seem  unnecessarily  cumbersome,  it  has  a  precedent:  it  is  analogous  to expressions in programming languages. Consider a C expression such as *structure[index].field-&gt;ptr . If * were  postfix  and / the  only  dereferencing  operator,  the expression  might  be  written structure/index/field/ptr/ . Functionally-minded  programmers might use the notation contents(ptr(field(index(structure)))) .  (A single character cannot be used in C because it could not distinguish X[Y] and X-&gt;Y , with X a structure pointer and Y an integer or structure element respectively, but this ambiguity could be eliminated in a different language.)  C and VMS use syntax to distinguish the types of the components of a name.  Instead, the UNIX file system deliberately  hides  the  distinctions. Aside  from  the  obvious  advantages  such  as  simplicity  of  syntax  and  the usurping of only a single character, the uniformity also makes the name space easier to manipulate: the mount system call aliases a disk and a directory.\n\nVMS has no true name space manipulation operator.  Although one could be constructed, it would be limited  in  scope:  how  could  a  disk  be  mounted  atop SYS$DISK:[ROB.BIN] when disks  are  always before directories in the name?  Instead, VMS has macros such as SYS$DISK to hide the manner in which the  space  is  assembled,  and  even  to  provide  the  concept  of  a  local  name  by  automatically  inserting  an expanded macro before an unqualified name.\n\nThe problems with dynamic evaluation of macros are well known.  For example, the VMS service to set  the  reference  point  for  local  names  (the  equivalent  of UNIX chdir )  sets  the  default  prefix  for  file names, but the prefix will only be evaluated and so checked for validity, when a file name is interpreted, which may be arbitrarily and confusingly long after the prefix was set.  In fact, the default prefix macro is handled  in  a  special  way,  because  directories  are  not  constructed  by  simple  concatenation;  subdirectory [.BIN] in directory [ROB] is named [ROB.BIN] .  Also, these local names are not really local at all; the prefix implicitly binds them to a root of the name space.  This implies that all names are always attached to some root, and therefore if the root changes, the name must also change, invisibly.\n\nAnother problem with VMS names is that one cannot do the equivalent of searching the VMS password files ( SYSUAF.LIS )  on various machines with *::SYS$SYSTEM:SYSUAF.LIS ;  the * operator doesn't apply to that portion of a name.  This is an example of the general problem that whenever the name syntax  is  changed  all  programs  that  interpret  names  must  be  modified. More  subtly,  although  if  the machine ucbvax were a gateway we could access files on a distant machine as UCBVAX::KREMVAX::file ,  it  is  only because the semantics of :: explicitly permit such access.  The :: operator is implemented by passing the string after it to the remote machine, but first checking its syntax, so the file name parser must have special code for multiple :: 's.\n\n## A Quibble about Cedar\n\nThe Cedar file system has a uniform naming syntax, just like UNIX, except that files have version numbers, separated from the file name by an exclamation mark ! .  The implementers thought that version numbers are fundamentally different components of file names and therefore deserved different syntax.  But the  change  in  syntax  requires  new  rules  to  define  the  meaning  of  file  names. A  good  test  of  naming schemes is whether arbitrary names constructed by the syntactic rules make sense within the rules of the system or whether their interpretation requires new semantic rules. In Cedar file, /usr/rob/bin/cat-v!3 is clearly version 3 of cat-v , but what is /usr/rob!3/bin/cat-v ?\n\n## Connecting to other machine's file systems\n\nThe IBIS remote file system on UNIX 4.2BSD names a remote file as ucbvax:file .  Many programs don't understand this syntax; the shell (command interpreter) must be modified to make *:file behave as we expect, because the shell expects a slash to separate name components.  Worse, by changing the  syntax,  the  implicit  semantics  of  the  original  naming  scheme  is  lost. In  the  Ninth  Edition  name /n/ucbvax/file it is obvious what file refers to: a file in the root directory of ucbvax. But what is it in ucbvax:file ?  It might be a file in the root, but it isn't.  It is a file in the initial working directory on  the destination machine ( ucbvax )  of  the  user  invoking  the  name  on  the  source  machine  (unless  it begins with / );  its  meaning depends on who is asking.  The extra semantics of : complicate attempts to patch the syntactic problems.  We might try creating a connection (called a symbolic link in UNIX) from the name /n/ucbvax to  the  name ucbvax: ,  but /n/ucbvax/file would  then  still  point  to  a  file  in someone's home directory, and /n/ucbvax/usr/wnj/file would refer to /usr/wnj/usr/wnj/file . If  the  link  evaluates  to ucbvax:/ ,  things  work  as  expected,  but  the slash-less form of IBIS naming is made unavailable.\n\nPart of the problem in the IBIS file system is that it is implemented outside the name space.  By using a variant of the standard system call mount, the Ninth Edition remote file system guarantees that the syntax and semantics of names are free of surprises. For example, it is clear what /n/ucbvax/n/kremvax/file refers to, but what about the IBIS name ucbvax:kremvax:file ? Where does kremvax:file get interpreted?\n\nThere are other ways to interpret file names like ucbvax:file .  When using the UNIX program uucp to  copy a local file to a remote machine, the name ucbvax!file refers to the file on ucbvax whose name is file prefixed by the current directory on the source machine.  The prize goes to DECNET, however: ucbvax::file refers to file in the home directory of the 'default network user' on the destination machine, and ucbvax\"wnj password\"::file refers to file in wnj 's home directory.  It is inexcusable that the password is in the file name, let alone that it is in clear text.\n\n## The story so far\n\nIn summary, there are some guidelines for constructing naming conventions, particularly for objects in a network.  There should be both relative names and absolute names.  Relative names are more important because, among other reasons, the root of the name space may be unknown or non-unique.  The syntax should be clean and uniform; every new syntactic rule requires at least one, and usually many, semantic rules to resolve peculiarities introduced by the new syntax.  If the name space is a tree or any other kind of graph, a single character should be used to separate nodes in a name.\n\nIf these guidelines are followed, names of objects in a network of machines will be easy to construct and interpret; difficult problems of networking will be completely hidden to the users and programs accessing objects in the network.  If they are ignored, both users and programs must be aware of and understand the details of naming locally, globally and everywhere in between.\n\n## Principles of mail names\n\nNow consider the other common name space, mail names.  Mail names are more complex than file names, for both syntactic and semantic reasons.  There are conflicting syntactic traditions, the most familiar two being the UNIX tradition and the ARPANET tradition.  Also, mail names are interpreted by user programs only, with no operating system to enforce semantics.  Thus, the interpretation of the name space is subject to arbitrary hackery.\n\nEven a trivial case like the name pjw in the command\n\n<!-- formula-not-decoded -->\n\nhas no clear meaning.  When electronic mail was invented, the name pjw referred to a mailbox on the local machine - the only machine to which mail could be sent.  The local space of mailbox names was a small flat space.  Later, when systems were connected together, there were two ways to generalize.  If the computers were closely connected (that is, sharing administration), one could extend the flat name space over the whole set of machines, so that saying mail pjw on any of the machines gets pjw 's mailbox on pjw 's\n\nhome machine.  If the machines were instead loosely connected, a more attractive scheme would be to use machine  names  to  qualify  the  local  mailbox  names: pjw@system in  the  ARPANET  tradition,  or system!pjw in  the UNIX tradition.  The two methods differ only in the naming and how the software decides to find the destination.  In the first alternative, it looks up pjw in a database, while in the second it looks  up system . In  both  cases,  the  software  on  the  machines  involved  must  also  have  a  protocol  for delivering mail, but that's irrelevant here.  Note that neither naming scheme has anything to do with routing the message.\n\nAt this level, either of these two schemes is fairly convenient.  But when we try to connect lots of systems with these flat name spaces, names must either conflict or be decorated artificially to disambiguate them.  We should apply the principles of good naming to find a better solution.\n\nMail names specify paths within a large name space populated by systems and mailboxes rather than files, but the basic idea is the same.  The question is what a path denotes.  The answer depends on how the software determines what to do with the mail.\n\nImagine we are on machine ucbvax and want to send mail to pjw@system .  There are two methods to negotiate the transaction.  The first method, used by UNIX, views system as the name of an authority that the mail and mail address are passed to.  That is, sending the mail involves a message to system of the form, ''I am machine ucbvax , here is mail for pjw .''  The second, that of the ARPANET, interprets system as the name of an authority that will say where to send the mail, as in, ''I am machine ucbvax , where do I send mail for pjw ?''  The destination of these messages is found by looking up system in a database.  (The details of sending the message are outside this discussion.)  All naming schemes for mail follow  some  combination  of  these  alternatives.  The UNIX method uses the same mechanism to resolve names and to transmit mail; the ARPANET method resolves the names with one mechanism and uses some other, not associated with the name at all, to send the mail.\n\nGiven these two models, how do we generalize mail delivery in larger networks?  For ARPANET, a mail address user@world3.world2.world1 is interpreted by looking up world1 and then asking it where to send mail for world3.world2 .  For UNIX, a mail address world1!world2!world3!user is  interpreted  by  looking  up world1 and  then  sending  the  mail  and world2!world3!user to  it. Although the two forms sound similar, they have different problems.  (And, why does ARPA use two characters when one is sufficient?)\n\nThe most common interpretation of the UNIX name is as a route, but it need have nothing to do with a  route. Once  the  name  is  handed  off  to world1 ,  it  can  be  rewritten  to  correspond  to  the  syntax  of world1 's name space; in fact, UNIX mailers rewrite names freely.  Because ARPANET names are handled differently, they cannot be rewritten:  the answer to the routing question must produce the four-byte binary network address of the destination mailbox.  (At least in principle, this defect may be circumvented. The response to the routing question might be a little program: ''Send the mail to A and tell it to use protocol P to send it to B'' and so forth.  However, that's not how it's done in practice.)\n\nConsider again the relation between mail names and file names.  When the operating system interprets the name /n/ucbvax/n/kremvax/file it discovers that the directory /n/ucbvax refers to a remote machine, finds the server on that machine, and sends it the name /n/kremvax/file expecting back a handle to use the file.  It does not care what the server does with the name.  It does not expect to get back instructions for finding the file.  It is asking for file service, not name service.  Indeed were ucbvax a VMS machine, the server might invisibly translate /n/kremvax/file immediately into KREMVAX::SYS$DISK:[NETUSER]file to discover it on its local system.  Remote file access would be harder to implement using the ARPANET scheme.\n\n## Name servers † considered speculative\n\nName servers don't scale well, for precisely  the  reason  that  the  ARPANET  name  scheme  doesn't  scale well: the name server must understand all possible name syntaxes.  When a system with a different naming convention  is  connected,  the  name  server  must  suddenly  interpret  all  the  different  syntaxes,  instead  of\n\n__________________\n\n† ''Name server'' is a noun phrase that is ambiguous.  You hand a name server a name, it hands you connection informa-\n\ntion.  Thus it serves connections, not names.  Consider the difference between air pollution and noise pollution.\n\nleaving the job to the new system itself.  Worse, how do you connect two networks, each with its own name server?  Even if the servers use the same data formats and algorithms, they might use unique identifiers that become non-unique when they are joined.\n\nName servers have problems on other levels, too.  Who administers a name server's database?  If the database is not audited frequently much of the data will be obsolete, while if the controls are too onerous, people won't bother keeping the database current.  What does the database contain?  Most name servers produce network addresses, but no single network reaches everywhere.\n\n## Why are mail names such a mess?\n\nBecause people keep gluing name spaces together without smoothing the syntactic differences.  The result is the mail name equivalent of bastardized file names like /n/ucbvax/UCBVAX::KREMVAX:/rob/bin/A:dos-file where different conventions are mixed in a single string.\n\n## Relative names are important\n\nThe ARPANET people define their names to have the form\n\n## local-part @ domain\n\nwhere both local-part and domain are dot-separated lists of words.  Domains are the generalization of what we have been calling systems; the local part is anything understood by the leftmost domain name.  According to RFC 882 (''Domain Names - Concepts and Facilities''), the domains are all absolute.  The dot signifying the root of the hierarchy is implicit at the right of the list of names, which makes it impossible to connect disjoint name spaces since all interpreters of names must know all names at the top level of the hierarchy.  Also, for backwards compatibility, RFC 822 (''Standard for the Format of ARPA Internet Text Messages'') allows all but the leftmost of the domain names to be elided, since ''specification of a fully qualified address can become inconvenient.''\n\n## What happens in practice?\n\nAs long as software continues to deliver mail, people are unwilling to improve the state of affairs. Mailers just butt together names with their own rewriting rules, producing names like:\n\nIJQ3SRA%UCLAMVS.BITNET%SU-LINDY@SU-CSLI.ARPA\n\nThis  is  the  name  of  user IJQ3SRA on  machine UCLAMVS ,  accessible  through  BITNET  from  machine SU-LINDY ,  which  is  known  to SU-CSLI on  the  ARPANET.  Each  program  that  touched  this  name rewrote it by its own rules, although the domains proposal is intended to prevent this.\n\nThere are two domains in this name (although the syntax is wrong): BITNET and ARPA .  However, BITNET is not a registered name, so the gateway service between BITNET and ARPANET must be made explicit in the name, requiring the invention of a new syntax character ( % ) which is translated to @ at the gateway, because ARPANET names can only contain a single @ .  Despite the words in the standard about hierarchy, the domain space is nearly flat, so the local parts of the names carry source routing and domain transitions explicitly.  To worsen matters, machines that advertise adherence to the standard in fact do not; instead the name translations that occur at gateways (such as converting @ to % and rearranging the components)  are  at  best ad  hoc. By  legislating  away  bad  names,  ARPANET  has  reduced  the  problem  of networking to a still-unsolved problem.  But the mailers plod resolutely on.\n\n## Standards?\n\nIt  is  clear  that  standards  are  necessary  for  electronic  mail  to  be  delivered  reliably  across  network boundaries.  What needs to be standardized is the interpretation of names, especially at network boundaries. Until such a standard exists; is syntactically and semantically clean; distributes the interpretation of names across the systems that understand them; and is adhered to, the network mail situation will not improve.\n\n## Conclusions\n\n## Doug McIlroy has observed that\n\n...  bad  notations  can  stifle  progress.  Roman numerals  hobbled  mathematics  for  a  millennium  but were propagated by custom and by natural deference to authority.  Today we no longer meekly accept individual authority.  Instead, we have ''standards,'' impersonal imprimaturs on convention.  Some standards are sound and indispensable; some simply celebrate bureaucratic littleness of mind.  A harvest of gimmicks to save appearances within the standard has grown up, then gimmicks to save the appearances within the appearances.  You know how each one got there: an overnight hack to paste another tumor onto a wild cancerous growth.  The concern was with method, regardless of results. The result is extravagantly worse than Roman numerals: you can't read the notation right to left or left to right.  As an amalgam of languages, it can't be deciphered by a native speaker of any one of them, much as if we were to switch at random places in a number between Roman and Arabic signs and between big-endian and little-endian order.  But now that it all ''works'' - at least for the strong of stomach - the tumors themselves are being standardized.\n\nI fled, and cry'd out ''Death''; Hell trembled at the hideous name, and sigh'd From all her caves, and back resounded, ''Death.''\n\n- Milton, Paradise Lost","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":16409241325064761934,"filename":"The Hideous Name - 1985 (pike85hideous).pdf"},"page_count":8},"metadata_field_count":2,"attempts":1,"timestamp":1754064928.0504036,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/fake-memo.pdf","file_size":13374,"file_type":"pdf","category":"tiny","framework":"docling","iteration":2,"extraction_time":3.5966579914093018,"startup_time":null,"peak_memory_mb":1970.234375,"avg_memory_mb":1937.72109375,"peak_cpu_percent":193.2,"avg_cpu_percent":38.64,"total_io_mb":null,"status":"success","character_count":205,"word_count":37,"error_type":null,"error_message":null,"quality_metrics":{"char_count":205,"word_count":37,"sentence_count":3,"paragraph_count":5,"avg_word_length":4.45945945945946,"avg_sentence_length":12.333333333333334,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.07407407407407407,"flesch_reading_ease":77.70585585585587,"gunning_fog_index":6.014414414414415,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":1.0,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":false,"preserves_pdf_formatting":true},"overall_quality_score":0.72213231981982,"extracted_text":"May 5, 2023\n\nTo Whom it May Concern:\n\nThere were 20,000 bottles of water, 10,000 blankets, and 200 laptops delivered on January 23, 2023. A total of 3 trucks were used for 15 hours.\n\nBest Regards,\n\nMallori","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":2324428769090743019,"filename":"fake-memo.pdf"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064931.9274457,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/pdfs/Perfect Hash Functions - Slides.pdf","file_size":17159,"file_type":"pdf","category":"tiny","framework":"docling","iteration":2,"extraction_time":12.7452871799469,"startup_time":null,"peak_memory_mb":2025.73046875,"avg_memory_mb":1981.71171875,"peak_cpu_percent":309.4,"avg_cpu_percent":61.879999999999995,"total_io_mb":null,"status":"success","character_count":3222,"word_count":535,"error_type":null,"error_message":null,"quality_metrics":{"char_count":3222,"word_count":535,"sentence_count":12,"paragraph_count":55,"avg_word_length":4.31214953271028,"avg_sentence_length":44.75,"extraction_completeness":1.0,"text_coherence":0.9230769230769231,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":39.084615384615404,"gunning_fog_index":20.813675213675214,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.8,"expected_content_preserved":false,"has_encoding_issues":false,"has_ocr_artifacts":true,"preserves_pdf_formatting":true},"overall_quality_score":0.697125,"extracted_text":"## Perfect Hash Functions\n\nIn most general applications, we cannot know exactly what set of key values will need to be hashed until the hash function and table have been designed and put to use.\n\nAt that point, changing the hash function or changing the size of the table will be extremely expensive since either would require re-hashing every key.\n\nA perfect hash function is one that maps the set of actual key values to the table without any collisions.\n\nA minimal perfect hash function does so using a table that has only as many slots as there are key values to be hashed.\n\nIf the set of keys IS known in advance, it is possible to construct a specialized hash function that is perfect, perhaps even minimal perfect.\n\nAlgorithms for constructing perfect hash functions tend to be tedious, but a number are known.\n\n## Cichelli's Method\n\nThis is used primarily when it is necessary to hash a relatively small collection of keys, such as the set of reserved words for a programming language.\n\nThe basic formula is:\n\n$$h(S) = S.length() + g(S[0]) + g(S[S.length()-1])$$\n\nwhere g() is constructed using Cichelli's algorithm so that h() will return a different hash value for each word in the set.\n\nThe algorithm has three phases:\n\n- computation of the letter frequencies in the words\n\n- ordering the words\n\n- searching\n\nSuppose we need to hash the words in the list below:\n\ncalliope\n\nDetermine the frequency with which each first and last letter occurs:\n\nclio erato\n\neuterpe melpomene\n\npolyhymnia terpsichore\n\nthalia urania\n\n```\nletter: e  a  c  o  t  m  p  u freq:   6  3  2  2  2  1  1  1\n```\n\nScore the words by summing the frequencies of their first and last letters, and then sort them in that order:\n\ncalliope     8\n\nclio\n\n4\n\nerato 8\n\neuterpe\n\n12\n\nmelpomene 7\n\npolyhymnia\n\n4\n\nterpsichore\n\n8\n\nthalia 5\n\nurania\n\n4\n\neuterpe\n\ncalliope\n\nerato\n\nterpsichore\n\nmelpomene\n\nthalia\n\nclio\n\npolyhymnia\n\nurania\n\n## Cichelli's Method\n\nFinally, consider the words in order and define g(x) for each possible first and last letter in such a way that each of the words will have a distinct hash value:\n\n## Cichelli's Method\n\nCichelli's method imposes a limit on the search at this point (we're assuming it's 5 steps), and so we back up to the previous word and redefine the mapping there:\n\n| word       | g_value assigned   |   h(word) |   table | slot   |\n|------------|--------------------|-----------|---------|--------|\n| polyhymnia | p-->0              |        10 |       1 | reject |\n|            | p-->1              |        11 |       2 | reject |\n|            | p-->2              |        12 |       3 |        |\n| urania     | u-->0              |         6 |       6 | reject |\n|            | u-->1              |         7 |       7 | reject |\n|            | u-->2              |         8 |       8 | reject |\n|            | u-->3              |         9 |       0 | reject |\n|            | u-->4              |        10 |       1 | ok     |\n\nSo, if we define g() as determined above, then h() will be a minimal perfect hash function on the given set of words.\n\nThe primary difficulty is the cost, because the search phase can degenerate to exponential performance, and so it is only practical for small sets of words.","extracted_metadata":{"origin":{"mimetype":"application/pdf","binary_hash":6699026421032985158,"filename":"Perfect Hash Functions - Slides.pdf"},"page_count":5},"metadata_field_count":2,"attempts":1,"timestamp":1754064944.9545417,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/WKEY_AM.md","file_size":58405,"file_type":"md","category":"tiny","framework":"docling","iteration":2,"extraction_time":4.73976731300354,"startup_time":null,"peak_memory_mb":1866.94921875,"avg_memory_mb":1865.79921875,"peak_cpu_percent":99.8,"avg_cpu_percent":19.96,"total_io_mb":null,"status":"success","character_count":20729,"word_count":2118,"error_type":null,"error_message":null,"quality_metrics":{"char_count":20729,"word_count":2118,"sentence_count":268,"paragraph_count":75,"avg_word_length":6.4178470254957505,"avg_sentence_length":7.958955223880597,"extraction_completeness":1.0,"text_coherence":0.6753731343283582,"noise_ratio":0.7,"gibberish_ratio":0.07228915662650602,"flesch_reading_ease":29.140747770425776,"gunning_fog_index":12.929579976985043,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4802692182951217,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- History\n- 2\n- Programming\n- 3\n- Translator\n- 4\n- References\n- 5\n- External links\n\nToggle the table of contents\n\n# WKEY (AM)\n\nAdd languages\n\nAdd links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nRadio station in Covington, Virginia\n\nWKEY\n\n|                                                         |                                                                                                                      |\n|---------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| *Covington, Virginia* United States                     |                                                                                                                      |\n| Broadcast area                                          | *Covington, Virginia*Clifton Forge, Virginia                                                                         |\n| Frequency                                               | 1340kHz                                                                                                              |\n| Branding                                                | 103.5 Big Country                                                                                                    |\n| Programming                                             |                                                                                                                      |\n| Format                                                  | Country                                                                                                              |\n| Affiliations                                            | *Westwood One's Mainstream Country network *Fox News Radio*MRN Radio*PRN Radio* Virginia Sports Network              |\n| Ownership                                               |                                                                                                                      |\n| Owner                                                   | *Todd P. Robinson, Inc. * (WVJT, LLC)                                                                                |\n| Sister stations                                         | WJVR,WXCF                                                                                                            |\n| History                                                 |                                                                                                                      |\n| First air date                                          | May 23, 1941 (1941-05-23)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")                                    |\n| Last air date                                           | November 14, 2024 (2024-11-14)                                                                                       |\n| Former call signs                                       | WJMA (1941–1943)[[1]](#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\")[[2]](#cite_note-fcc1-2 \"#cite_note-fcc1-2\") |\n| Call signmeaning                                        | Earl M. Key (former owner)[[3]](#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\")                                         |\n| Technical information[[4]](#cite_note-4 \"#cite_note-4\") |                                                                                                                      |\n| Licensing authority                                     | FCC                                                                                                                  |\n| Facility ID                                             | 73157                                                                                                                |\n| Class                                                   | C                                                                                                                    |\n| Power                                                   | 1,000 watts (day and night)                                                                                          |\n| Transmitter coordinates                                 | 37°46′3.5″N 79°59′5.2″W﻿ / ﻿37.767639°N 79.984778°W﻿ / 37.767639; -79.984778                                         |\n| Translator(s)                                           | See § Translator                                                                                                     |\n| Repeater(s)                                             | 101.9WJVR-HD2(Iron Gate)                                                                                             |\n| Links                                                   |                                                                                                                      |\n| Public license information                              | *Public file*LMS                                                                                                     |\n| Webcast                                                 | Listen live                                                                                                          |\n| Website                                                 | twovirginiasmedia.com/stations/103-5-big-country/                                                                    |\n\nWKEY (1340 kHz ) was an American AM radio station licensed to serve the community of Covington, Virginia . The station, which began broadcasting in 1941, was owned and operated by Todd P. Robinson, Inc. The WKEY broadcast license was held by WVJT, LLC. [ [5] ] (#cite_note-fcc2-5 \"#cite_note-fcc2-5\")\n\nThe station had broadcast a country music format to the Covington / Clifton Forge area. WKEY was branded, along with its broadcast translator W278BF (103.5 FM , Covington), as \"103.5 Big Country\". [ [6] ] (#cite_note-arb1-6 \"#cite_note-arb1-6\")\n\n## History\n\n[ edit ]\n\nPhoto of Earl M. Key, owner of WKEY from 1942 until 1973.\n\nWKEY began broadcasting on May 23, 1941, as WJMA with 250 watts of power. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") WJMA was owned by John Arrington Jr. and his wife, Marcia. [ [1] ] (#cite_note-Arrington1-1 \"#cite_note-Arrington1-1\") On May 26, 1942, WJMA was sold to Earl M. Key and the callsign changed to WKEY in 1943. [ [3] ] (#cite_note-KeyCall-3 \"#cite_note-KeyCall-3\") [ [7] ] (#cite_note-Arrington2-7 \"#cite_note-Arrington2-7\") [ [8] ] (#cite_note-Key-8 \"#cite_note-Key-8\")\n\nBy 1964, the station's power increased to 1,000 watts during the day, while the nighttime power remained at 250 watts. [ [9] ] (#cite_note-Power1-9 \"#cite_note-Power1-9\") On June 1, 1973, WKEY was sold to WKEY, Inc., headed by E.H. Barr, for an undisclosed amount. [ [10] ] (#cite_note-Sale1-10 \"#cite_note-Sale1-10\") WKEY increased its nighttime power in 1987, to 1,000 watts, matching its daytime power. [ [11] ] (#cite_note-Power2-11 \"#cite_note-Power2-11\")\n\nOn December 20, 2002, WKEY was acquired by Quorum Radio Partners of Virginia, Inc. for $650,000. [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") [ [13] ] (#cite_note-Sale2a-13 \"#cite_note-Sale2a-13\") During 2002, WKEY switched from its longtime country format to oldies . [ [12] ] (#cite_note-Sale2-12 \"#cite_note-Sale2-12\") On April 20, 2005, Quorum Radio Partners of Virginia, Inc. filed for bankruptcy and WKEY placed into debtor-in-possession status pending a sale. [ [14] ] (#cite_note-Debtor-14 \"#cite_note-Debtor-14\") On January 1, 2006, WKEY was sold to Todd P. Robinson, Inc., for $100,000. [ [15] ] (#cite_note-Sale3a-15 \"#cite_note-Sale3a-15\") [ [16] ] (#cite_note-Sale3b-16 \"#cite_note-Sale3b-16\")\n\nOn May 1, 2008, the station changed its format from oldies to southern gospel , under \"The Cross\" branding. [ [17] ] (#cite_note-SGospel-17 \"#cite_note-SGospel-17\") On January 14, 2012, WKEY began simulcasting sister station WIQO-FM , after its move to Forest, Virginia , and away from Covington. [ [18] ] (#cite_note-Big1035a-18 \"#cite_note-Big1035a-18\") On August 9, 2012, WKEY began simulcasting full-time on translator station W278BF (103.5 FM), located in Covington, with the country format that was previously heard on WIQO. [ [19] ] (#cite_note-Big1035b-19 \"#cite_note-Big1035b-19\")\n\nOn November 18, 2013, WKEY began streaming its signal live on the internet. [ [20] ] (#cite_note-Streaming-20 \"#cite_note-Streaming-20\")\n\nThe Federal Communications Commission cancelled the station's license on November 14, 2024; [ [21] ] (#cite_note-Cancelled-21 \"#cite_note-Cancelled-21\") WKEY's programming remains on W278BF and the second HD Radio channel of WJVR . [ [22] ] (#cite_note-ri-wkeyclosure-22 \"#cite_note-ri-wkeyclosure-22\")\n\n## Programming\n\n[ edit ]\n\nOffices in Covington\n\nWKEY carried a mix of local and syndicated programming. Weekdays began with a locally produced morning show called \"Highway 64 with Big Al\". [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The station also had a news department which prepared and broadcast local news reports on weekdays. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The bulk of the broadcast day's programming came from Dial Global 's Mainstream Country network. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") Nationally syndicated programs aired on WKEY included the \"Tim White Bluegrass Show\" and \"zMAX Racing Country\". [ [24] ] (#cite_note-Program2-24 \"#cite_note-Program2-24\") The station carried a one-minute newscast from Fox News Radio at the top of each hour. [ [25] ] (#cite_note-FoxNews-25 \"#cite_note-FoxNews-25\")\n\nWKEY had broadcast live football games from Covington High School in the Fall. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") WKEY was an affiliate of the University of Virginia 's Virginia Sports Network, which carried the school's football and basketball games. [ [26] ] (#cite_note-UVASports-26 \"#cite_note-UVASports-26\") NASCAR Sprint Cup Series races could also be heard on WKEY with live coverage provided by the Motor Racing Network and the Performance Racing Network . [ [27] ] (#cite_note-Racing1-27 \"#cite_note-Racing1-27\") [ [28] ] (#cite_note-Racing2-28 \"#cite_note-Racing2-28\")\n\nOn Sunday mornings, WKEY aired an assortment of religious programming . [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\") The programming began with one half hour of locally produced Gospel music program, after which the station aired the syndicated programs In Touch Ministries and Focus on the Family , rounding out the block with a live local church service broadcast. [ [23] ] (#cite_note-Program1-23 \"#cite_note-Program1-23\")\n\n## Translator\n\n[ edit ] In addition to the main station, WKEY was relayed by an FM translator to widen its broadcast area. [ [29] ] (#cite_note-fcc3-29 \"#cite_note-fcc3-29\") [ [30] ] (#cite_note-fcc4-30 \"#cite_note-fcc4-30\")\n\n| Call sign   | Frequency   | City of license     |    FID |   ERP(W) | HAAT            | Class   | FCC info   |\n|-------------|-------------|---------------------|--------|----------|-----------------|---------|------------|\n| W278BF      | 103.5 FM    | Covington, Virginia | 139546 |       16 | 310.6m(1,019ft) | D       | LMS        |\n\n## References\n\n[ edit ]\n\n1. ^ a b c d Broadcasting Yearbook - 1942 (PDF). Broadcasting Publications, Inc. 1942. p. 186. Retrieved December 10, 2012.\n2. ^ \"Call Sign History\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n3. ^ a b Broadcasting Yearbook - 1944 (PDF). Broadcasting Publications, Inc. 1944. p. 166. Retrieved December 10, 2012.\n4. ^ \"Facility Technical Data for WKEY\" . Licensing and Management System . Federal Communications Commission .\n5. ^ \"WKEY Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 13, 2013.\n6. ^ \"Station Information Profile\" . Arbitron / Nielsen Holdings . Retrieved November 20, 2013.\n7. ^ a b Broadcasting Yearbook - 1960 (PDF). Broadcasting Publications, Inc. 1960. pp. A-242. Retrieved December 10, 2012.\n8. ^ Broadcasting Yearbook - 1943 (PDF). Broadcasting Publications, Inc. 1943. p. 150. Retrieved December 10, 2012.\n9. ^ Broadcasting Yearbook - 1964 (PDF). Broadcasting Publications, Inc. 1964. pp. B-163. Retrieved December 10, 2012.\n10. ^ Broadcasting Yearbook - 1974 (PDF). Broadcasting Publications, Inc. 1974. pp. B-218. Retrieved December 10, 2012.\n11. ^ Broadcasting &amp; Cablecasting Yearbook - 1987 (PDF). Broadcasting Publications, Inc. 1987. pp. B-296. Retrieved December 10, 2012.\n12. ^ a b Broadcasting &amp; Cable Yearbook - 2003-2004 (PDF). Reed Publishing (Nederland) B.V. 2003. pp. D-494. Retrieved December 10, 2012.\n13. ^ Volume 19, Issue 86, Your Morning Radio Industry E-Paper . Radio Business Report. November 5, 2002. Retrieved May 6, 2012.\n14. ^ Broadcasting &amp; Cable Yearbook - 2006 (PDF). Reed Publishing (Nederland) B.V. 2006. pp. D-518. Retrieved December 10, 2012.\n15. ^ \"Application for Consent to Assignment of Broadcast Station Construction Permit or License\" . Federal Communications Commission . November 18, 2005. Retrieved December 10, 2012.\n16. ^ \"Escrow Agreement\" . Federal Communications Commission . November 4, 2005. Archived from the original on March 4, 2016. Retrieved December 10, 2012.\n17. ^ \"M-Street Directory 2009/2010 - 18th Edition\" (PDF). M Street Corporation. 2009. p. 644. Retrieved April 17, 2013.\n18. ^ \"Big Country 101\" . Todd P. Robinson, Inc. Archived from the original on January 16, 2012. Retrieved May 6, 2013.\n19. ^ \"We are set to...\" Todd P. Robinson, Inc./Facebook. August 9, 2012. Retrieved May 6, 2013.\n20. ^ \"BIG COUNTRY is now WORLDWIDE!\" . Todd P. Robinson, Inc./Facebook. November 18, 2013. Retrieved November 22, 2013.\n21. ^ \"Cancellation Application\" . Federal Communications Commission , audio division. November 12, 2024. Retrieved November 15, 2024.\n22. ^ Venta, Lance (November 17, 2024). \"FCC Report 11/17: WCCO On The Move\" . RadioInsight . Retrieved February 2, 2025.\n23. ^ a b c d e f \"Big Country 103.5 - Highlands Media Group\" . Todd P. Robinson, Inc. Retrieved April 27, 2016.\n24. ^ \"Affiliates - zMAX Racing Country\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n25. ^ \"Station Finder - Virginia\" . Fox News Channel / Premiere Networks . Retrieved November 20, 2013.\n26. ^ \"Virginia Sports Radio Network Affiliates\" . University of Virginia / CBS Interactive . Retrieved May 11, 2013.\n27. ^ \"Radio Stations - Virginia\" . MRN. Retrieved November 18, 2013.\n28. ^ \"Sprint Cup Series Affiliates\" . Speedway Motorsports, Inc. Retrieved May 11, 2013.\n29. ^ \"W278BF Facility Record\" . CDBS Public Access Database . FCC Media Bureau. Retrieved May 11, 2013.\n30. ^ \"Application for Authority to Construct or Make Changes in an FM Translator or FM Booster Station\" . FCC Media Bureau. January 3, 2012. Retrieved May 11, 2013.\n\n## External links\n\n[ edit ]\n\n- 103.5 Big Country Online\n- Facility details for Facility ID 73157 (WKEY) in the FCC Licensing and Management System\n- WKEY in Nielsen Audio 's AM station database\n- Facility details for Facility ID 139546 (W278BF) in the FCC Licensing and Management System\n- W278BF at FCCdata.org\n- FCC History Cards for WKEY\n\n| *v*t*eRadio stations in theVirginiaHighlands                                                                                                      |                                                                                  |\n|---------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\n| This area includes the countiesBath,Highland,Alleghany, andRockbridgein Virginia, andPocahontas CountyinWest Virginia.                            |                                                                                  |\n| ByAM frequency                                                                                                                                    | *1370*1450                                                                       |\n| ByFM frequency                                                                                                                                    | *88.7*89.7*89.9*90.9*91.5*91.9*96.7*101.9*107.1                                  |\n| Digital radioby frequency & subchannel                                                                                                            | *88.7-1*88.7-2*88.7-3                                                            |\n| Bycall sign                                                                                                                                       | *W237DF*W278BF*WCHG*WIQR+HD2+HD3*WJVR*WLUR*WMRL*WREL*WVLS*WVMR*WVMR-FM*WVRI*WWZW |\n| Defunct                                                                                                                                           | *WKEY (1340 AM) *WXCF (1230 AM)                                                  |\n| Nearby regionsEastern West VirginiaHarrisonburgRoanoke–LynchburgSee alsoList of radio stations in VirginiaList of radio stations in West Virginia |                                                                                  |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=WKEY\\_(AM)\\&amp;oldid\\=1276840556](https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556 \"https://en.wikipedia.org/w/index.php?title=WKEY_(AM)&amp;oldid=1276840556\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [Radio stations in Virginia](/wiki/Category:Radio_stations_in_Virginia \"Category:Radio stations in Virginia\")\n\n* [Radio stations established in 1941](/wiki/Category:Radio_stations_established_in_1941 \"Category:Radio stations established in 1941\")\n\n* [1941 establishments in Virginia](/wiki/Category:1941_establishments_in_Virginia \"Category:1941 establishments in Virginia\")\n\n* [Radio stations disestablished in 2024](/wiki/Category:Radio_stations_disestablished_in_2024 \"Category:Radio stations disestablished in 2024\")\n\n* [2024 disestablishments in Virginia](/wiki/Category:2024_disestablishments_in_Virginia \"Category:2024 disestablishments in Virginia\")\n\n* [Defunct radio stations in the United States](/wiki/Category:Defunct_radio_stations_in_the_United_States \"Category:Defunct radio stations in the United States\")\n\n* [Defunct mass media in Virginia](/wiki/Category:Defunct_mass_media_in_Virginia \"Category:Defunct mass media in Virginia\")\n\n* [Covington, Virginia](/wiki/Category:Covington,_Virginia \"Category:Covington, Virginia\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Use American English from February 2025](/wiki/Category:Use_American_English_from_February_2025 \"Category:Use American English from February 2025\")\n\n* [All Wikipedia articles written in American English](/wiki/Category:All_Wikipedia_articles_written_in_American_English \"Category:All Wikipedia articles written in American English\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n* [Pages using gadget WikiMiniAtlas](/wiki/Category:Pages_using_gadget_WikiMiniAtlas \"Category:Pages using gadget WikiMiniAtlas\")\n\n* [Articles using infobox radio station](/wiki/Category:Articles_using_infobox_radio_station \"Category:Articles using infobox radio station\")\n\n- This page was last edited on 21 February 2025, at 02:02 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nWKEY (AM)\n\nAdd languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":12585875467379157536,"filename":"WKEY_AM.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064949.9683933,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/simple-table.md","file_size":152,"file_type":"md","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.01562976837158203,"startup_time":null,"peak_memory_mb":1865.953125,"avg_memory_mb":1865.953125,"peak_cpu_percent":188.0,"avg_cpu_percent":37.6,"total_io_mb":null,"status":"success","character_count":167,"word_count":25,"error_type":null,"error_message":null,"quality_metrics":{"char_count":167,"word_count":25,"sentence_count":3,"paragraph_count":1,"avg_word_length":4.0,"avg_sentence_length":9.0,"extraction_completeness":1.0,"text_coherence":1.0,"noise_ratio":0.39999999999999997,"gibberish_ratio":0.0,"flesch_reading_ease":78.19795454545455,"gunning_fog_index":5.836363636363637,"has_proper_formatting":false,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5852474431818183,"extracted_text":"| Item         |   Price |   # In stock |\n|--------------|---------|--------------|\n| Juicy Apples |    1.99 |          739 |\n| Bananas      |    1.89 |            6 |","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":3364328643571723329,"filename":"simple-table.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064950.2469795,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/README.md","file_size":859,"file_type":"md","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.09112977981567383,"startup_time":null,"peak_memory_mb":1865.953125,"avg_memory_mb":1865.953125,"peak_cpu_percent":98.4,"avg_cpu_percent":19.68,"total_io_mb":null,"status":"success","character_count":857,"word_count":136,"error_type":null,"error_message":null,"quality_metrics":{"char_count":857,"word_count":136,"sentence_count":12,"paragraph_count":8,"avg_word_length":5.227941176470588,"avg_sentence_length":11.833333333333334,"extraction_completeness":1.0,"text_coherence":0.8461538461538461,"noise_ratio":0.24669778296382727,"gibberish_ratio":0.08333333333333333,"flesch_reading_ease":58.84138211382114,"gunning_fog_index":10.34471544715447,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.5034274120512164,"extracted_text":"## Example Docs\n\nThe sample docs directory contains the following files:\n\n- `example-10k.html` - A 10-K SEC filing in HTML format\n- `layout-parser-paper.pdf` - A PDF copy of the layout parser paper\n- `factbook.xml` / `factbook.xsl` - Example XML/XLS files that you can use to test stylesheets\n\nThese documents can be used to test out the parsers in the library. In addition, here are instructions for pulling in some sample docs that are too big to store in the repo.\n\n#### XBRL 10-K\n\nYou can get an example 10-K in inline XBRL format using the following `curl` . Note, you need to have the user agent set in the header or the SEC site will reject your request.\n\n```\ncurl -O \\\n  -A '${organization} ${email}'\n  https://www.sec.gov/Archives/edgar/data/311094/000117184321001344/0001171843-21-001344.txt\n```\n\nYou can parse this document using the HTML parser.","extracted_metadata":{"origin":{"mimetype":"text/markdown","binary_hash":8693080574564157183,"filename":"README.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064950.5953808,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/HIP_13044_b.md","file_size":54082,"file_type":"md","category":"tiny","framework":"docling","iteration":2,"extraction_time":4.402285575866699,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1865.153125,"peak_cpu_percent":100.2,"avg_cpu_percent":20.04,"total_io_mb":null,"status":"success","character_count":19767,"word_count":1615,"error_type":null,"error_message":null,"quality_metrics":{"char_count":19767,"word_count":1615,"sentence_count":200,"paragraph_count":58,"avg_word_length":6.5702786377708975,"avg_sentence_length":8.255,"extraction_completeness":1.0,"text_coherence":0.665,"noise_ratio":0.6747002580057673,"gibberish_ratio":0.0,"flesch_reading_ease":22.493548039250953,"gunning_fog_index":15.724941590884583,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.46620446729978465,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Observational history\n- 2\n- Characteristics\n- 3\n- Claims of a planetary system\n- 4\n- References\n\nToggle the table of contents\n\n# HIP 13044\n\n15 languages\n\n- العربية\n- Bosanski\n- Deutsch\n- Español\n- فارسی\n- Français\n- Italiano\n- Latviešu\n- 日本語\n- Polski\n- Русский\n- Svenska\n- ไทย\n- Українська\n- 中文\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nCoordinates : 2h 47m 37.4431s, −36° 6′ 27.0322″\n\nFrom Wikipedia, the free encyclopedia\n\n(Redirected from HIP 13044 b ) Star in the constellation Fornax\n\nHIP 13044\n\n| Observation dataEpochJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")EquinoxJ2000.0[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")   |                                                                                                                                         |\n|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------|\n| Constellation                                                                                                                                    | Fornax[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                    |\n| Right ascension                                                                                                                                  | 02h 47m 37.44310s[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Declination                                                                                                                                      | −36° 06′ 27.0322″[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                     |\n| Apparent magnitude(V)                                                                                                                            | +9.94[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                     |\n| Characteristics                                                                                                                                  |                                                                                                                                         |\n| Evolutionary stage                                                                                                                               | horizontal branch[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                           |\n| Spectral type                                                                                                                                    | F2[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                                        |\n| B−Vcolor index                                                                                                                                   | +0.466±0.026[[2]](#cite_note-Anderson_Francis_2012-2 \"#cite_note-Anderson_Francis_2012-2\")                                              |\n| Astrometry                                                                                                                                       |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Radial velocity(Rv)                                                                                                                              | 300[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") km/s                                                                    |\n| Proper motion(μ)                                                                                                                                 | RA: +3.083[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yrDec.: −12.573[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")mas/yr |\n| Parallax(π)                                                                                                                                      | 1.3705±0.0499mas[[1]](#cite_note-GaiaDR2-1 \"#cite_note-GaiaDR2-1\")                                                                      |\n| Distance                                                                                                                                         | 2,380 ± 90ly(730 ± 30pc)                                                                                                                |\n| Absolute magnitude(MV)                                                                                                                           | +0.62[[4]](#cite_note-carney2008-4 \"#cite_note-carney2008-4\")                                                                           |\n|                                                                                                                                                  |                                                                                                                                         |\n| Details[[3]](#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\")                                                                              |                                                                                                                                         |\n|                                                                                                                                                  |                                                                                                                                         |\n| Mass                                                                                                                                             | 0.8±0.1M☉                                                                                                                               |\n| Radius                                                                                                                                           | 6.7±0.3R☉                                                                                                                               |\n| Temperature                                                                                                                                      | 6,025±63K                                                                                                                               |\n| Metallicity[Fe/H]                                                                                                                                | −2.09±0.26dex                                                                                                                           |\n| Rotation                                                                                                                                         | 5.53±0.73 d                                                                                                                             |\n|                                                                                                                                                  |                                                                                                                                         |\n| Other designations                                                                                                                               |                                                                                                                                         |\n| CD−36°1052,HIP13044,SAO193917,PPM278353[[5]](#cite_note-SIMBAD_data_on_HIP_13044-5 \"#cite_note-SIMBAD_data_on_HIP_13044-5\")                      |                                                                                                                                         |\n| Database references                                                                                                                              |                                                                                                                                         |\n| SIMBAD                                                                                                                                           | data                                                                                                                                    |\n\nHIP 13044 is a red horizontal-branch star about 2,300 light years (700 pc ) from Earth in the constellation Fornax . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\") The star is part of the Helmi stream , a former dwarf galaxy that merged with the Milky Way between six and nine billion years ago. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") As a result, HIP 13044 circles the Galactic Center at a highly irregular orbit with respect to the galactic plane . HIP 13044 is slightly less massive than the Sun, but is approximately seven times its size. The star, which is estimated to be at least nine billion years old, has passed the red-giant phase. The relatively fast rotation of the star may be due to having engulfed one or more planets during the red-giant phase. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\n## Observational history\n\n[ edit ] A science team from the Max Planck Institute for Astronomy first observed HIP 13044 using Fiber-fed Extended Range Optical Spectrograph (FEROS) at the European Southern Observatory 's La Silla Observatory in Chile. The first follow-up led to the collection of 36 radial velocity measurements taken between September 2009 and July 2010. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")\n\nThe team also used photometric data that had been passively collected by and publicly released into the archive of the SuperWASP collaboration, which had been observing the region where the star was located. In this data, HIP 13044 was found to oscillate; the signal was blocked roughly every sixteen days. Analysis of the SuperWASP and FEROS data led to the supposed discovery of the planet HIP 13044 b , [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") although this claim was later refuted.\n\n## Characteristics\n\n[ edit ] HIP 13044 is an F-type star located approximately 701 parsecs (2,286 light years ) from Earth in the Helmi stream [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\")—a group of low-metallicity stars moving with large velocities relative to the Sun. The star follows an eccentric galactic orbit, with a distance from the galactic center ranging from 7 to 16 kiloparsecs . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") The orbit does not lie in the galactic plane , and can reach distances as high as 13 kpc above it. This indicates that it once was part of a satellite galaxy of the Milky Way that was disrupted 6–9 billion years ago. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") The star itself is estimated to be at least nine billion years old. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\nHIP 13044 is fairly evolved star fusing helium in its core, and has therefore already passed the red-giant phase of its evolution. [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") It lies near the blue end of the red horizontal branch bordering the instability strip . [ [3] ] (#cite_note-Setiawan2010-3 \"#cite_note-Setiawan2010-3\") Its surface temperature is about 6025 K and its radius is approximately 6.7 solar radii . HIP 13044's mass is estimated to be 0.8 solar masses . [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\") Having a rotation period of 5–6 days, HIP 13044 is a fast-rotating star for its type. It is possible that this is because it has swallowed planets during its red-giant phase. [ [6] ] (#cite_note-Than2010-11-18-6 \"#cite_note-Than2010-11-18-6\")\n\nHIP 13044 has an apparent magnitude of 9.94 and cannot be seen with the unaided eye. [ [8] ] (#cite_note-HIP_13044_b_at_Exoplanet.eu-8 \"#cite_note-HIP_13044_b_at_Exoplanet.eu-8\")\n\n## Claims of a planetary system\n\n[ edit ] In 2010, it was announced that a giant planet in a 16.2-day orbit had been discovered by the radial velocity measurements. This would have had implications for planet formation in metal-poor systems and survival of planets being engulfed by expanded giant stars. [ [7] ] (#cite_note-Klement2010-7 \"#cite_note-Klement2010-7\") Subsequent analysis of the data revealed problems with the detection: for example an erroneous barycentric correction had been applied (the same error had also led to claims of planets around HIP 11952 that were subsequently refuted). After applying the corrections, there is no evidence for a planet orbiting the star. [ [9] ] (#cite_note-JonesJenkins2014-9 \"#cite_note-JonesJenkins2014-9\")\n\n## References\n\n[ edit ]\n\n1. ^ a b c d e f Brown, A. G. A. ; et al. ( Gaia collaboration ) (August 2018). \" Gaia Data Release 2: Summary of the contents and survey properties\" . Astronomy &amp; Astrophysics . 616 . A1. arXiv : 1804.09365 . Bibcode : 2018A&amp;A...616A...1G . doi : 10.1051/0004-6361/201833051 . Gaia DR2 record for this source at VizieR .\n2. ^ a b c d Anderson, E.; Francis, Ch. (2012). \"XHIP: An extended hipparcos compilation\". Astronomy Letters . 38 (5): 331. arXiv : 1108.4971 . Bibcode : 2012AstL...38..331A . doi : 10.1134/S1063773712050015 . S2CID 119257644 .\n3. ^ a b c d e f g Setiawan, Johny; et al. (2010). \"A Giant Planet Around a Metal-poor Star of Extragalactic Origin\". Science . 330 (6011): 1642–1644. arXiv : 1011.6376 . Bibcode : 2010Sci...330.1642S . doi : 10.1126/science.1193342 . PMID 21097905 . S2CID 657925 .\n4. ^ Carney, Bruce W.; Latham, David W.; Stefanik, Robert P.; Laird, John B. (2008). \"Line Broadening in Field Metal-Poor Red Giant and Red Horizontal Branch Stars\". The Astronomical Journal . 135 (1): 196. arXiv : 0710.0392 . Bibcode : 2008AJ....135..196C . doi : 10.1088/0004-6256/135/1/196 .\n5. ^ \"HIP 13044\" . SIMBAD . Centre de données astronomiques de Strasbourg . Retrieved 2010-11-19.\n6. ^ a b Than, Ker (2010-11-18). \"New Planet Discovered: First Spotted Outside Our Galaxy\" . NationalGeographic.com . National Geographic Society . Archived from the original on November 20, 2010. Retrieved 2010-11-19.\n7. ^ a b c d e f Klement, R.; Setiawan, J.; Thomas Henning; Hans-Walter Rix; Boyke Rochau; Jens Rodmann; Tim Schulze-Hartung; MPIA Heidelberg; ESTEC (2011). \"The visitor from an ancient galaxy: A planetary companion around an old, metal-poor red horizontal branch star\". The Astrophysics of Planetary Systems: Formation, Structure, and Dynamical Evolution . IAU Symposium. Vol. 276. Proceedings of the International Astronomical Union. pp. 121–125. arXiv : 1011.4938 . Bibcode : 2011IAUS..276..121K . doi : 10.1017/S1743921311020059 .\n8. ^ a b c d \"Notes for Planet HIP 13044 b\" . Extrasolar Planets Encyclopaedia . Retrieved 2010-11-22.\n9. ^ Jones, M. I.; Jenkins, J. S. (2014). \"No evidence of the planet orbiting the extremely metal-poor extragalactic star HIP 13044\". Astronomy &amp; Astrophysics . 562 : id.A129. arXiv : 1401.0517 . Bibcode : 2014A&amp;A...562A.129J . doi : 10.1051/0004-6361/201322132 . S2CID 55365608 .\n\n| *v*t*eConstellation of Fornax                                                                     |                     |\n|---------------------------------------------------------------------------------------------------|---------------------|\n| *List of stars in Fornax*Fornax in Chinese astronomy*Chandra Deep Field South*Hubble Legacy Field |                     |\n| Stars                                                                                             |                     |\n|                                                                                                   | Exoplanets          |\n|                                                                                                   | Star clusters       |\n|                                                                                                   | Nebulae             |\n| Galaxies                                                                                          |                     |\n|                                                                                                   | Galaxy clusters     |\n|                                                                                                   | Astronomical events |\n| Category                                                                                          |                     |\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=HIP\\_13044\\&amp;oldid\\=1287367829\\#Claims\\_of\\_a\\_planetary\\_system](https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system \"https://en.wikipedia.org/w/index.php?title=HIP_13044&amp;oldid=1287367829#Claims_of_a_planetary_system\")\"\n\n[Categories](/wiki/Help:Category \"Help:Category\"): * [F\\-type giants](/wiki/Category:F-type_giants \"Category:F-type giants\")\n\n* [Horizontal\\-branch stars](/wiki/Category:Horizontal-branch_stars \"Category:Horizontal-branch stars\")\n\n* [Disproven exoplanets](/wiki/Category:Disproven_exoplanets \"Category:Disproven exoplanets\")\n\n* [Fornax](/wiki/Category:Fornax \"Category:Fornax\")\n\n* [Durchmusterung objects](/wiki/Category:Durchmusterung_objects \"Category:Durchmusterung objects\")\n\n* [Hipparcos objects](/wiki/Category:Hipparcos_objects \"Category:Hipparcos objects\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description is different from Wikidata](/wiki/Category:Short_description_is_different_from_Wikidata \"Category:Short description is different from Wikidata\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 25 April 2025, at 19:42 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nHIP 13044\n\n15 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1813732512932013776,"filename":"HIP_13044_b.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064955.2585304,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/markdown/Sinthgunt.md","file_size":18844,"file_type":"md","category":"tiny","framework":"docling","iteration":2,"extraction_time":2.19942307472229,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":100.0,"avg_cpu_percent":20.0,"total_io_mb":null,"status":"success","character_count":7655,"word_count":1129,"error_type":null,"error_message":null,"quality_metrics":{"char_count":7655,"word_count":1129,"sentence_count":116,"paragraph_count":53,"avg_word_length":5.731620903454385,"avg_sentence_length":9.724137931034482,"extraction_completeness":1.0,"text_coherence":0.6896551724137931,"noise_ratio":0.053109079033311565,"gibberish_ratio":0.024539877300613498,"flesch_reading_ease":33.82099875930521,"gunning_fog_index":14.126220016542598,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4088286764317438,"extracted_text":"## Contents\n\nmove to sidebar hide\n\n- (Top)\n- 1\n- Etymology\n- 2\n- Placement\n- 3\n- Notes\n- 4\n- References\n\nToggle the table of contents\n\n# Sinthgunt\n\n5 languages\n\n- Deutsch\n- Ελληνικά\n- Español\n- Português\n- Українська\n\nEdit links\n\n- Article\n- Talk\n\nEnglish\n\n- Read\n- Edit\n- View history\n\nTools\n\nTools move to sidebar hide\n\nActions\n\n- Read\n- Edit\n- View history\n\nGeneral\n\n- What links here\n- Related changes\n- Upload file\n- Permanent link\n- Page information\n- Cite this page\n- Get shortened URL\n- Download QR code\n\nPrint/export\n\n- Download as PDF\n- Printable version\n\nIn other projects\n\n- Wikidata item\n\nAppearance move to sidebar hide\n\nFrom Wikipedia, the free encyclopedia\n\nFigure in Germanic mythology\n\n\"Wodan Heals Balder's Horse\" (1905) by Emil Doepler\n\nSinthgunt [ needs IPA ] is a figure in Germanic mythology , attested solely in the Old High German 9th- or 10th-century Second Merseburg Charm . In the verse charm, Sinthgunt is referred to as the sister of the personified sun, Sunna (whose name is alliterative to Sinthgunt ), [ [1] ] (#cite_note-ORCHARD112-1 \"#cite_note-ORCHARD112-1\") and the two sisters are cited as both producing incantations to heal the horse of Phol , another otherwise unattested figure but possibly the same as Balder , who is named elsewhere in the charm. The two are then followed by Friia and Uolla , also alliterative and stated as sisters.\n\nAs Sinthgunt is otherwise unattested, her significance is otherwise unknown, but some scholarly theories exist about her role in Germanic mythology based on proposed etymologies and the potential significance of her placement within the poem.\n\n## Etymology\n\n[ edit ] The etymology of Sinthgunt is unclear. In the original manuscript, Sinthgunt is spelled Sin ht gunt (emphasis added). In the 19th century, Sophus Bugge stuck strictly to this reading, proposing a complex compound based on Germanic * Sin-naχt-gund , i.e., \"the night-walking one\". [ [2] ] (#cite_note-2 \"#cite_note-2\") As a result of the pairing with Sunna, the personified sun (corresponding to Old Norse Sól ), this etymology has been interpreted as a reference to the moon . However, this reading has yielded problems; the moon in Germanic mythology is considered masculine, exemplified in the personification of the moon in Norse mythology , Máni , a male figure. According to Rudolf Simek , the historical record lacks evidence for any cult of personified celestial bodies among the ancient Germanic peoples. [ [3] ] (#cite_note-3 \"#cite_note-3\")\n\nStefan Schaffner rejects this etymology, as does Heiner Eichner [ de ] , because the first element Sinht- cannot be based on the presupposed earlier Germanic * sinχt- . Such a Germanic form would have yielded Old High German * sīht by regular sound change. [ [4] ] (#cite_note-4 \"#cite_note-4\") The amended Sinthgunt presupposes a Proto-Germanic compound * Senþa-gunþjō , the first element meaning \"raid, (military) campaign\", the second one \"fight\". This interpretation corresponds well to other Old High German female names such as Sindhilt (from * Senþa-χilðijō , with its second element also meaning \"fight\", cf. Old Norse hildr , Old English hild ). [ [5] ] (#cite_note-5 \"#cite_note-5\") Simek also mentions the interpretation \"heavenly body, star\". [ [6] ] (#cite_note-SIMEK285-286-6 \"#cite_note-SIMEK285-286-6\")\n\n## Placement\n\n[ edit ] The figures Fulla ( Uolla ) and Frigg ( Friia ) are attested together in later Old Norse sources (though not as sisters), and theories have been proposed that Fulla may at one time have been an aspect of Frigg. This notion has resulted in a theory that a similar situation may have existed between the figures of Sinthgunt and Sunna/Sól, in that the two may have been understood as aspects of one another rather than entirely separate figures. [ [7] ] (#cite_note-BOSTOCK29-7 \"#cite_note-BOSTOCK29-7\") Similarly, Wolfgang Beck [ de ] analysed her as a subordinate goddess from Sunna's retinue, a kind of \"situation goddess\", based on her unique appearance in the sources. [ [8] ] (#cite_note-8 \"#cite_note-8\")\n\nFriedrich Kauffmann classified Sinhtgunt as a valkyrie in the 19th century, because the elements -gund and -hild appear frequently in their names. [ [9] ] (#cite_note-9 \"#cite_note-9\") Stefan Schaffner and Heiner Eichner more recently agreed with him, based on Günter Müller's paper on the valkyries' healing powers. [ [10] ] (#cite_note-10 \"#cite_note-10\")\n\nKarl Helm rejected Kauffmann and grouped Sinhtgunt with the Idisi of the First Merseburg Charm , as a specially defined group of Germanic goddesses. [ [11] ] (#cite_note-11 \"#cite_note-11\")\n\n## Notes\n\n[ edit ]\n\n1. ^ Orchard (1997:112).\n2. ^ Sophus Bugge . Studien über die Entstehung der nordischen Götter- und Heldensagen . München 1889, p. 298. Cf. Rudolf Simek . Lexikon der germanischen Mythologie . Stuttgart: Kröner, 1984, p. 374; trans. Angela Hall, Dictionary of Northern Mythology . Cambridge: Brewer, 1993, pp. 285–86.\n3. ^ Simek, pp. 392, 397.\n4. ^ Stefan Schaffner. \"Die Götternamen des Zweiten Merseburger Zauberspruchs\". Die Sprache 41.2 (1999) p. 169.\n5. ^ Schaffner, pp. 169–70.\n6. ^ Simek (2007:285-286).\n7. ^ Bostock (1976:29).\n8. ^ Wolfgang Beck . Die Merseburger Zaubersprüche. Eine Einführung . Pertersberg, 2010, pp. 163–171, here p. 171.\n9. ^ Friedrich Kauffmann . \"Der Zweite Merseburger Zauberspruch\". Beiträge zur Geschichte der deutschen Sprache und Literatur 15 (1891), pp. 207–210; Friedrich Kauffmann. \"Noch einmal der zweite Merseburger Spruch\". Zeitschrift für deutsche Philologie 26 (1894), pp. 454–462.\n10. ^ Gunter Müller. \"Zur Heilkraft der Walküren. Sondersprachliches der Magie in kontinentalen und skandinavischen Zeugnissen\". Frühmittelalterliche Studien 10 (1976), pp. 358 ff.\n11. ^ Karl Helm . Altgermanische Religionsgeschichte , Vol. 2.2, Heidelberg: Winter, 1953, pp. 219, 227.\n\n## References\n\n[ edit ]\n\n- Bostock, John Knight. King, Charles Kenneth. McLintock, D. R. (1976). A Handbook on Old High German Literature . Oxford University Press . ISBN 0-19-815392-9\n- Orchard, Andy (1997). Dictionary of Norse Myth and Legend . Cassell . ISBN 0-304-34520-2\n- Simek, Rudolf (2007) translated by Angela Hall. Dictionary of Northern Mythology . D.S. Brewer . ISBN 0-85991-513-1\n\nRetrieved from \"[https://en.wikipedia.org/w/index.php?title\\=Sinthgunt\\&amp;oldid\\=1296614947](https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947 \"https://en.wikipedia.org/w/index.php?title=Sinthgunt&amp;oldid=1296614947\")\"\n\n[Category](/wiki/Help:Category \"Help:Category\"): * [Germanic goddesses](/wiki/Category:Germanic_goddesses \"Category:Germanic goddesses\")\n\nHidden categories: * [Articles with short description](/wiki/Category:Articles_with_short_description \"Category:Articles with short description\")\n\n* [Short description matches Wikidata](/wiki/Category:Short_description_matches_Wikidata \"Category:Short description matches Wikidata\")\n\n* [Articles needing IPA](/wiki/Category:Articles_needing_IPA \"Category:Articles needing IPA\")\n\n* [Good articles](/wiki/Category:Good_articles \"Category:Good articles\")\n\n- This page was last edited on 21 June 2025, at 03:09 (UTC).\n- Text is available under the Creative Commons Attribution-ShareAlike 4.0 License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.\n- Privacy policy\n- About Wikipedia\n- Disclaimers\n- Contact Wikipedia\n- Code of Conduct\n- Developers\n- Statistics\n- Cookie statement\n- Mobile view\n\n- Search\n    - Search\n\nSearch\n\nToggle the table of contents\n\nSinthgunt\n\n5 languages\n\nAdd topic","extracted_metadata":{"origin":{"mimetype":"text/html","binary_hash":1811526491729742173,"filename":"Sinthgunt.md"},"page_count":0},"metadata_field_count":2,"attempts":1,"timestamp":1754064957.7200117,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/simple.pptx","file_size":34865,"file_type":"pptx","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.015845060348510742,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":123.5,"avg_cpu_percent":24.7,"total_io_mb":null,"status":"success","character_count":180,"word_count":35,"error_type":null,"error_message":null,"quality_metrics":{"char_count":180,"word_count":35,"sentence_count":5,"paragraph_count":8,"avg_word_length":3.9714285714285715,"avg_sentence_length":7.0,"extraction_completeness":0.75,"text_coherence":0.8333333333333334,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":97.59054545454545,"gunning_fog_index":3.8521212121212116,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.4396965151515152,"extracted_text":"# Title Slide\n\nWith a subtitle\n\n# Things to think about\n\nHow much is enough?\n\nIf not now when?\n\nWhere have all the flowers gone?\n\nWho do you think you are?\n\nWhat were you thinking?","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":16826392897990412993,"filename":"simple.pptx"},"page_count":2},"metadata_field_count":2,"attempts":1,"timestamp":1754064957.9970763,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_bad_text.pptx","file_size":35632,"file_type":"pptx","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.00621795654296875,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":152.8,"avg_cpu_percent":30.560000000000002,"total_io_mb":null,"status":"success","character_count":120,"word_count":15,"error_type":null,"error_message":null,"quality_metrics":{"char_count":120,"word_count":15,"sentence_count":1,"paragraph_count":1,"avg_word_length":7.066666666666666,"avg_sentence_length":15.0,"extraction_completeness":0.25,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":5.296428571428578,"gunning_fog_index":19.885714285714286,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.20974553571428575,"extracted_text":"# X-Library The fully customisable and copyright-free standard content template collection exclusively for our customers","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":1443005848482130016,"filename":"powerpoint_bad_text.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064958.2656853,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_with_image.pptx","file_size":76480,"file_type":"pptx","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.018028736114501953,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":54.3,"avg_cpu_percent":10.86,"total_io_mb":null,"status":"success","character_count":21,"word_count":4,"error_type":null,"error_message":null,"quality_metrics":{"char_count":21,"word_count":4,"sentence_count":1,"paragraph_count":2,"avg_word_length":4.25,"avg_sentence_length":4.0,"extraction_completeness":0.5,"text_coherence":1.0,"noise_ratio":0.0,"gibberish_ratio":0.0,"flesch_reading_ease":62.79000000000002,"gunning_fog_index":1.2000000000000002,"has_proper_formatting":false,"maintains_line_breaks":false,"preserves_whitespace":false,"table_structure_preserved":false,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.35973750000000004,"extracted_text":"# Docling\n\nImage test","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":8405570356673823665,"filename":"powerpoint_with_image.pptx"},"page_count":1},"metadata_field_count":2,"attempts":1,"timestamp":1754064958.5446568,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/tests-example.xls","file_size":16384,"file_type":"xls","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.0007865428924560547,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":96.5,"avg_cpu_percent":19.3,"total_io_mb":null,"status":"failed","character_count":null,"word_count":null,"error_type":"ConversionError","error_message":"File format not allowed: tests-example.xls","quality_metrics":null,"overall_quality_score":null,"extracted_text":null,"extracted_metadata":null,"metadata_field_count":null,"attempts":1,"timestamp":1754064958.8059883,"platform":"Linux","python_version":"3.13.5"},{"file_path":"test_documents/office/powerpoint_sample.pptx","file_size":45849,"file_type":"pptx","category":"tiny","framework":"docling","iteration":2,"extraction_time":0.027245283126831055,"startup_time":null,"peak_memory_mb":1864.953125,"avg_memory_mb":1864.953125,"peak_cpu_percent":108.7,"avg_cpu_percent":21.740000000000002,"total_io_mb":null,"status":"success","character_count":1178,"word_count":188,"error_type":null,"error_message":null,"quality_metrics":{"char_count":1178,"word_count":188,"sentence_count":9,"paragraph_count":16,"avg_word_length":3.0106382978723403,"avg_sentence_length":20.88888888888889,"extraction_completeness":1.0,"text_coherence":0.5555555555555556,"noise_ratio":0.64,"gibberish_ratio":0.0,"flesch_reading_ease":90.54800000000002,"gunning_fog_index":9.08923076923077,"has_proper_formatting":true,"maintains_line_breaks":true,"preserves_whitespace":true,"table_structure_preserved":true,"format_specific_score":0.0,"expected_content_preserved":false},"overall_quality_score":0.519573888888889,"extracted_text":"# Test Table Slide\n\nWith footnote\n\n|    | Class1          | Class1          | Class1   | Class2   | Class2   | Class2   |\n|----|-----------------|-----------------|----------|----------|----------|----------|\n|    | A merged with B | A merged with B | C        | A        | B        | C        |\n| R1 | True            | False           |          | False    | True     | True     |\n| R2 |                 |                 | True     | False    |          |          |\n| R3 | False           |                 |          |          | False    |          |\n| R3 |                 | True            |          | True     |          |          |\n| R4 |                 |                 | False    |          | False    |          |\n| R4 |                 | True            |          | True     | False    | False    |\n| R4 | True            | False           | True     | False    | True     | False    |\n\n# Second slide title\n\nLet’s introduce a list\n\nWith foo\n\nBar\n\nAnd baz things\n\nA rectangle shape with this text inside.\n\n1. List item4\n2. List item5\n3. List item6\n\n- I1\n- I2\n- I3\n- I4\n\nSome info:\n\n- Item A\n- Item B\n\nMaybe a list?\n\n1. List1\n2. List2\n3. List3\n\n- l1 \n- l2\n- l3","extracted_metadata":{"origin":{"mimetype":"application/vnd.ms-powerpoint","binary_hash":15572290240354948364,"filename":"powerpoint_sample.pptx"},"page_count":3},"metadata_field_count":2,"attempts":1,"timestamp":1754064959.0932817,"platform":"Linux","python_version":"3.13.5"}]